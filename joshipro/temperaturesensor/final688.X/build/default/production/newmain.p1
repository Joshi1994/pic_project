Version 3.2 HI-TECH Software Intermediate Code
"2178 C:\Program Files\Microchip\xc8\v1.44\include\pic16f688.h
[v _RC0 `Vb ~T0 @X0 0 e@56 ]
"2180
[v _RC1 `Vb ~T0 @X0 0 e@57 ]
"2182
[v _RC2 `Vb ~T0 @X0 0 e@58 ]
"2184
[v _RC3 `Vb ~T0 @X0 0 e@59 ]
"2164
[v _RA1 `Vb ~T0 @X0 0 e@41 ]
"2166
[v _RA2 `Vb ~T0 @X0 0 e@42 ]
[v F888 `(v ~T0 @X0 1 tf1`ul ]
"153 C:\Program Files\Microchip\xc8\v1.44\include\pic.h
[v __delay `JF888 ~T0 @X0 0 e ]
[p i __delay ]
"2258 C:\Program Files\Microchip\xc8\v1.44\include\pic16f688.h
[v _TRISA0 `Vb ~T0 @X0 0 e@1064 ]
"2162
[v _RA0 `Vb ~T0 @X0 0 e@40 ]
[p mainexit ]
"1391
[v _ANSEL `Vuc ~T0 @X0 0 e@145 ]
"794
[v _CMCON0 `Vuc ~T0 @X0 0 e@25 ]
"1107
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"2260
[v _TRISA1 `Vb ~T0 @X0 0 e@1065 ]
"2262
[v _TRISA2 `Vb ~T0 @X0 0 e@1066 ]
"2264
[v _TRISA3 `Vb ~T0 @X0 0 e@1067 ]
"2266
[v _TRISA4 `Vb ~T0 @X0 0 e@1068 ]
"2268
[v _TRISA5 `Vb ~T0 @X0 0 e@1069 ]
"2186
[v _RC4 `Vb ~T0 @X0 0 e@60 ]
"2170
[v _RA4 `Vb ~T0 @X0 0 e@44 ]
"2168
[v _RA3 `Vb ~T0 @X0 0 e@43 ]
"2188
[v _RC5 `Vb ~T0 @X0 0 e@61 ]
"2172
[v _RA5 `Vb ~T0 @X0 0 e@45 ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f688.h: 50: extern volatile unsigned char INDF @ 0x000;
"52 C:\Program Files\Microchip\xc8\v1.44\include\pic16f688.h
[; ;pic16f688.h: 52: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f688.h: 57: extern volatile unsigned char TMR0 @ 0x001;
"59
[; ;pic16f688.h: 59: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f688.h: 64: extern volatile unsigned char PCL @ 0x002;
"66
[; ;pic16f688.h: 66: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f688.h: 71: extern volatile unsigned char STATUS @ 0x003;
"73
[; ;pic16f688.h: 73: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f688.h: 76: typedef union {
[; ;pic16f688.h: 77: struct {
[; ;pic16f688.h: 78: unsigned C :1;
[; ;pic16f688.h: 79: unsigned DC :1;
[; ;pic16f688.h: 80: unsigned Z :1;
[; ;pic16f688.h: 81: unsigned nPD :1;
[; ;pic16f688.h: 82: unsigned nTO :1;
[; ;pic16f688.h: 83: unsigned RP :2;
[; ;pic16f688.h: 84: unsigned IRP :1;
[; ;pic16f688.h: 85: };
[; ;pic16f688.h: 86: struct {
[; ;pic16f688.h: 87: unsigned :5;
[; ;pic16f688.h: 88: unsigned RP0 :1;
[; ;pic16f688.h: 89: unsigned RP1 :1;
[; ;pic16f688.h: 90: };
[; ;pic16f688.h: 91: struct {
[; ;pic16f688.h: 92: unsigned CARRY :1;
[; ;pic16f688.h: 93: unsigned :1;
[; ;pic16f688.h: 94: unsigned ZERO :1;
[; ;pic16f688.h: 95: };
[; ;pic16f688.h: 96: } STATUSbits_t;
[; ;pic16f688.h: 97: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f688.h: 157: extern volatile unsigned char FSR @ 0x004;
"159
[; ;pic16f688.h: 159: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f688.h: 164: extern volatile unsigned char PORTA @ 0x005;
"166
[; ;pic16f688.h: 166: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f688.h: 169: typedef union {
[; ;pic16f688.h: 170: struct {
[; ;pic16f688.h: 171: unsigned RA0 :1;
[; ;pic16f688.h: 172: unsigned RA1 :1;
[; ;pic16f688.h: 173: unsigned RA2 :1;
[; ;pic16f688.h: 174: unsigned RA3 :1;
[; ;pic16f688.h: 175: unsigned RA4 :1;
[; ;pic16f688.h: 176: unsigned RA5 :1;
[; ;pic16f688.h: 177: };
[; ;pic16f688.h: 178: } PORTAbits_t;
[; ;pic16f688.h: 179: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f688.h: 214: extern volatile unsigned char PORTC @ 0x007;
"216
[; ;pic16f688.h: 216: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f688.h: 219: typedef union {
[; ;pic16f688.h: 220: struct {
[; ;pic16f688.h: 221: unsigned RC0 :1;
[; ;pic16f688.h: 222: unsigned RC1 :1;
[; ;pic16f688.h: 223: unsigned RC2 :1;
[; ;pic16f688.h: 224: unsigned RC3 :1;
[; ;pic16f688.h: 225: unsigned RC4 :1;
[; ;pic16f688.h: 226: unsigned RC5 :1;
[; ;pic16f688.h: 227: };
[; ;pic16f688.h: 228: } PORTCbits_t;
[; ;pic16f688.h: 229: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f688.h: 264: extern volatile unsigned char PCLATH @ 0x00A;
"266
[; ;pic16f688.h: 266: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f688.h: 269: typedef union {
[; ;pic16f688.h: 270: struct {
[; ;pic16f688.h: 271: unsigned PCLATH :5;
[; ;pic16f688.h: 272: };
[; ;pic16f688.h: 273: } PCLATHbits_t;
[; ;pic16f688.h: 274: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f688.h: 284: extern volatile unsigned char INTCON @ 0x00B;
"286
[; ;pic16f688.h: 286: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f688.h: 289: typedef union {
[; ;pic16f688.h: 290: struct {
[; ;pic16f688.h: 291: unsigned RAIF :1;
[; ;pic16f688.h: 292: unsigned INTF :1;
[; ;pic16f688.h: 293: unsigned T0IF :1;
[; ;pic16f688.h: 294: unsigned RAIE :1;
[; ;pic16f688.h: 295: unsigned INTE :1;
[; ;pic16f688.h: 296: unsigned T0IE :1;
[; ;pic16f688.h: 297: unsigned PEIE :1;
[; ;pic16f688.h: 298: unsigned GIE :1;
[; ;pic16f688.h: 299: };
[; ;pic16f688.h: 300: struct {
[; ;pic16f688.h: 301: unsigned :2;
[; ;pic16f688.h: 302: unsigned TMR0IF :1;
[; ;pic16f688.h: 303: unsigned :2;
[; ;pic16f688.h: 304: unsigned TMR0IE :1;
[; ;pic16f688.h: 305: };
[; ;pic16f688.h: 306: } INTCONbits_t;
[; ;pic16f688.h: 307: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f688.h: 362: extern volatile unsigned char PIR1 @ 0x00C;
"364
[; ;pic16f688.h: 364: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f688.h: 367: typedef union {
[; ;pic16f688.h: 368: struct {
[; ;pic16f688.h: 369: unsigned TMR1IF :1;
[; ;pic16f688.h: 370: unsigned TXIF :1;
[; ;pic16f688.h: 371: unsigned OSFIF :1;
[; ;pic16f688.h: 372: unsigned C1IF :1;
[; ;pic16f688.h: 373: unsigned C2IF :1;
[; ;pic16f688.h: 374: unsigned RCIF :1;
[; ;pic16f688.h: 375: unsigned ADIF :1;
[; ;pic16f688.h: 376: unsigned EEIF :1;
[; ;pic16f688.h: 377: };
[; ;pic16f688.h: 378: struct {
[; ;pic16f688.h: 379: unsigned T1IF :1;
[; ;pic16f688.h: 380: };
[; ;pic16f688.h: 381: } PIR1bits_t;
[; ;pic16f688.h: 382: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f688.h: 432: extern volatile unsigned short TMR1 @ 0x00E;
"434
[; ;pic16f688.h: 434: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f688.h: 439: extern volatile unsigned char TMR1L @ 0x00E;
"441
[; ;pic16f688.h: 441: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f688.h: 446: extern volatile unsigned char TMR1H @ 0x00F;
"448
[; ;pic16f688.h: 448: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f688.h: 453: extern volatile unsigned char T1CON @ 0x010;
"455
[; ;pic16f688.h: 455: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f688.h: 458: typedef union {
[; ;pic16f688.h: 459: struct {
[; ;pic16f688.h: 460: unsigned TMR1ON :1;
[; ;pic16f688.h: 461: unsigned TMR1CS :1;
[; ;pic16f688.h: 462: unsigned nT1SYNC :1;
[; ;pic16f688.h: 463: unsigned T1OSCEN :1;
[; ;pic16f688.h: 464: unsigned T1CKPS :2;
[; ;pic16f688.h: 465: unsigned TMR1GE :1;
[; ;pic16f688.h: 466: unsigned T1GINV :1;
[; ;pic16f688.h: 467: };
[; ;pic16f688.h: 468: struct {
[; ;pic16f688.h: 469: unsigned :4;
[; ;pic16f688.h: 470: unsigned T1CKPS0 :1;
[; ;pic16f688.h: 471: unsigned T1CKPS1 :1;
[; ;pic16f688.h: 472: };
[; ;pic16f688.h: 473: } T1CONbits_t;
[; ;pic16f688.h: 474: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f688.h: 524: extern volatile unsigned char BAUDCTL @ 0x011;
"526
[; ;pic16f688.h: 526: asm("BAUDCTL equ 011h");
[; <" BAUDCTL equ 011h ;# ">
[; ;pic16f688.h: 529: typedef union {
[; ;pic16f688.h: 530: struct {
[; ;pic16f688.h: 531: unsigned ABDEN :1;
[; ;pic16f688.h: 532: unsigned WUE :1;
[; ;pic16f688.h: 533: unsigned :1;
[; ;pic16f688.h: 534: unsigned BRG16 :1;
[; ;pic16f688.h: 535: unsigned SCKP :1;
[; ;pic16f688.h: 536: unsigned :1;
[; ;pic16f688.h: 537: unsigned RCIDL :1;
[; ;pic16f688.h: 538: unsigned ABDOVF :1;
[; ;pic16f688.h: 539: };
[; ;pic16f688.h: 540: } BAUDCTLbits_t;
[; ;pic16f688.h: 541: extern volatile BAUDCTLbits_t BAUDCTLbits @ 0x011;
[; ;pic16f688.h: 576: extern volatile unsigned char SPBRGH @ 0x012;
"578
[; ;pic16f688.h: 578: asm("SPBRGH equ 012h");
[; <" SPBRGH equ 012h ;# ">
[; ;pic16f688.h: 581: typedef union {
[; ;pic16f688.h: 582: struct {
[; ;pic16f688.h: 583: unsigned SPBRGH :8;
[; ;pic16f688.h: 584: };
[; ;pic16f688.h: 585: } SPBRGHbits_t;
[; ;pic16f688.h: 586: extern volatile SPBRGHbits_t SPBRGHbits @ 0x012;
[; ;pic16f688.h: 596: extern volatile unsigned char SPBRG @ 0x013;
"598
[; ;pic16f688.h: 598: asm("SPBRG equ 013h");
[; <" SPBRG equ 013h ;# ">
[; ;pic16f688.h: 603: extern volatile unsigned char RCREG @ 0x014;
"605
[; ;pic16f688.h: 605: asm("RCREG equ 014h");
[; <" RCREG equ 014h ;# ">
[; ;pic16f688.h: 610: extern volatile unsigned char TXREG @ 0x015;
"612
[; ;pic16f688.h: 612: asm("TXREG equ 015h");
[; <" TXREG equ 015h ;# ">
[; ;pic16f688.h: 617: extern volatile unsigned char TXSTA @ 0x016;
"619
[; ;pic16f688.h: 619: asm("TXSTA equ 016h");
[; <" TXSTA equ 016h ;# ">
[; ;pic16f688.h: 622: typedef union {
[; ;pic16f688.h: 623: struct {
[; ;pic16f688.h: 624: unsigned TX9D :1;
[; ;pic16f688.h: 625: unsigned TRMT :1;
[; ;pic16f688.h: 626: unsigned BRGH :1;
[; ;pic16f688.h: 627: unsigned SENDB :1;
[; ;pic16f688.h: 628: unsigned SYNC :1;
[; ;pic16f688.h: 629: unsigned TXEN :1;
[; ;pic16f688.h: 630: unsigned TX9 :1;
[; ;pic16f688.h: 631: unsigned CSRC :1;
[; ;pic16f688.h: 632: };
[; ;pic16f688.h: 633: } TXSTAbits_t;
[; ;pic16f688.h: 634: extern volatile TXSTAbits_t TXSTAbits @ 0x016;
[; ;pic16f688.h: 679: extern volatile unsigned char RCSTA @ 0x017;
"681
[; ;pic16f688.h: 681: asm("RCSTA equ 017h");
[; <" RCSTA equ 017h ;# ">
[; ;pic16f688.h: 684: typedef union {
[; ;pic16f688.h: 685: struct {
[; ;pic16f688.h: 686: unsigned RX9D :1;
[; ;pic16f688.h: 687: unsigned OERR :1;
[; ;pic16f688.h: 688: unsigned FERR :1;
[; ;pic16f688.h: 689: unsigned ADDEN :1;
[; ;pic16f688.h: 690: unsigned CREN :1;
[; ;pic16f688.h: 691: unsigned SREN :1;
[; ;pic16f688.h: 692: unsigned RX9 :1;
[; ;pic16f688.h: 693: unsigned SPEN :1;
[; ;pic16f688.h: 694: };
[; ;pic16f688.h: 695: } RCSTAbits_t;
[; ;pic16f688.h: 696: extern volatile RCSTAbits_t RCSTAbits @ 0x017;
[; ;pic16f688.h: 741: extern volatile unsigned char WDTCON @ 0x018;
"743
[; ;pic16f688.h: 743: asm("WDTCON equ 018h");
[; <" WDTCON equ 018h ;# ">
[; ;pic16f688.h: 746: typedef union {
[; ;pic16f688.h: 747: struct {
[; ;pic16f688.h: 748: unsigned SWDTEN :1;
[; ;pic16f688.h: 749: unsigned WDTPS :4;
[; ;pic16f688.h: 750: };
[; ;pic16f688.h: 751: struct {
[; ;pic16f688.h: 752: unsigned :1;
[; ;pic16f688.h: 753: unsigned WDTPS0 :1;
[; ;pic16f688.h: 754: unsigned WDTPS1 :1;
[; ;pic16f688.h: 755: unsigned WDTPS2 :1;
[; ;pic16f688.h: 756: unsigned WDTPS3 :1;
[; ;pic16f688.h: 757: };
[; ;pic16f688.h: 758: } WDTCONbits_t;
[; ;pic16f688.h: 759: extern volatile WDTCONbits_t WDTCONbits @ 0x018;
[; ;pic16f688.h: 794: extern volatile unsigned char CMCON0 @ 0x019;
"796
[; ;pic16f688.h: 796: asm("CMCON0 equ 019h");
[; <" CMCON0 equ 019h ;# ">
[; ;pic16f688.h: 799: typedef union {
[; ;pic16f688.h: 800: struct {
[; ;pic16f688.h: 801: unsigned CM :3;
[; ;pic16f688.h: 802: unsigned CIS :1;
[; ;pic16f688.h: 803: unsigned C1INV :1;
[; ;pic16f688.h: 804: unsigned C2INV :1;
[; ;pic16f688.h: 805: unsigned C1OUT :1;
[; ;pic16f688.h: 806: unsigned C2OUT :1;
[; ;pic16f688.h: 807: };
[; ;pic16f688.h: 808: struct {
[; ;pic16f688.h: 809: unsigned CM0 :1;
[; ;pic16f688.h: 810: unsigned CM1 :1;
[; ;pic16f688.h: 811: unsigned CM2 :1;
[; ;pic16f688.h: 812: };
[; ;pic16f688.h: 813: } CMCON0bits_t;
[; ;pic16f688.h: 814: extern volatile CMCON0bits_t CMCON0bits @ 0x019;
[; ;pic16f688.h: 864: extern volatile unsigned char CMCON1 @ 0x01A;
"866
[; ;pic16f688.h: 866: asm("CMCON1 equ 01Ah");
[; <" CMCON1 equ 01Ah ;# ">
[; ;pic16f688.h: 869: typedef union {
[; ;pic16f688.h: 870: struct {
[; ;pic16f688.h: 871: unsigned C2SYNC :1;
[; ;pic16f688.h: 872: unsigned T1GSS :1;
[; ;pic16f688.h: 873: };
[; ;pic16f688.h: 874: } CMCON1bits_t;
[; ;pic16f688.h: 875: extern volatile CMCON1bits_t CMCON1bits @ 0x01A;
[; ;pic16f688.h: 890: extern volatile unsigned char ADRESH @ 0x01E;
"892
[; ;pic16f688.h: 892: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f688.h: 897: extern volatile unsigned char ADCON0 @ 0x01F;
"899
[; ;pic16f688.h: 899: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f688.h: 902: typedef union {
[; ;pic16f688.h: 903: struct {
[; ;pic16f688.h: 904: unsigned ADON :1;
[; ;pic16f688.h: 905: unsigned GO_nDONE :1;
[; ;pic16f688.h: 906: unsigned CHS :3;
[; ;pic16f688.h: 907: unsigned :1;
[; ;pic16f688.h: 908: unsigned VCFG :1;
[; ;pic16f688.h: 909: unsigned ADFM :1;
[; ;pic16f688.h: 910: };
[; ;pic16f688.h: 911: struct {
[; ;pic16f688.h: 912: unsigned :1;
[; ;pic16f688.h: 913: unsigned GO :1;
[; ;pic16f688.h: 914: unsigned CHS0 :1;
[; ;pic16f688.h: 915: unsigned CHS1 :1;
[; ;pic16f688.h: 916: unsigned CHS2 :1;
[; ;pic16f688.h: 917: };
[; ;pic16f688.h: 918: struct {
[; ;pic16f688.h: 919: unsigned :1;
[; ;pic16f688.h: 920: unsigned nDONE :1;
[; ;pic16f688.h: 921: };
[; ;pic16f688.h: 922: struct {
[; ;pic16f688.h: 923: unsigned :1;
[; ;pic16f688.h: 924: unsigned GO_DONE :1;
[; ;pic16f688.h: 925: };
[; ;pic16f688.h: 926: } ADCON0bits_t;
[; ;pic16f688.h: 927: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f688.h: 987: extern volatile unsigned char OPTION_REG @ 0x081;
"989
[; ;pic16f688.h: 989: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f688.h: 992: typedef union {
[; ;pic16f688.h: 993: struct {
[; ;pic16f688.h: 994: unsigned PS :3;
[; ;pic16f688.h: 995: unsigned PSA :1;
[; ;pic16f688.h: 996: unsigned T0SE :1;
[; ;pic16f688.h: 997: unsigned T0CS :1;
[; ;pic16f688.h: 998: unsigned INTEDG :1;
[; ;pic16f688.h: 999: unsigned nRAPU :1;
[; ;pic16f688.h: 1000: };
[; ;pic16f688.h: 1001: struct {
[; ;pic16f688.h: 1002: unsigned PS0 :1;
[; ;pic16f688.h: 1003: unsigned PS1 :1;
[; ;pic16f688.h: 1004: unsigned PS2 :1;
[; ;pic16f688.h: 1005: };
[; ;pic16f688.h: 1006: } OPTION_REGbits_t;
[; ;pic16f688.h: 1007: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f688.h: 1057: extern volatile unsigned char TRISA @ 0x085;
"1059
[; ;pic16f688.h: 1059: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f688.h: 1062: typedef union {
[; ;pic16f688.h: 1063: struct {
[; ;pic16f688.h: 1064: unsigned TRISA0 :1;
[; ;pic16f688.h: 1065: unsigned TRISA1 :1;
[; ;pic16f688.h: 1066: unsigned TRISA2 :1;
[; ;pic16f688.h: 1067: unsigned TRISA3 :1;
[; ;pic16f688.h: 1068: unsigned TRISA4 :1;
[; ;pic16f688.h: 1069: unsigned TRISA5 :1;
[; ;pic16f688.h: 1070: };
[; ;pic16f688.h: 1071: } TRISAbits_t;
[; ;pic16f688.h: 1072: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f688.h: 1107: extern volatile unsigned char TRISC @ 0x087;
"1109
[; ;pic16f688.h: 1109: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f688.h: 1112: typedef union {
[; ;pic16f688.h: 1113: struct {
[; ;pic16f688.h: 1114: unsigned TRISC0 :1;
[; ;pic16f688.h: 1115: unsigned TRISC1 :1;
[; ;pic16f688.h: 1116: unsigned TRISC2 :1;
[; ;pic16f688.h: 1117: unsigned TRISC3 :1;
[; ;pic16f688.h: 1118: unsigned TRISC4 :1;
[; ;pic16f688.h: 1119: unsigned TRISC5 :1;
[; ;pic16f688.h: 1120: };
[; ;pic16f688.h: 1121: } TRISCbits_t;
[; ;pic16f688.h: 1122: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f688.h: 1157: extern volatile unsigned char PIE1 @ 0x08C;
"1159
[; ;pic16f688.h: 1159: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f688.h: 1162: typedef union {
[; ;pic16f688.h: 1163: struct {
[; ;pic16f688.h: 1164: unsigned TMR1IE :1;
[; ;pic16f688.h: 1165: unsigned TXIE :1;
[; ;pic16f688.h: 1166: unsigned OSFIE :1;
[; ;pic16f688.h: 1167: unsigned C1IE :1;
[; ;pic16f688.h: 1168: unsigned C2IE :1;
[; ;pic16f688.h: 1169: unsigned RCIE :1;
[; ;pic16f688.h: 1170: unsigned ADIE :1;
[; ;pic16f688.h: 1171: unsigned EEIE :1;
[; ;pic16f688.h: 1172: };
[; ;pic16f688.h: 1173: struct {
[; ;pic16f688.h: 1174: unsigned T1IE :1;
[; ;pic16f688.h: 1175: };
[; ;pic16f688.h: 1176: } PIE1bits_t;
[; ;pic16f688.h: 1177: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f688.h: 1227: extern volatile unsigned char PCON @ 0x08E;
"1229
[; ;pic16f688.h: 1229: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f688.h: 1232: typedef union {
[; ;pic16f688.h: 1233: struct {
[; ;pic16f688.h: 1234: unsigned nBOR :1;
[; ;pic16f688.h: 1235: unsigned nPOR :1;
[; ;pic16f688.h: 1236: unsigned :2;
[; ;pic16f688.h: 1237: unsigned SBODEN :1;
[; ;pic16f688.h: 1238: unsigned ULPWUE :1;
[; ;pic16f688.h: 1239: };
[; ;pic16f688.h: 1240: struct {
[; ;pic16f688.h: 1241: unsigned nBOD :1;
[; ;pic16f688.h: 1242: };
[; ;pic16f688.h: 1243: } PCONbits_t;
[; ;pic16f688.h: 1244: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f688.h: 1274: extern volatile unsigned char OSCCON @ 0x08F;
"1276
[; ;pic16f688.h: 1276: asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
[; ;pic16f688.h: 1279: typedef union {
[; ;pic16f688.h: 1280: struct {
[; ;pic16f688.h: 1281: unsigned SCS :1;
[; ;pic16f688.h: 1282: unsigned LTS :1;
[; ;pic16f688.h: 1283: unsigned HTS :1;
[; ;pic16f688.h: 1284: unsigned OSTS :1;
[; ;pic16f688.h: 1285: unsigned IOSCF :3;
[; ;pic16f688.h: 1286: };
[; ;pic16f688.h: 1287: struct {
[; ;pic16f688.h: 1288: unsigned :4;
[; ;pic16f688.h: 1289: unsigned IRCF0 :1;
[; ;pic16f688.h: 1290: unsigned IRCF1 :1;
[; ;pic16f688.h: 1291: unsigned IRCF2 :1;
[; ;pic16f688.h: 1292: };
[; ;pic16f688.h: 1293: } OSCCONbits_t;
[; ;pic16f688.h: 1294: extern volatile OSCCONbits_t OSCCONbits @ 0x08F;
[; ;pic16f688.h: 1339: extern volatile unsigned char OSCTUNE @ 0x090;
"1341
[; ;pic16f688.h: 1341: asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
[; ;pic16f688.h: 1344: typedef union {
[; ;pic16f688.h: 1345: struct {
[; ;pic16f688.h: 1346: unsigned TUN :5;
[; ;pic16f688.h: 1347: };
[; ;pic16f688.h: 1348: struct {
[; ;pic16f688.h: 1349: unsigned TUN0 :1;
[; ;pic16f688.h: 1350: unsigned TUN1 :1;
[; ;pic16f688.h: 1351: unsigned TUN2 :1;
[; ;pic16f688.h: 1352: unsigned TUN3 :1;
[; ;pic16f688.h: 1353: unsigned TUN4 :1;
[; ;pic16f688.h: 1354: };
[; ;pic16f688.h: 1355: } OSCTUNEbits_t;
[; ;pic16f688.h: 1356: extern volatile OSCTUNEbits_t OSCTUNEbits @ 0x090;
[; ;pic16f688.h: 1391: extern volatile unsigned char ANSEL @ 0x091;
"1393
[; ;pic16f688.h: 1393: asm("ANSEL equ 091h");
[; <" ANSEL equ 091h ;# ">
[; ;pic16f688.h: 1396: typedef union {
[; ;pic16f688.h: 1397: struct {
[; ;pic16f688.h: 1398: unsigned ANS0 :1;
[; ;pic16f688.h: 1399: unsigned ANS1 :1;
[; ;pic16f688.h: 1400: unsigned ANS2 :1;
[; ;pic16f688.h: 1401: unsigned ANS3 :1;
[; ;pic16f688.h: 1402: unsigned ANS4 :1;
[; ;pic16f688.h: 1403: unsigned ANS5 :1;
[; ;pic16f688.h: 1404: unsigned ANS6 :1;
[; ;pic16f688.h: 1405: unsigned ANS7 :1;
[; ;pic16f688.h: 1406: };
[; ;pic16f688.h: 1407: } ANSELbits_t;
[; ;pic16f688.h: 1408: extern volatile ANSELbits_t ANSELbits @ 0x091;
[; ;pic16f688.h: 1453: extern volatile unsigned char WPUA @ 0x095;
"1455
[; ;pic16f688.h: 1455: asm("WPUA equ 095h");
[; <" WPUA equ 095h ;# ">
[; ;pic16f688.h: 1458: extern volatile unsigned char WPU @ 0x095;
"1460
[; ;pic16f688.h: 1460: asm("WPU equ 095h");
[; <" WPU equ 095h ;# ">
[; ;pic16f688.h: 1463: typedef union {
[; ;pic16f688.h: 1464: struct {
[; ;pic16f688.h: 1465: unsigned WPUA0 :1;
[; ;pic16f688.h: 1466: unsigned WPUA1 :1;
[; ;pic16f688.h: 1467: unsigned WPUA2 :1;
[; ;pic16f688.h: 1468: unsigned :1;
[; ;pic16f688.h: 1469: unsigned WPUA4 :1;
[; ;pic16f688.h: 1470: unsigned WPUA5 :1;
[; ;pic16f688.h: 1471: };
[; ;pic16f688.h: 1472: struct {
[; ;pic16f688.h: 1473: unsigned WPU0 :1;
[; ;pic16f688.h: 1474: unsigned WPU1 :1;
[; ;pic16f688.h: 1475: unsigned WPU2 :1;
[; ;pic16f688.h: 1476: unsigned :1;
[; ;pic16f688.h: 1477: unsigned WPU4 :1;
[; ;pic16f688.h: 1478: unsigned WPU5 :1;
[; ;pic16f688.h: 1479: };
[; ;pic16f688.h: 1480: } WPUAbits_t;
[; ;pic16f688.h: 1481: extern volatile WPUAbits_t WPUAbits @ 0x095;
[; ;pic16f688.h: 1534: typedef union {
[; ;pic16f688.h: 1535: struct {
[; ;pic16f688.h: 1536: unsigned WPUA0 :1;
[; ;pic16f688.h: 1537: unsigned WPUA1 :1;
[; ;pic16f688.h: 1538: unsigned WPUA2 :1;
[; ;pic16f688.h: 1539: unsigned :1;
[; ;pic16f688.h: 1540: unsigned WPUA4 :1;
[; ;pic16f688.h: 1541: unsigned WPUA5 :1;
[; ;pic16f688.h: 1542: };
[; ;pic16f688.h: 1543: struct {
[; ;pic16f688.h: 1544: unsigned WPU0 :1;
[; ;pic16f688.h: 1545: unsigned WPU1 :1;
[; ;pic16f688.h: 1546: unsigned WPU2 :1;
[; ;pic16f688.h: 1547: unsigned :1;
[; ;pic16f688.h: 1548: unsigned WPU4 :1;
[; ;pic16f688.h: 1549: unsigned WPU5 :1;
[; ;pic16f688.h: 1550: };
[; ;pic16f688.h: 1551: } WPUbits_t;
[; ;pic16f688.h: 1552: extern volatile WPUbits_t WPUbits @ 0x095;
[; ;pic16f688.h: 1607: extern volatile unsigned char IOCA @ 0x096;
"1609
[; ;pic16f688.h: 1609: asm("IOCA equ 096h");
[; <" IOCA equ 096h ;# ">
[; ;pic16f688.h: 1612: extern volatile unsigned char IOC @ 0x096;
"1614
[; ;pic16f688.h: 1614: asm("IOC equ 096h");
[; <" IOC equ 096h ;# ">
[; ;pic16f688.h: 1617: typedef union {
[; ;pic16f688.h: 1618: struct {
[; ;pic16f688.h: 1619: unsigned IOCA0 :1;
[; ;pic16f688.h: 1620: unsigned IOCA1 :1;
[; ;pic16f688.h: 1621: unsigned IOCA2 :1;
[; ;pic16f688.h: 1622: unsigned IOCA3 :1;
[; ;pic16f688.h: 1623: unsigned IOCA4 :1;
[; ;pic16f688.h: 1624: unsigned IOCA5 :1;
[; ;pic16f688.h: 1625: };
[; ;pic16f688.h: 1626: struct {
[; ;pic16f688.h: 1627: unsigned IOC0 :1;
[; ;pic16f688.h: 1628: unsigned IOC1 :1;
[; ;pic16f688.h: 1629: unsigned IOC2 :1;
[; ;pic16f688.h: 1630: unsigned IOC3 :1;
[; ;pic16f688.h: 1631: unsigned IOC4 :1;
[; ;pic16f688.h: 1632: unsigned IOC5 :1;
[; ;pic16f688.h: 1633: };
[; ;pic16f688.h: 1634: } IOCAbits_t;
[; ;pic16f688.h: 1635: extern volatile IOCAbits_t IOCAbits @ 0x096;
[; ;pic16f688.h: 1698: typedef union {
[; ;pic16f688.h: 1699: struct {
[; ;pic16f688.h: 1700: unsigned IOCA0 :1;
[; ;pic16f688.h: 1701: unsigned IOCA1 :1;
[; ;pic16f688.h: 1702: unsigned IOCA2 :1;
[; ;pic16f688.h: 1703: unsigned IOCA3 :1;
[; ;pic16f688.h: 1704: unsigned IOCA4 :1;
[; ;pic16f688.h: 1705: unsigned IOCA5 :1;
[; ;pic16f688.h: 1706: };
[; ;pic16f688.h: 1707: struct {
[; ;pic16f688.h: 1708: unsigned IOC0 :1;
[; ;pic16f688.h: 1709: unsigned IOC1 :1;
[; ;pic16f688.h: 1710: unsigned IOC2 :1;
[; ;pic16f688.h: 1711: unsigned IOC3 :1;
[; ;pic16f688.h: 1712: unsigned IOC4 :1;
[; ;pic16f688.h: 1713: unsigned IOC5 :1;
[; ;pic16f688.h: 1714: };
[; ;pic16f688.h: 1715: } IOCbits_t;
[; ;pic16f688.h: 1716: extern volatile IOCbits_t IOCbits @ 0x096;
[; ;pic16f688.h: 1781: extern volatile unsigned char EEDATH @ 0x097;
"1783
[; ;pic16f688.h: 1783: asm("EEDATH equ 097h");
[; <" EEDATH equ 097h ;# ">
[; ;pic16f688.h: 1788: extern volatile unsigned char EEADRH @ 0x098;
"1790
[; ;pic16f688.h: 1790: asm("EEADRH equ 098h");
[; <" EEADRH equ 098h ;# ">
[; ;pic16f688.h: 1795: extern volatile unsigned char VRCON @ 0x099;
"1797
[; ;pic16f688.h: 1797: asm("VRCON equ 099h");
[; <" VRCON equ 099h ;# ">
[; ;pic16f688.h: 1800: typedef union {
[; ;pic16f688.h: 1801: struct {
[; ;pic16f688.h: 1802: unsigned VR :4;
[; ;pic16f688.h: 1803: unsigned :1;
[; ;pic16f688.h: 1804: unsigned VRR :1;
[; ;pic16f688.h: 1805: unsigned :1;
[; ;pic16f688.h: 1806: unsigned VREN :1;
[; ;pic16f688.h: 1807: };
[; ;pic16f688.h: 1808: struct {
[; ;pic16f688.h: 1809: unsigned VR0 :1;
[; ;pic16f688.h: 1810: unsigned VR1 :1;
[; ;pic16f688.h: 1811: unsigned VR2 :1;
[; ;pic16f688.h: 1812: unsigned VR3 :1;
[; ;pic16f688.h: 1813: };
[; ;pic16f688.h: 1814: } VRCONbits_t;
[; ;pic16f688.h: 1815: extern volatile VRCONbits_t VRCONbits @ 0x099;
[; ;pic16f688.h: 1855: extern volatile unsigned char EEDAT @ 0x09A;
"1857
[; ;pic16f688.h: 1857: asm("EEDAT equ 09Ah");
[; <" EEDAT equ 09Ah ;# ">
[; ;pic16f688.h: 1860: extern volatile unsigned char EEDATA @ 0x09A;
"1862
[; ;pic16f688.h: 1862: asm("EEDATA equ 09Ah");
[; <" EEDATA equ 09Ah ;# ">
[; ;pic16f688.h: 1865: typedef union {
[; ;pic16f688.h: 1866: struct {
[; ;pic16f688.h: 1867: unsigned EEDAT :8;
[; ;pic16f688.h: 1868: };
[; ;pic16f688.h: 1869: } EEDATbits_t;
[; ;pic16f688.h: 1870: extern volatile EEDATbits_t EEDATbits @ 0x09A;
[; ;pic16f688.h: 1878: typedef union {
[; ;pic16f688.h: 1879: struct {
[; ;pic16f688.h: 1880: unsigned EEDAT :8;
[; ;pic16f688.h: 1881: };
[; ;pic16f688.h: 1882: } EEDATAbits_t;
[; ;pic16f688.h: 1883: extern volatile EEDATAbits_t EEDATAbits @ 0x09A;
[; ;pic16f688.h: 1893: extern volatile unsigned char EEADR @ 0x09B;
"1895
[; ;pic16f688.h: 1895: asm("EEADR equ 09Bh");
[; <" EEADR equ 09Bh ;# ">
[; ;pic16f688.h: 1900: extern volatile unsigned char EECON1 @ 0x09C;
"1902
[; ;pic16f688.h: 1902: asm("EECON1 equ 09Ch");
[; <" EECON1 equ 09Ch ;# ">
[; ;pic16f688.h: 1905: typedef union {
[; ;pic16f688.h: 1906: struct {
[; ;pic16f688.h: 1907: unsigned RD :1;
[; ;pic16f688.h: 1908: unsigned WR :1;
[; ;pic16f688.h: 1909: unsigned WREN :1;
[; ;pic16f688.h: 1910: unsigned WRERR :1;
[; ;pic16f688.h: 1911: unsigned :3;
[; ;pic16f688.h: 1912: unsigned EEPGD :1;
[; ;pic16f688.h: 1913: };
[; ;pic16f688.h: 1914: } EECON1bits_t;
[; ;pic16f688.h: 1915: extern volatile EECON1bits_t EECON1bits @ 0x09C;
[; ;pic16f688.h: 1945: extern volatile unsigned char EECON2 @ 0x09D;
"1947
[; ;pic16f688.h: 1947: asm("EECON2 equ 09Dh");
[; <" EECON2 equ 09Dh ;# ">
[; ;pic16f688.h: 1952: extern volatile unsigned char ADRESL @ 0x09E;
"1954
[; ;pic16f688.h: 1954: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f688.h: 1959: extern volatile unsigned char ADCON1 @ 0x09F;
"1961
[; ;pic16f688.h: 1961: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f688.h: 1964: typedef union {
[; ;pic16f688.h: 1965: struct {
[; ;pic16f688.h: 1966: unsigned :4;
[; ;pic16f688.h: 1967: unsigned ADCS :3;
[; ;pic16f688.h: 1968: };
[; ;pic16f688.h: 1969: struct {
[; ;pic16f688.h: 1970: unsigned :4;
[; ;pic16f688.h: 1971: unsigned ADCS0 :1;
[; ;pic16f688.h: 1972: unsigned ADCS1 :1;
[; ;pic16f688.h: 1973: unsigned ADCS2 :1;
[; ;pic16f688.h: 1974: };
[; ;pic16f688.h: 1975: } ADCON1bits_t;
[; ;pic16f688.h: 1976: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f688.h: 2006: extern volatile __bit ABDEN @ (((unsigned) &BAUDCTL)*8) + 0;
[; ;pic16f688.h: 2008: extern volatile __bit ABDOVF @ (((unsigned) &BAUDCTL)*8) + 7;
[; ;pic16f688.h: 2010: extern volatile __bit ADCS0 @ (((unsigned) &ADCON1)*8) + 4;
[; ;pic16f688.h: 2012: extern volatile __bit ADCS1 @ (((unsigned) &ADCON1)*8) + 5;
[; ;pic16f688.h: 2014: extern volatile __bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;
[; ;pic16f688.h: 2016: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f688.h: 2018: extern volatile __bit ADFM @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f688.h: 2020: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f688.h: 2022: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f688.h: 2024: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f688.h: 2026: extern volatile __bit ANS0 @ (((unsigned) &ANSEL)*8) + 0;
[; ;pic16f688.h: 2028: extern volatile __bit ANS1 @ (((unsigned) &ANSEL)*8) + 1;
[; ;pic16f688.h: 2030: extern volatile __bit ANS2 @ (((unsigned) &ANSEL)*8) + 2;
[; ;pic16f688.h: 2032: extern volatile __bit ANS3 @ (((unsigned) &ANSEL)*8) + 3;
[; ;pic16f688.h: 2034: extern volatile __bit ANS4 @ (((unsigned) &ANSEL)*8) + 4;
[; ;pic16f688.h: 2036: extern volatile __bit ANS5 @ (((unsigned) &ANSEL)*8) + 5;
[; ;pic16f688.h: 2038: extern volatile __bit ANS6 @ (((unsigned) &ANSEL)*8) + 6;
[; ;pic16f688.h: 2040: extern volatile __bit ANS7 @ (((unsigned) &ANSEL)*8) + 7;
[; ;pic16f688.h: 2042: extern volatile __bit BRG16 @ (((unsigned) &BAUDCTL)*8) + 3;
[; ;pic16f688.h: 2044: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f688.h: 2046: extern volatile __bit C1IE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f688.h: 2048: extern volatile __bit C1IF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f688.h: 2050: extern volatile __bit C1INV @ (((unsigned) &CMCON0)*8) + 4;
[; ;pic16f688.h: 2052: extern volatile __bit C1OUT @ (((unsigned) &CMCON0)*8) + 6;
[; ;pic16f688.h: 2054: extern volatile __bit C2IE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f688.h: 2056: extern volatile __bit C2IF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f688.h: 2058: extern volatile __bit C2INV @ (((unsigned) &CMCON0)*8) + 5;
[; ;pic16f688.h: 2060: extern volatile __bit C2OUT @ (((unsigned) &CMCON0)*8) + 7;
[; ;pic16f688.h: 2062: extern volatile __bit C2SYNC @ (((unsigned) &CMCON1)*8) + 0;
[; ;pic16f688.h: 2064: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f688.h: 2066: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f688.h: 2068: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f688.h: 2070: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f688.h: 2072: extern volatile __bit CIS @ (((unsigned) &CMCON0)*8) + 3;
[; ;pic16f688.h: 2074: extern volatile __bit CM0 @ (((unsigned) &CMCON0)*8) + 0;
[; ;pic16f688.h: 2076: extern volatile __bit CM1 @ (((unsigned) &CMCON0)*8) + 1;
[; ;pic16f688.h: 2078: extern volatile __bit CM2 @ (((unsigned) &CMCON0)*8) + 2;
[; ;pic16f688.h: 2080: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f688.h: 2082: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f688.h: 2084: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f688.h: 2086: extern volatile __bit EEIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f688.h: 2088: extern volatile __bit EEIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f688.h: 2090: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f688.h: 2092: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f688.h: 2094: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f688.h: 2096: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f688.h: 2098: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f688.h: 2100: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f688.h: 2102: extern volatile __bit HTS @ (((unsigned) &OSCCON)*8) + 2;
[; ;pic16f688.h: 2104: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f688.h: 2106: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f688.h: 2108: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f688.h: 2110: extern volatile __bit IOC0 @ (((unsigned) &IOCA)*8) + 0;
[; ;pic16f688.h: 2112: extern volatile __bit IOC1 @ (((unsigned) &IOCA)*8) + 1;
[; ;pic16f688.h: 2114: extern volatile __bit IOC2 @ (((unsigned) &IOCA)*8) + 2;
[; ;pic16f688.h: 2116: extern volatile __bit IOC3 @ (((unsigned) &IOCA)*8) + 3;
[; ;pic16f688.h: 2118: extern volatile __bit IOC4 @ (((unsigned) &IOCA)*8) + 4;
[; ;pic16f688.h: 2120: extern volatile __bit IOC5 @ (((unsigned) &IOCA)*8) + 5;
[; ;pic16f688.h: 2122: extern volatile __bit IOCA0 @ (((unsigned) &IOCA)*8) + 0;
[; ;pic16f688.h: 2124: extern volatile __bit IOCA1 @ (((unsigned) &IOCA)*8) + 1;
[; ;pic16f688.h: 2126: extern volatile __bit IOCA2 @ (((unsigned) &IOCA)*8) + 2;
[; ;pic16f688.h: 2128: extern volatile __bit IOCA3 @ (((unsigned) &IOCA)*8) + 3;
[; ;pic16f688.h: 2130: extern volatile __bit IOCA4 @ (((unsigned) &IOCA)*8) + 4;
[; ;pic16f688.h: 2132: extern volatile __bit IOCA5 @ (((unsigned) &IOCA)*8) + 5;
[; ;pic16f688.h: 2134: extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 4;
[; ;pic16f688.h: 2136: extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 5;
[; ;pic16f688.h: 2138: extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 6;
[; ;pic16f688.h: 2140: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f688.h: 2142: extern volatile __bit LTS @ (((unsigned) &OSCCON)*8) + 1;
[; ;pic16f688.h: 2144: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f688.h: 2146: extern volatile __bit OSFIE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f688.h: 2148: extern volatile __bit OSFIF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f688.h: 2150: extern volatile __bit OSTS @ (((unsigned) &OSCCON)*8) + 3;
[; ;pic16f688.h: 2152: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f688.h: 2154: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f688.h: 2156: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f688.h: 2158: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f688.h: 2160: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f688.h: 2162: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f688.h: 2164: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f688.h: 2166: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f688.h: 2168: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f688.h: 2170: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f688.h: 2172: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f688.h: 2174: extern volatile __bit RAIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f688.h: 2176: extern volatile __bit RAIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f688.h: 2178: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f688.h: 2180: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f688.h: 2182: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f688.h: 2184: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f688.h: 2186: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f688.h: 2188: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f688.h: 2190: extern volatile __bit RCIDL @ (((unsigned) &BAUDCTL)*8) + 6;
[; ;pic16f688.h: 2192: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f688.h: 2194: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f688.h: 2196: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f688.h: 2198: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f688.h: 2200: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f688.h: 2202: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f688.h: 2204: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f688.h: 2206: extern volatile __bit SBODEN @ (((unsigned) &PCON)*8) + 4;
[; ;pic16f688.h: 2208: extern volatile __bit SCKP @ (((unsigned) &BAUDCTL)*8) + 4;
[; ;pic16f688.h: 2210: extern volatile __bit SCS @ (((unsigned) &OSCCON)*8) + 0;
[; ;pic16f688.h: 2212: extern volatile __bit SENDB @ (((unsigned) &TXSTA)*8) + 3;
[; ;pic16f688.h: 2214: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f688.h: 2216: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f688.h: 2218: extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;
[; ;pic16f688.h: 2220: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f688.h: 2222: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f688.h: 2224: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f688.h: 2226: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f688.h: 2228: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f688.h: 2230: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f688.h: 2232: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f688.h: 2234: extern volatile __bit T1GINV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f688.h: 2236: extern volatile __bit T1GSS @ (((unsigned) &CMCON1)*8) + 1;
[; ;pic16f688.h: 2238: extern volatile __bit T1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f688.h: 2240: extern volatile __bit T1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f688.h: 2242: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f688.h: 2244: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f688.h: 2246: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f688.h: 2248: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f688.h: 2250: extern volatile __bit TMR1GE @ (((unsigned) &T1CON)*8) + 6;
[; ;pic16f688.h: 2252: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f688.h: 2254: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f688.h: 2256: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f688.h: 2258: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f688.h: 2260: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f688.h: 2262: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f688.h: 2264: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f688.h: 2266: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f688.h: 2268: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f688.h: 2270: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f688.h: 2272: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f688.h: 2274: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f688.h: 2276: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f688.h: 2278: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f688.h: 2280: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f688.h: 2282: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f688.h: 2284: extern volatile __bit TUN0 @ (((unsigned) &OSCTUNE)*8) + 0;
[; ;pic16f688.h: 2286: extern volatile __bit TUN1 @ (((unsigned) &OSCTUNE)*8) + 1;
[; ;pic16f688.h: 2288: extern volatile __bit TUN2 @ (((unsigned) &OSCTUNE)*8) + 2;
[; ;pic16f688.h: 2290: extern volatile __bit TUN3 @ (((unsigned) &OSCTUNE)*8) + 3;
[; ;pic16f688.h: 2292: extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;
[; ;pic16f688.h: 2294: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f688.h: 2296: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f688.h: 2298: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f688.h: 2300: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f688.h: 2302: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f688.h: 2304: extern volatile __bit ULPWUE @ (((unsigned) &PCON)*8) + 5;
[; ;pic16f688.h: 2306: extern volatile __bit VCFG @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f688.h: 2308: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic16f688.h: 2310: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic16f688.h: 2312: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic16f688.h: 2314: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic16f688.h: 2316: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic16f688.h: 2318: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic16f688.h: 2320: extern volatile __bit WDTPS0 @ (((unsigned) &WDTCON)*8) + 1;
[; ;pic16f688.h: 2322: extern volatile __bit WDTPS1 @ (((unsigned) &WDTCON)*8) + 2;
[; ;pic16f688.h: 2324: extern volatile __bit WDTPS2 @ (((unsigned) &WDTCON)*8) + 3;
[; ;pic16f688.h: 2326: extern volatile __bit WDTPS3 @ (((unsigned) &WDTCON)*8) + 4;
[; ;pic16f688.h: 2328: extern volatile __bit WPU0 @ (((unsigned) &WPUA)*8) + 0;
[; ;pic16f688.h: 2330: extern volatile __bit WPU1 @ (((unsigned) &WPUA)*8) + 1;
[; ;pic16f688.h: 2332: extern volatile __bit WPU2 @ (((unsigned) &WPUA)*8) + 2;
[; ;pic16f688.h: 2334: extern volatile __bit WPU4 @ (((unsigned) &WPUA)*8) + 4;
[; ;pic16f688.h: 2336: extern volatile __bit WPU5 @ (((unsigned) &WPUA)*8) + 5;
[; ;pic16f688.h: 2338: extern volatile __bit WPUA0 @ (((unsigned) &WPUA)*8) + 0;
[; ;pic16f688.h: 2340: extern volatile __bit WPUA1 @ (((unsigned) &WPUA)*8) + 1;
[; ;pic16f688.h: 2342: extern volatile __bit WPUA2 @ (((unsigned) &WPUA)*8) + 2;
[; ;pic16f688.h: 2344: extern volatile __bit WPUA4 @ (((unsigned) &WPUA)*8) + 4;
[; ;pic16f688.h: 2346: extern volatile __bit WPUA5 @ (((unsigned) &WPUA)*8) + 5;
[; ;pic16f688.h: 2348: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f688.h: 2350: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f688.h: 2352: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f688.h: 2354: extern volatile __bit WUE @ (((unsigned) &BAUDCTL)*8) + 1;
[; ;pic16f688.h: 2356: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f688.h: 2358: extern volatile __bit nBOD @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f688.h: 2360: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f688.h: 2362: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f688.h: 2364: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f688.h: 2366: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f688.h: 2368: extern volatile __bit nRAPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f688.h: 2370: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f688.h: 2372: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic.h: 29: extern void __nop(void);
[; ;pic.h: 78: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 153: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 155: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 193: extern __bank0 unsigned char __resetbits;
[; ;pic.h: 194: extern __bank0 __bit __powerdown;
[; ;pic.h: 195: extern __bank0 __bit __timeout;
"26 newmain.c
[p x FOSC=INTOSCIO ]
"27
[p x WDTE=OFF ]
"28
[p x PWRTE=OFF ]
"29
[p x MCLRE=OFF ]
"30
[p x CP=OFF ]
"31
[p x CPD=OFF ]
"32
[p x BOREN=OFF ]
"33
[p x IESO=ON ]
"34
[p x FCMEN=ON ]
"43
[v _Lcd_Port `(v ~T0 @X0 1 ef1`uc ]
"44
{
[; ;newmain.c: 43: void Lcd_Port(char a)
[; ;newmain.c: 44: {
[e :U _Lcd_Port ]
"43
[v _a `uc ~T0 @X0 1 r1 ]
"44
[f ]
[; ;newmain.c: 45: if(a & 1)
"45
[e $ ! != & -> _a `i -> 1 `i -> 0 `i 87  ]
[; ;newmain.c: 46: RC0 = 1;
"46
[e = _RC0 -> -> 1 `i `b ]
[e $U 88  ]
"47
[e :U 87 ]
[; ;newmain.c: 47: else
[; ;newmain.c: 48: RC0 = 0;
"48
[e = _RC0 -> -> 0 `i `b ]
[e :U 88 ]
[; ;newmain.c: 50: if(a & 2)
"50
[e $ ! != & -> _a `i -> 2 `i -> 0 `i 89  ]
[; ;newmain.c: 51: RC1 = 1;
"51
[e = _RC1 -> -> 1 `i `b ]
[e $U 90  ]
"52
[e :U 89 ]
[; ;newmain.c: 52: else
[; ;newmain.c: 53: RC1 = 0;
"53
[e = _RC1 -> -> 0 `i `b ]
[e :U 90 ]
[; ;newmain.c: 55: if(a & 4)
"55
[e $ ! != & -> _a `i -> 4 `i -> 0 `i 91  ]
[; ;newmain.c: 56: RC2 = 1;
"56
[e = _RC2 -> -> 1 `i `b ]
[e $U 92  ]
"57
[e :U 91 ]
[; ;newmain.c: 57: else
[; ;newmain.c: 58: RC2 = 0;
"58
[e = _RC2 -> -> 0 `i `b ]
[e :U 92 ]
[; ;newmain.c: 60: if(a & 8)
"60
[e $ ! != & -> _a `i -> 8 `i -> 0 `i 93  ]
[; ;newmain.c: 61: RC3 = 1;
"61
[e = _RC3 -> -> 1 `i `b ]
[e $U 94  ]
"62
[e :U 93 ]
[; ;newmain.c: 62: else
[; ;newmain.c: 63: RC3 = 0;
"63
[e = _RC3 -> -> 0 `i `b ]
[e :U 94 ]
[; ;newmain.c: 64: }
"64
[e :UE 86 ]
}
"65
[v _Lcd_Cmd `(v ~T0 @X0 1 ef1`uc ]
"66
{
[; ;newmain.c: 65: void Lcd_Cmd(char a)
[; ;newmain.c: 66: {
[e :U _Lcd_Cmd ]
"65
[v _a `uc ~T0 @X0 1 r1 ]
"66
[f ]
[; ;newmain.c: 67: RA1 = 0;
"67
[e = _RA1 -> -> 0 `i `b ]
[; ;newmain.c: 68: Lcd_Port(a);
"68
[e ( _Lcd_Port (1 _a ]
[; ;newmain.c: 69: RA2 = 1;
"69
[e = _RA2 -> -> 1 `i `b ]
[; ;newmain.c: 70: _delay((unsigned long)((4)*(4000000/4000.0)));
"70
[e ( __delay (1 -> * -> -> 4 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 71: RA2 = 0;
"71
[e = _RA2 -> -> 0 `i `b ]
[; ;newmain.c: 72: }
"72
[e :UE 95 ]
}
"74
[v _Lcd_Clear `(v ~T0 @X0 1 ef ]
"75
{
[; ;newmain.c: 74: void Lcd_Clear()
[; ;newmain.c: 75: {
[e :U _Lcd_Clear ]
[f ]
[; ;newmain.c: 76: Lcd_Cmd(0);
"76
[e ( _Lcd_Cmd (1 -> -> 0 `i `uc ]
[; ;newmain.c: 77: Lcd_Cmd(1);
"77
[e ( _Lcd_Cmd (1 -> -> 1 `i `uc ]
[; ;newmain.c: 78: }
"78
[e :UE 96 ]
}
"80
[v _Lcd_Set_Cursor `(v ~T0 @X0 1 ef2`uc`uc ]
"81
{
[; ;newmain.c: 80: void Lcd_Set_Cursor(char a, char b)
[; ;newmain.c: 81: {
[e :U _Lcd_Set_Cursor ]
"80
[v _a `uc ~T0 @X0 1 r1 ]
[v _b `uc ~T0 @X0 1 r2 ]
"81
[f ]
"82
[v _temp `uc ~T0 @X0 1 a ]
[v _z `uc ~T0 @X0 1 a ]
[v _y `uc ~T0 @X0 1 a ]
[; ;newmain.c: 82: char temp,z,y;
[; ;newmain.c: 83: if(a == 1)
"83
[e $ ! == -> _a `i -> 1 `i 98  ]
[; ;newmain.c: 84: {
"84
{
[; ;newmain.c: 85: temp = 0x80 + b - 1;
"85
[e = _temp -> - + -> 128 `i -> _b `i -> 1 `i `uc ]
[; ;newmain.c: 86: z = temp>>4;
"86
[e = _z -> >> -> _temp `i -> 4 `i `uc ]
[; ;newmain.c: 87: y = temp & 0x0F;
"87
[e = _y -> & -> _temp `i -> 15 `i `uc ]
[; ;newmain.c: 88: Lcd_Cmd(z);
"88
[e ( _Lcd_Cmd (1 _z ]
[; ;newmain.c: 89: Lcd_Cmd(y);
"89
[e ( _Lcd_Cmd (1 _y ]
"90
}
[; ;newmain.c: 90: }
[e $U 99  ]
"91
[e :U 98 ]
[; ;newmain.c: 91: else if(a == 2)
[e $ ! == -> _a `i -> 2 `i 100  ]
[; ;newmain.c: 92: {
"92
{
[; ;newmain.c: 93: temp = 0xC0 + b - 1;
"93
[e = _temp -> - + -> 192 `i -> _b `i -> 1 `i `uc ]
[; ;newmain.c: 94: z = temp>>4;
"94
[e = _z -> >> -> _temp `i -> 4 `i `uc ]
[; ;newmain.c: 95: y = temp & 0x0F;
"95
[e = _y -> & -> _temp `i -> 15 `i `uc ]
[; ;newmain.c: 96: Lcd_Cmd(z);
"96
[e ( _Lcd_Cmd (1 _z ]
[; ;newmain.c: 97: Lcd_Cmd(y);
"97
[e ( _Lcd_Cmd (1 _y ]
"98
}
[e :U 100 ]
"99
[e :U 99 ]
[; ;newmain.c: 98: }
[; ;newmain.c: 99: }
[e :UE 97 ]
}
"101
[v _Lcd_Init `(v ~T0 @X0 1 ef ]
"102
{
[; ;newmain.c: 101: void Lcd_Init()
[; ;newmain.c: 102: {
[e :U _Lcd_Init ]
[f ]
[; ;newmain.c: 103: Lcd_Port(0x00);
"103
[e ( _Lcd_Port (1 -> -> 0 `i `uc ]
[; ;newmain.c: 104: _delay((unsigned long)((20)*(4000000/4000.0)));
"104
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 105: Lcd_Cmd(0x03);
"105
[e ( _Lcd_Cmd (1 -> -> 3 `i `uc ]
[; ;newmain.c: 106: _delay((unsigned long)((5)*(4000000/4000.0)));
"106
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 107: Lcd_Cmd(0x03);
"107
[e ( _Lcd_Cmd (1 -> -> 3 `i `uc ]
[; ;newmain.c: 108: _delay((unsigned long)((11)*(4000000/4000.0)));
"108
[e ( __delay (1 -> * -> -> 11 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 109: Lcd_Cmd(0x03);
"109
[e ( _Lcd_Cmd (1 -> -> 3 `i `uc ]
[; ;newmain.c: 111: Lcd_Cmd(0x02);
"111
[e ( _Lcd_Cmd (1 -> -> 2 `i `uc ]
[; ;newmain.c: 112: Lcd_Cmd(0x02);
"112
[e ( _Lcd_Cmd (1 -> -> 2 `i `uc ]
[; ;newmain.c: 113: Lcd_Cmd(0x08);
"113
[e ( _Lcd_Cmd (1 -> -> 8 `i `uc ]
[; ;newmain.c: 114: Lcd_Cmd(0x00);
"114
[e ( _Lcd_Cmd (1 -> -> 0 `i `uc ]
[; ;newmain.c: 115: Lcd_Cmd(0x0C);
"115
[e ( _Lcd_Cmd (1 -> -> 12 `i `uc ]
[; ;newmain.c: 116: Lcd_Cmd(0x00);
"116
[e ( _Lcd_Cmd (1 -> -> 0 `i `uc ]
[; ;newmain.c: 117: Lcd_Cmd(0x06);
"117
[e ( _Lcd_Cmd (1 -> -> 6 `i `uc ]
[; ;newmain.c: 118: }
"118
[e :UE 101 ]
}
"120
[v _Lcd_Write_Char `(v ~T0 @X0 1 ef1`uc ]
"121
{
[; ;newmain.c: 120: void Lcd_Write_Char(char a)
[; ;newmain.c: 121: {
[e :U _Lcd_Write_Char ]
"120
[v _a `uc ~T0 @X0 1 r1 ]
"121
[f ]
"122
[v _temp `uc ~T0 @X0 1 a ]
[v _y `uc ~T0 @X0 1 a ]
[; ;newmain.c: 122: char temp,y;
[; ;newmain.c: 123: temp = a&0x0F;
"123
[e = _temp -> & -> _a `i -> 15 `i `uc ]
[; ;newmain.c: 124: y = a&0xF0;
"124
[e = _y -> & -> _a `i -> 240 `i `uc ]
[; ;newmain.c: 125: RA1 = 1;
"125
[e = _RA1 -> -> 1 `i `b ]
[; ;newmain.c: 126: Lcd_Port(y>>4);
"126
[e ( _Lcd_Port (1 -> >> -> _y `i -> 4 `i `uc ]
[; ;newmain.c: 127: RA2 = 1;
"127
[e = _RA2 -> -> 1 `i `b ]
[; ;newmain.c: 128: _delay((unsigned long)((40)*(4000000/4000000.0)));
"128
[e ( __delay (1 -> * -> -> 40 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 129: RA2 = 0;
"129
[e = _RA2 -> -> 0 `i `b ]
[; ;newmain.c: 130: Lcd_Port(temp);
"130
[e ( _Lcd_Port (1 _temp ]
[; ;newmain.c: 131: RA2 = 1;
"131
[e = _RA2 -> -> 1 `i `b ]
[; ;newmain.c: 132: _delay((unsigned long)((40)*(4000000/4000000.0)));
"132
[e ( __delay (1 -> * -> -> 40 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 133: RA2 = 0;
"133
[e = _RA2 -> -> 0 `i `b ]
[; ;newmain.c: 134: }
"134
[e :UE 102 ]
}
"136
[v _Lcd_Write_String `(v ~T0 @X0 1 ef1`*Cuc ]
"137
{
[; ;newmain.c: 136: void Lcd_Write_String(const char *a)
[; ;newmain.c: 137: {
[e :U _Lcd_Write_String ]
"136
[v _a `*Cuc ~T0 @X0 1 r1 ]
"137
[f ]
"140
[v _i `i ~T0 @X0 1 a ]
[; ;newmain.c: 140: int i;
[; ;newmain.c: 141: for(i=0;a[i]!='\0';i++)
"141
{
[e = _i -> 0 `i ]
[e $U 107  ]
"142
[e :U 104 ]
[; ;newmain.c: 142: Lcd_Write_Char(a[i]);
[e ( _Lcd_Write_Char (1 *U + _a * -> _i `x -> -> # *U _a `i `x ]
"141
[e ++ _i -> 1 `i ]
[e :U 107 ]
[e $ != -> *U + _a * -> _i `x -> -> # *U _a `i `x `ui -> 0 `ui 104  ]
[e :U 105 ]
"142
}
[; ;newmain.c: 145: }
"145
[e :UE 103 ]
}
"147
[v _reset `(uc ~T0 @X0 1 ef ]
"148
{
[; ;newmain.c: 147: unsigned char reset()
[; ;newmain.c: 148: {
[e :U _reset ]
[f ]
[; ;newmain.c: 149: TRISA0 = 0;
"149
[e = _TRISA0 -> -> 0 `i `b ]
[; ;newmain.c: 150: RA0= 0;
"150
[e = _RA0 -> -> 0 `i `b ]
[; ;newmain.c: 151: _delay((unsigned long)((480)*(4000000/4000000.0)));
"151
[e ( __delay (1 -> * -> -> 480 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 152: TRISA0 = 1;
"152
[e = _TRISA0 -> -> 1 `i `b ]
[; ;newmain.c: 153: _delay((unsigned long)((60)*(4000000/4000000.0)));
"153
[e ( __delay (1 -> * -> -> 60 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 155: if (RA0== 0)
"155
[e $ ! == -> _RA0 `i -> 0 `i 109  ]
[; ;newmain.c: 156: {
"156
{
[; ;newmain.c: 157: _delay((unsigned long)((480)*(4000000/4000000.0)));
"157
[e ( __delay (1 -> * -> -> 480 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 158: return 0;
"158
[e ) -> -> 0 `i `uc ]
[e $UE 108  ]
"159
}
[; ;newmain.c: 159: }
[e $U 110  ]
"160
[e :U 109 ]
[; ;newmain.c: 160: else
[; ;newmain.c: 161: {
"161
{
[; ;newmain.c: 162: _delay((unsigned long)((480)*(4000000/4000000.0)));
"162
[e ( __delay (1 -> * -> -> 480 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 163: return 1;
"163
[e ) -> -> 1 `i `uc ]
[e $UE 108  ]
"164
}
[e :U 110 ]
[; ;newmain.c: 164: }
[; ;newmain.c: 165: }
"165
[e :UE 108 ]
}
"169
[v _write `(v ~T0 @X0 1 ef1`uc ]
"170
{
[; ;newmain.c: 169: void write(char WRT)
[; ;newmain.c: 170: {
[e :U _write ]
"169
[v _WRT `uc ~T0 @X0 1 r1 ]
"170
[f ]
"171
[v _i `uc ~T0 @X0 1 a ]
[v _Cmd `uc ~T0 @X0 1 a ]
[; ;newmain.c: 171: char i,Cmd;
[; ;newmain.c: 172: Cmd=WRT;
"172
[e = _Cmd _WRT ]
[; ;newmain.c: 173: TRISA0 = 1;
"173
[e = _TRISA0 -> -> 1 `i `b ]
[; ;newmain.c: 175: for(i = 0; i < 8; i++)
"175
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 112  ]
[e $U 113  ]
"176
[e :U 112 ]
[; ;newmain.c: 176: {
{
[; ;newmain.c: 177: if((Cmd & (1<<i))!= 0)
"177
[e $ ! != & -> _Cmd `i << -> 1 `i _i -> 0 `i 115  ]
[; ;newmain.c: 178: {
"178
{
[; ;newmain.c: 180: TRISA0 = 0;
"180
[e = _TRISA0 -> -> 0 `i `b ]
[; ;newmain.c: 181: RA0= 0;
"181
[e = _RA0 -> -> 0 `i `b ]
[; ;newmain.c: 182: _delay((unsigned long)((1)*(4000000/4000000.0)));
"182
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 183: TRISA0 = 1;
"183
[e = _TRISA0 -> -> 1 `i `b ]
[; ;newmain.c: 184: _delay((unsigned long)((60)*(4000000/4000000.0)));
"184
[e ( __delay (1 -> * -> -> 60 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"185
}
[; ;newmain.c: 185: }
[e $U 116  ]
"186
[e :U 115 ]
[; ;newmain.c: 186: else
[; ;newmain.c: 187: {
"187
{
[; ;newmain.c: 189: TRISA0 = 0;
"189
[e = _TRISA0 -> -> 0 `i `b ]
[; ;newmain.c: 190: RA0= 0;
"190
[e = _RA0 -> -> 0 `i `b ]
[; ;newmain.c: 191: _delay((unsigned long)((60)*(4000000/4000000.0)));
"191
[e ( __delay (1 -> * -> -> 60 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 192: TRISA0 = 1;
"192
[e = _TRISA0 -> -> 1 `i `b ]
"193
}
[e :U 116 ]
"194
}
"175
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 112  ]
[e :U 113 ]
"194
}
[; ;newmain.c: 193: }
[; ;newmain.c: 194: }
[; ;newmain.c: 195: }
"195
[e :UE 111 ]
}
"199
[v _read `(uc ~T0 @X0 1 ef ]
"200
{
[; ;newmain.c: 199: unsigned char read()
[; ;newmain.c: 200: {
[e :U _read ]
[f ]
"201
[v _i `uc ~T0 @X0 1 a ]
[v _result `uc ~T0 @X0 1 a ]
[; ;newmain.c: 201: char i,result = 0;
[e = _result -> -> 0 `i `uc ]
[; ;newmain.c: 202: TRISA0 = 1;
"202
[e = _TRISA0 -> -> 1 `i `b ]
[; ;newmain.c: 203: for(i = 0; i < 8; i++)
"203
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 118  ]
[e $U 119  ]
"204
[e :U 118 ]
[; ;newmain.c: 204: {
{
[; ;newmain.c: 205: TRISA0 = 0;
"205
[e = _TRISA0 -> -> 0 `i `b ]
[; ;newmain.c: 206: RA0= 0;
"206
[e = _RA0 -> -> 0 `i `b ]
[; ;newmain.c: 207: _delay((unsigned long)((2)*(4000000/4000000.0)));
"207
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 208: TRISA0 = 1;
"208
[e = _TRISA0 -> -> 1 `i `b ]
[; ;newmain.c: 209: if(RA0!= 0)
"209
[e $ ! != -> _RA0 `i -> 0 `i 121  ]
[; ;newmain.c: 210: result |= 1<<i;
"210
[e =| _result -> << -> 1 `i _i `uc ]
[e :U 121 ]
[; ;newmain.c: 211: _delay((unsigned long)((60)*(4000000/4000000.0)));
"211
[e ( __delay (1 -> * -> -> 60 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"212
}
"203
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 118  ]
[e :U 119 ]
"212
}
[; ;newmain.c: 212: }
[; ;newmain.c: 213: return result;
"213
[e ) _result ]
[e $UE 117  ]
[; ;newmain.c: 214: }
"214
[e :UE 117 ]
}
"217
[v _checktemp `(i ~T0 @X0 1 ef ]
"218
{
[; ;newmain.c: 217: int checktemp()
[; ;newmain.c: 218: {
[e :U _checktemp ]
[f ]
"219
[v _tempL `us ~T0 @X0 1 a ]
[; ;newmain.c: 219: unsigned short tempL = 0,tempH = 0;
[e = _tempL -> -> 0 `i `us ]
[v _tempH `us ~T0 @X0 1 a ]
[e = _tempH -> -> 0 `i `us ]
"220
[v _temp `ui ~T0 @X0 1 a ]
[; ;newmain.c: 220: unsigned int temp = 0;
[e = _temp -> -> 0 `i `ui ]
[; ;newmain.c: 222: if(!reset())
"222
[e $ ! ! != -> ( _reset ..  `i -> -> -> 0 `i `uc `i 123  ]
[; ;newmain.c: 223: {
"223
{
[; ;newmain.c: 224: write(0xcc);
"224
[e ( _write (1 -> -> 204 `i `uc ]
[; ;newmain.c: 225: write(0x44);
"225
[e ( _write (1 -> -> 68 `i `uc ]
[; ;newmain.c: 226: _delay((unsigned long)((600)*(4000000/4000000.0)));
"226
[e ( __delay (1 -> * -> -> 600 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 228: reset();
"228
[e ( _reset ..  ]
[; ;newmain.c: 229: write(0xcc);
"229
[e ( _write (1 -> -> 204 `i `uc ]
[; ;newmain.c: 230: write(0xbe);
"230
[e ( _write (1 -> -> 190 `i `uc ]
[; ;newmain.c: 232: tempL = read();
"232
[e = _tempL -> ( _read ..  `us ]
[; ;newmain.c: 233: tempH = read();
"233
[e = _tempH -> ( _read ..  `us ]
[; ;newmain.c: 234: temp=((tempH << 8 )| tempL);
"234
[e = _temp | << -> _tempH `ui -> 8 `i -> _tempL `ui ]
[; ;newmain.c: 235: temp = temp /16 ;
"235
[e = _temp / _temp -> -> 16 `i `ui ]
"236
}
[e :U 123 ]
[; ;newmain.c: 236: }
[; ;newmain.c: 237: return temp;
"237
[e ) -> _temp `i ]
[e $UE 122  ]
[; ;newmain.c: 238: }
"238
[e :UE 122 ]
}
"241
[v _lcddisplay `(v ~T0 @X0 1 ef1`i ]
"242
{
[; ;newmain.c: 241: void lcddisplay(int data)
[; ;newmain.c: 242: {
[e :U _lcddisplay ]
"241
[v _data `i ~T0 @X0 1 r1 ]
"242
[f ]
[; ;newmain.c: 243: Lcd_Write_Char((data/10) + (0x30));
"243
[e ( _Lcd_Write_Char (1 -> + / _data -> 10 `i -> 48 `i `uc ]
[; ;newmain.c: 244: Lcd_Write_Char((data%10) + (0x30));
"244
[e ( _Lcd_Write_Char (1 -> + % _data -> 10 `i -> 48 `i `uc ]
[; ;newmain.c: 245: }
"245
[e :UE 124 ]
}
"247
[v _relaystatus `(v ~T0 @X0 1 ef1`i ]
"248
{
[; ;newmain.c: 247: void relaystatus(int status)
[; ;newmain.c: 248: {
[e :U _relaystatus ]
"247
[v _status `i ~T0 @X0 1 r1 ]
"248
[f ]
[; ;newmain.c: 249: if(status == 1)
"249
[e $ ! == _status -> 1 `i 126  ]
[; ;newmain.c: 250: {
"250
{
[; ;newmain.c: 251: Lcd_Clear();
"251
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 252: Lcd_Write_String("status : ON");
"252
[e ( _Lcd_Write_String (1 :s 1C ]
"254
}
[; ;newmain.c: 254: }
[e $U 127  ]
"255
[e :U 126 ]
[; ;newmain.c: 255: else
[; ;newmain.c: 256: {
"256
{
[; ;newmain.c: 257: Lcd_Clear();
"257
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 258: Lcd_Write_String("status : OFF");
"258
[e ( _Lcd_Write_String (1 :s 2C ]
"259
}
[e :U 127 ]
[; ;newmain.c: 259: }
[; ;newmain.c: 260: }
"260
[e :UE 125 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"263
[v _main `(i ~T0 @X0 1 ef ]
"264
{
[; ;newmain.c: 263: int main()
[; ;newmain.c: 264: {
[e :U _main ]
[f ]
[; ;newmain.c: 266: ANSEL = 0x00;
"266
[e = _ANSEL -> -> 0 `i `uc ]
[; ;newmain.c: 267: CMCON0 = 0xf7;
"267
[e = _CMCON0 -> -> 247 `i `uc ]
"269
[v _a `ui ~T0 @X0 1 a ]
"270
[v _tempL `us ~T0 @X0 1 a ]
[; ;newmain.c: 269: unsigned int a;
[; ;newmain.c: 270: unsigned short tempL = 0,tempH = 0;
[e = _tempL -> -> 0 `i `us ]
[v _tempH `us ~T0 @X0 1 a ]
[e = _tempH -> -> 0 `i `us ]
"271
[v _temp `ui ~T0 @X0 1 a ]
[; ;newmain.c: 271: unsigned int temp = 0;
[e = _temp -> -> 0 `i `ui ]
"272
[v _data `us ~T0 @X0 1 a ]
"273
[v _highval `i ~T0 @X0 1 a ]
[; ;newmain.c: 272: unsigned short int data;
[; ;newmain.c: 273: int highval=96;
[e = _highval -> 96 `i ]
"274
[v _lowval `i ~T0 @X0 1 a ]
[; ;newmain.c: 274: int lowval=92;
[e = _lowval -> 92 `i ]
"276
[v _b `i ~T0 @X0 1 a ]
[; ;newmain.c: 276: int b=0;
[e = _b -> 0 `i ]
"277
[v _tempval `i ~T0 @X0 1 a ]
"280
[v _curs `i ~T0 @X0 1 a ]
"281
[v _switchsel `i ~T0 @X0 1 a ]
[; ;newmain.c: 277: int tempval;
[; ;newmain.c: 280: int curs;
[; ;newmain.c: 281: int switchsel =0;
[e = _switchsel -> 0 `i ]
"284
[v _c `i ~T0 @X0 1 a ]
[; ;newmain.c: 284: int c;
[; ;newmain.c: 286: TRISC = 0x30;
"286
[e = _TRISC -> -> 48 `i `uc ]
[; ;newmain.c: 287: TRISA1 = 0;
"287
[e = _TRISA1 -> -> 0 `i `b ]
[; ;newmain.c: 288: TRISA2 = 0;
"288
[e = _TRISA2 -> -> 0 `i `b ]
[; ;newmain.c: 289: TRISA3 = 1;
"289
[e = _TRISA3 -> -> 1 `i `b ]
[; ;newmain.c: 290: TRISA4 = 1;
"290
[e = _TRISA4 -> -> 1 `i `b ]
[; ;newmain.c: 291: TRISA5 = 0;
"291
[e = _TRISA5 -> -> 0 `i `b ]
[; ;newmain.c: 292: _delay((unsigned long)((100)*(4000000/4000.0)));
"292
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 293: Lcd_Init();
"293
[e ( _Lcd_Init ..  ]
[; ;newmain.c: 294: Lcd_Clear();
"294
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 296: while(1)
"296
[e :U 130 ]
[; ;newmain.c: 297: {
"297
{
[; ;newmain.c: 298: tempval = checktemp();
"298
[e = _tempval ( _checktemp ..  ]
[; ;newmain.c: 299: if(RC4 == 0)
"299
[e $ ! == -> _RC4 `i -> 0 `i 132  ]
[; ;newmain.c: 300: {
"300
{
[; ;newmain.c: 302: Lcd_Clear();
"302
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 303: Lcd_Set_Cursor(1,1);
"303
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 304: Lcd_Write_String("Entering setup");
"304
[e ( _Lcd_Write_String (1 :s 3C ]
[; ;newmain.c: 305: _delay((unsigned long)((1000)*(4000000/4000.0)));
"305
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 306: Lcd_Clear();
"306
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 307: Lcd_Set_Cursor(1,1);
"307
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 308: Lcd_Write_String("On temp: ");
"308
[e ( _Lcd_Write_String (1 :s 4C ]
[; ;newmain.c: 309: lcddisplay(lowval);
"309
[e ( _lcddisplay (1 _lowval ]
[; ;newmain.c: 310: Lcd_Set_Cursor(2,1);
"310
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 311: Lcd_Write_String("OFF temp:");
"311
[e ( _Lcd_Write_String (1 :s 5C ]
[; ;newmain.c: 312: lcddisplay(highval);
"312
[e ( _lcddisplay (1 _highval ]
[v _c `i ~T0 @X0 1 a ]
[; ;newmain.c: 313: int c = 0;
"313
[e = _c -> 0 `i ]
[; ;newmain.c: 315: while(1)
"315
[e :U 134 ]
[; ;newmain.c: 316: {
"316
{
[; ;newmain.c: 318: if(!RA4)
"318
[e $ ! ! _RA4 136  ]
[; ;newmain.c: 319: {
"319
{
[; ;newmain.c: 321: switchsel++;
"321
[e ++ _switchsel -> 1 `i ]
[; ;newmain.c: 322: if(switchsel == 3)
"322
[e $ ! == _switchsel -> 3 `i 137  ]
[; ;newmain.c: 323: {
"323
{
[; ;newmain.c: 324: switchsel = 1;
"324
[e = _switchsel -> 1 `i ]
"325
}
[e :U 137 ]
"327
}
[e :U 136 ]
[; ;newmain.c: 325: }
[; ;newmain.c: 327: }
[; ;newmain.c: 328: if((switchsel == 1)&&(switchsel<=2))
"328
[e $ ! && == _switchsel -> 1 `i <= _switchsel -> 2 `i 138  ]
[; ;newmain.c: 329: {
"329
{
[; ;newmain.c: 332: Lcd_Clear();
"332
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 333: Lcd_Set_Cursor(1,1);
"333
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 334: Lcd_Write_String("On: ");
"334
[e ( _Lcd_Write_String (1 :s 6C ]
[; ;newmain.c: 335: Lcd_Set_Cursor(1,12);
"335
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 12 `i `uc ]
[; ;newmain.c: 336: lcddisplay(lowval);
"336
[e ( _lcddisplay (1 _lowval ]
[; ;newmain.c: 337: Lcd_Set_Cursor(2,1);
"337
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 338: Lcd_Write_String("OFF:");
"338
[e ( _Lcd_Write_String (1 :s 7C ]
[; ;newmain.c: 339: Lcd_Set_Cursor(2,12);
"339
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 12 `i `uc ]
[; ;newmain.c: 340: lcddisplay(highval);
"340
[e ( _lcddisplay (1 _highval ]
[; ;newmain.c: 342: Lcd_Set_Cursor(1,15);
"342
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 15 `i `uc ]
[; ;newmain.c: 343: Lcd_Write_String("<<");
"343
[e ( _Lcd_Write_String (1 :s 8C ]
[; ;newmain.c: 344: curs = 1;
"344
[e = _curs -> 1 `i ]
[; ;newmain.c: 347: if(!RA3)
"347
[e $ ! ! _RA3 139  ]
[; ;newmain.c: 348: {
"348
{
[; ;newmain.c: 349: lowval++;
"349
[e ++ _lowval -> 1 `i ]
[; ;newmain.c: 350: if(lowval==highval)
"350
[e $ ! == _lowval _highval 140  ]
[; ;newmain.c: 351: {
"351
{
[; ;newmain.c: 352: lowval = 60;
"352
[e = _lowval -> 60 `i ]
"353
}
[e :U 140 ]
[; ;newmain.c: 353: }
[; ;newmain.c: 354: Lcd_Clear();
"354
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 355: Lcd_Set_Cursor(1,1);
"355
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 356: Lcd_Write_String("On:");
"356
[e ( _Lcd_Write_String (1 :s 9C ]
[; ;newmain.c: 357: Lcd_Set_Cursor(1,12);
"357
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 12 `i `uc ]
[; ;newmain.c: 358: lcddisplay(lowval);
"358
[e ( _lcddisplay (1 _lowval ]
[; ;newmain.c: 359: Lcd_Set_Cursor(2,1);
"359
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 360: Lcd_Write_String("OFF:");
"360
[e ( _Lcd_Write_String (1 :s 10C ]
[; ;newmain.c: 361: Lcd_Set_Cursor(2,12);
"361
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 12 `i `uc ]
[; ;newmain.c: 362: lcddisplay(highval);
"362
[e ( _lcddisplay (1 _highval ]
"364
}
[; ;newmain.c: 364: }
[e $U 141  ]
"365
[e :U 139 ]
[; ;newmain.c: 365: else if(!RC5)
[e $ ! ! _RC5 142  ]
[; ;newmain.c: 366: {
"366
{
[; ;newmain.c: 367: if(lowval==60)
"367
[e $ ! == _lowval -> 60 `i 143  ]
[; ;newmain.c: 368: {
"368
{
[; ;newmain.c: 369: lowval = highval;
"369
[e = _lowval _highval ]
"370
}
[e :U 143 ]
[; ;newmain.c: 370: }
[; ;newmain.c: 372: lowval--;
"372
[e -- _lowval -> 1 `i ]
[; ;newmain.c: 373: Lcd_Clear();
"373
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 374: Lcd_Set_Cursor(1,1);
"374
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 375: Lcd_Write_String("On:");
"375
[e ( _Lcd_Write_String (1 :s 11C ]
[; ;newmain.c: 376: Lcd_Set_Cursor(1,12);
"376
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 12 `i `uc ]
[; ;newmain.c: 377: lcddisplay(lowval);
"377
[e ( _lcddisplay (1 _lowval ]
[; ;newmain.c: 378: Lcd_Set_Cursor(2,1);
"378
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 379: Lcd_Write_String("OFF:");
"379
[e ( _Lcd_Write_String (1 :s 12C ]
[; ;newmain.c: 380: Lcd_Set_Cursor(2,12);
"380
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 12 `i `uc ]
[; ;newmain.c: 381: lcddisplay(highval);
"381
[e ( _lcddisplay (1 _highval ]
"383
}
[e :U 142 ]
"389
[e :U 141 ]
}
[; ;newmain.c: 383: }
[; ;newmain.c: 389: }
[e $U 144  ]
"390
[e :U 138 ]
[; ;newmain.c: 390: else if((switchsel == 2) && (switchsel<=2))
[e $ ! && == _switchsel -> 2 `i <= _switchsel -> 2 `i 145  ]
[; ;newmain.c: 392: {
"392
{
[; ;newmain.c: 394: Lcd_Clear();
"394
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 395: Lcd_Set_Cursor(1,1);
"395
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 396: Lcd_Write_String("On: ");
"396
[e ( _Lcd_Write_String (1 :s 13C ]
[; ;newmain.c: 397: Lcd_Set_Cursor(1,12);
"397
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 12 `i `uc ]
[; ;newmain.c: 398: lcddisplay(lowval);
"398
[e ( _lcddisplay (1 _lowval ]
[; ;newmain.c: 399: Lcd_Set_Cursor(2,1);
"399
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 400: Lcd_Write_String("OFF:");
"400
[e ( _Lcd_Write_String (1 :s 14C ]
[; ;newmain.c: 401: Lcd_Set_Cursor(2,12);
"401
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 12 `i `uc ]
[; ;newmain.c: 402: lcddisplay(highval);
"402
[e ( _lcddisplay (1 _highval ]
[; ;newmain.c: 403: Lcd_Set_Cursor(2,15);
"403
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 15 `i `uc ]
[; ;newmain.c: 404: Lcd_Write_String("<<");
"404
[e ( _Lcd_Write_String (1 :s 15C ]
[; ;newmain.c: 405: curs = 2;
"405
[e = _curs -> 2 `i ]
[; ;newmain.c: 409: if(!RA3)
"409
[e $ ! ! _RA3 146  ]
[; ;newmain.c: 410: {
"410
{
[; ;newmain.c: 413: if(highval == 98)
"413
[e $ ! == _highval -> 98 `i 147  ]
[; ;newmain.c: 414: {
"414
{
[; ;newmain.c: 415: highval = lowval;
"415
[e = _highval _lowval ]
"416
}
[e :U 147 ]
[; ;newmain.c: 416: }
[; ;newmain.c: 418: highval++;
"418
[e ++ _highval -> 1 `i ]
[; ;newmain.c: 423: Lcd_Clear();
"423
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 424: Lcd_Set_Cursor(1,1);
"424
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 425: Lcd_Write_String("On:");
"425
[e ( _Lcd_Write_String (1 :s 16C ]
[; ;newmain.c: 426: Lcd_Set_Cursor(1,12);
"426
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 12 `i `uc ]
[; ;newmain.c: 427: lcddisplay(lowval);
"427
[e ( _lcddisplay (1 _lowval ]
[; ;newmain.c: 428: Lcd_Set_Cursor(2,1);
"428
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 429: Lcd_Write_String("OFF:");
"429
[e ( _Lcd_Write_String (1 :s 17C ]
[; ;newmain.c: 430: Lcd_Set_Cursor(2,12);
"430
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 12 `i `uc ]
[; ;newmain.c: 431: lcddisplay(highval);
"431
[e ( _lcddisplay (1 _highval ]
"433
}
[; ;newmain.c: 433: }
[e $U 148  ]
"434
[e :U 146 ]
[; ;newmain.c: 434: else if(!RC5)
[e $ ! ! _RC5 149  ]
[; ;newmain.c: 435: {
"435
{
"436
[v _der `i ~T0 @X0 1 a ]
[; ;newmain.c: 436: int der = highval;
[e = _der _highval ]
[; ;newmain.c: 437: der = der-1;
"437
[e = _der - _der -> 1 `i ]
[; ;newmain.c: 438: if(der == lowval)
"438
[e $ ! == _der _lowval 150  ]
[; ;newmain.c: 439: {
"439
{
[; ;newmain.c: 440: highval = 99;
"440
[e = _highval -> 99 `i ]
"441
}
[e :U 150 ]
[; ;newmain.c: 441: }
[; ;newmain.c: 442: highval--;
"442
[e -- _highval -> 1 `i ]
[; ;newmain.c: 443: Lcd_Clear();
"443
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 444: Lcd_Set_Cursor(1,1);
"444
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 445: Lcd_Write_String("On:");
"445
[e ( _Lcd_Write_String (1 :s 18C ]
[; ;newmain.c: 446: Lcd_Set_Cursor(1,12);
"446
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 12 `i `uc ]
[; ;newmain.c: 447: lcddisplay(lowval);
"447
[e ( _lcddisplay (1 _lowval ]
[; ;newmain.c: 448: Lcd_Set_Cursor(2,1);
"448
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 449: Lcd_Write_String("OFF:");
"449
[e ( _Lcd_Write_String (1 :s 19C ]
[; ;newmain.c: 450: Lcd_Set_Cursor(2,12);
"450
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 12 `i `uc ]
[; ;newmain.c: 451: lcddisplay(highval);
"451
[e ( _lcddisplay (1 _highval ]
"453
}
[e :U 149 ]
"454
[e :U 148 ]
}
[e :U 145 ]
"457
[e :U 144 ]
[; ;newmain.c: 453: }
[; ;newmain.c: 454: }
[; ;newmain.c: 457: if((!RC4)&&(curs == 1))
[e $ ! && ! _RC4 == _curs -> 1 `i 151  ]
[; ;newmain.c: 458: {
"458
{
[; ;newmain.c: 459: break;
"459
[e $U 135  ]
"460
}
[e :U 151 ]
[; ;newmain.c: 460: }
[; ;newmain.c: 461: if((!RC4)&&(curs == 2))
"461
[e $ ! && ! _RC4 == _curs -> 2 `i 152  ]
[; ;newmain.c: 462: {
"462
{
[; ;newmain.c: 463: break;
"463
[e $U 135  ]
"464
}
[e :U 152 ]
[; ;newmain.c: 464: }
[; ;newmain.c: 465: _delay((unsigned long)((500)*(4000000/4000.0)));
"465
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"467
}
[e :U 133 ]
"315
[e $U 134  ]
[e :U 135 ]
"468
}
[e :U 132 ]
[; ;newmain.c: 467: }
[; ;newmain.c: 468: }
[; ;newmain.c: 523: Lcd_Clear();
"523
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 525: if((tempval>=lowval)&&(tempval<=highval))
"525
[e $ ! && >= _tempval _lowval <= _tempval _highval 153  ]
[; ;newmain.c: 527: {
"527
{
[; ;newmain.c: 529: RA5 = 1;
"529
[e = _RA5 -> -> 1 `i `b ]
[; ;newmain.c: 530: c = 0;
"530
[e = _c -> 0 `i ]
"531
}
[; ;newmain.c: 531: }
[e $U 154  ]
"532
[e :U 153 ]
[; ;newmain.c: 532: else
[; ;newmain.c: 533: {
"533
{
[; ;newmain.c: 535: RA5 = 0;
"535
[e = _RA5 -> -> 0 `i `b ]
[; ;newmain.c: 536: c=1;
"536
[e = _c -> 1 `i ]
"537
}
[e :U 154 ]
[; ;newmain.c: 537: }
[; ;newmain.c: 540: Lcd_Set_Cursor(1,1);
"540
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 541: Lcd_Write_String("On_temp:");
"541
[e ( _Lcd_Write_String (1 :s 20C ]
[; ;newmain.c: 542: Lcd_Set_Cursor(1,14);
"542
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 14 `i `uc ]
[; ;newmain.c: 543: lcddisplay(lowval);
"543
[e ( _lcddisplay (1 _lowval ]
[; ;newmain.c: 544: Lcd_Set_Cursor(2,1);
"544
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 545: Lcd_Write_String("Off_temp:");
"545
[e ( _Lcd_Write_String (1 :s 21C ]
[; ;newmain.c: 546: Lcd_Set_Cursor(2,14);
"546
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 14 `i `uc ]
[; ;newmain.c: 547: lcddisplay(highval);
"547
[e ( _lcddisplay (1 _highval ]
[; ;newmain.c: 548: _delay((unsigned long)((1000)*(4000000/4000.0)));
"548
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 549: Lcd_Clear();
"549
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 550: Lcd_Set_Cursor(1,1);
"550
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 551: Lcd_Write_String("current temp:");
"551
[e ( _Lcd_Write_String (1 :s 22C ]
[; ;newmain.c: 552: Lcd_Set_Cursor(1,14);
"552
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 14 `i `uc ]
[; ;newmain.c: 553: lcddisplay(tempval);
"553
[e ( _lcddisplay (1 _tempval ]
[; ;newmain.c: 555: if(c==1)
"555
[e $ ! == _c -> 1 `i 155  ]
[; ;newmain.c: 556: {
"556
{
[; ;newmain.c: 557: Lcd_Set_Cursor(2,1);
"557
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 558: Lcd_Write_String("HEATER   OFF");
"558
[e ( _Lcd_Write_String (1 :s 23C ]
"560
}
[; ;newmain.c: 560: }
[e $U 156  ]
"561
[e :U 155 ]
[; ;newmain.c: 561: else
[; ;newmain.c: 562: {
"562
{
[; ;newmain.c: 563: Lcd_Set_Cursor(2,1);
"563
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 564: Lcd_Write_String("HEATER   ON");
"564
[e ( _Lcd_Write_String (1 :s 24C ]
"566
}
[e :U 156 ]
[; ;newmain.c: 566: }
[; ;newmain.c: 567: _delay((unsigned long)((1000)*(4000000/4000.0)));
"567
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 568: Lcd_Clear();
"568
[e ( _Lcd_Clear ..  ]
"572
}
[e :U 129 ]
"296
[e $U 130  ]
[e :U 131 ]
[; ;newmain.c: 572: }
[; ;newmain.c: 574: }
"574
[e :UE 128 ]
}
[a 3C 69 110 116 101 114 105 110 103 32 115 101 116 117 112 0 ]
[a 1C 115 116 97 116 117 115 32 58 32 79 78 0 ]
[a 24C 72 69 65 84 69 82 32 32 32 79 78 0 ]
[a 2C 115 116 97 116 117 115 32 58 32 79 70 70 0 ]
[a 23C 72 69 65 84 69 82 32 32 32 79 70 70 0 ]
[a 8C 60 60 0 ]
[a 15C 60 60 0 ]
[a 20C 79 110 95 116 101 109 112 58 0 ]
[a 21C 79 102 102 95 116 101 109 112 58 0 ]
[a 22C 99 117 114 114 101 110 116 32 116 101 109 112 58 0 ]
[a 5C 79 70 70 32 116 101 109 112 58 0 ]
[a 9C 79 110 58 0 ]
[a 11C 79 110 58 0 ]
[a 16C 79 110 58 0 ]
[a 18C 79 110 58 0 ]
[a 7C 79 70 70 58 0 ]
[a 10C 79 70 70 58 0 ]
[a 12C 79 70 70 58 0 ]
[a 14C 79 70 70 58 0 ]
[a 17C 79 70 70 58 0 ]
[a 19C 79 70 70 58 0 ]
[a 4C 79 110 32 116 101 109 112 58 32 0 ]
[a 6C 79 110 58 32 0 ]
[a 13C 79 110 58 32 0 ]
