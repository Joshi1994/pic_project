Version 3.2 HI-TECH Software Intermediate Code
"3760 C:\Program Files\Microchip\xc8\v1.44\include\pic16f883.h
[v _RC2 `Vb ~T0 @X0 0 e@58 ]
"3762
[v _RC3 `Vb ~T0 @X0 0 e@59 ]
"3764
[v _RC4 `Vb ~T0 @X0 0 e@60 ]
"3766
[v _RC5 `Vb ~T0 @X0 0 e@61 ]
"3756
[v _RC0 `Vb ~T0 @X0 0 e@56 ]
"3758
[v _RC1 `Vb ~T0 @X0 0 e@57 ]
[v F1552 `(v ~T0 @X0 1 tf1`ul ]
"153 C:\Program Files\Microchip\xc8\v1.44\include\pic.h
[v __delay `JF1552 ~T0 @X0 0 e ]
[p i __delay ]
"3227 C:\Program Files\Microchip\xc8\v1.44\include\pic16f883.h
[v _ANSEL `Vuc ~T0 @X0 0 e@392 ]
"1164
[v _ADCON0 `Vuc ~T0 @X0 0 e@31 ]
"2817
[v _ADCON1 `Vuc ~T0 @X0 0 e@159 ]
"3604
[v _GO_nDONE `Vb ~T0 @X0 0 e@249 ]
"1157
[v _ADRESH `Vuc ~T0 @X0 0 e@30 ]
"2810
[v _ADRESL `Vuc ~T0 @X0 0 e@158 ]
"43 C:\Program Files\Microchip\xc8\v1.44\include\math.h
[v _log `(d ~T0 @X0 0 ef1`d ]
"3742 C:\Program Files\Microchip\xc8\v1.44\include\pic16f883.h
[v _RB3 `Vb ~T0 @X0 0 e@51 ]
[p mainexit ]
"1335
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"1397
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"1459
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"3271
[v _ANSELH `Vuc ~T0 @X0 0 e@393 ]
"3736
[v _RB0 `Vb ~T0 @X0 0 e@48 ]
"3738
[v _RB1 `Vb ~T0 @X0 0 e@49 ]
"3740
[v _RB2 `Vb ~T0 @X0 0 e@50 ]
"3750
[v _RB7 `Vb ~T0 @X0 0 e@55 ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f883.h: 50: extern volatile unsigned char INDF @ 0x000;
"52 C:\Program Files\Microchip\xc8\v1.44\include\pic16f883.h
[; ;pic16f883.h: 52: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f883.h: 57: extern volatile unsigned char TMR0 @ 0x001;
"59
[; ;pic16f883.h: 59: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f883.h: 64: extern volatile unsigned char PCL @ 0x002;
"66
[; ;pic16f883.h: 66: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f883.h: 71: extern volatile unsigned char STATUS @ 0x003;
"73
[; ;pic16f883.h: 73: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f883.h: 76: typedef union {
[; ;pic16f883.h: 77: struct {
[; ;pic16f883.h: 78: unsigned C :1;
[; ;pic16f883.h: 79: unsigned DC :1;
[; ;pic16f883.h: 80: unsigned Z :1;
[; ;pic16f883.h: 81: unsigned nPD :1;
[; ;pic16f883.h: 82: unsigned nTO :1;
[; ;pic16f883.h: 83: unsigned RP :2;
[; ;pic16f883.h: 84: unsigned IRP :1;
[; ;pic16f883.h: 85: };
[; ;pic16f883.h: 86: struct {
[; ;pic16f883.h: 87: unsigned :5;
[; ;pic16f883.h: 88: unsigned RP0 :1;
[; ;pic16f883.h: 89: unsigned RP1 :1;
[; ;pic16f883.h: 90: };
[; ;pic16f883.h: 91: struct {
[; ;pic16f883.h: 92: unsigned CARRY :1;
[; ;pic16f883.h: 93: unsigned :1;
[; ;pic16f883.h: 94: unsigned ZERO :1;
[; ;pic16f883.h: 95: };
[; ;pic16f883.h: 96: } STATUSbits_t;
[; ;pic16f883.h: 97: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f883.h: 157: extern volatile unsigned char FSR @ 0x004;
"159
[; ;pic16f883.h: 159: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f883.h: 164: extern volatile unsigned char PORTA @ 0x005;
"166
[; ;pic16f883.h: 166: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f883.h: 169: typedef union {
[; ;pic16f883.h: 170: struct {
[; ;pic16f883.h: 171: unsigned RA0 :1;
[; ;pic16f883.h: 172: unsigned RA1 :1;
[; ;pic16f883.h: 173: unsigned RA2 :1;
[; ;pic16f883.h: 174: unsigned RA3 :1;
[; ;pic16f883.h: 175: unsigned RA4 :1;
[; ;pic16f883.h: 176: unsigned RA5 :1;
[; ;pic16f883.h: 177: unsigned RA6 :1;
[; ;pic16f883.h: 178: unsigned RA7 :1;
[; ;pic16f883.h: 179: };
[; ;pic16f883.h: 180: } PORTAbits_t;
[; ;pic16f883.h: 181: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f883.h: 226: extern volatile unsigned char PORTB @ 0x006;
"228
[; ;pic16f883.h: 228: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f883.h: 231: typedef union {
[; ;pic16f883.h: 232: struct {
[; ;pic16f883.h: 233: unsigned RB0 :1;
[; ;pic16f883.h: 234: unsigned RB1 :1;
[; ;pic16f883.h: 235: unsigned RB2 :1;
[; ;pic16f883.h: 236: unsigned RB3 :1;
[; ;pic16f883.h: 237: unsigned RB4 :1;
[; ;pic16f883.h: 238: unsigned RB5 :1;
[; ;pic16f883.h: 239: unsigned RB6 :1;
[; ;pic16f883.h: 240: unsigned RB7 :1;
[; ;pic16f883.h: 241: };
[; ;pic16f883.h: 242: } PORTBbits_t;
[; ;pic16f883.h: 243: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f883.h: 288: extern volatile unsigned char PORTC @ 0x007;
"290
[; ;pic16f883.h: 290: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f883.h: 293: typedef union {
[; ;pic16f883.h: 294: struct {
[; ;pic16f883.h: 295: unsigned RC0 :1;
[; ;pic16f883.h: 296: unsigned RC1 :1;
[; ;pic16f883.h: 297: unsigned RC2 :1;
[; ;pic16f883.h: 298: unsigned RC3 :1;
[; ;pic16f883.h: 299: unsigned RC4 :1;
[; ;pic16f883.h: 300: unsigned RC5 :1;
[; ;pic16f883.h: 301: unsigned RC6 :1;
[; ;pic16f883.h: 302: unsigned RC7 :1;
[; ;pic16f883.h: 303: };
[; ;pic16f883.h: 304: } PORTCbits_t;
[; ;pic16f883.h: 305: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f883.h: 350: extern volatile unsigned char PORTE @ 0x009;
"352
[; ;pic16f883.h: 352: asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
[; ;pic16f883.h: 355: typedef union {
[; ;pic16f883.h: 356: struct {
[; ;pic16f883.h: 357: unsigned :3;
[; ;pic16f883.h: 358: unsigned RE3 :1;
[; ;pic16f883.h: 359: };
[; ;pic16f883.h: 360: } PORTEbits_t;
[; ;pic16f883.h: 361: extern volatile PORTEbits_t PORTEbits @ 0x009;
[; ;pic16f883.h: 371: extern volatile unsigned char PCLATH @ 0x00A;
"373
[; ;pic16f883.h: 373: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f883.h: 378: extern volatile unsigned char INTCON @ 0x00B;
"380
[; ;pic16f883.h: 380: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f883.h: 383: typedef union {
[; ;pic16f883.h: 384: struct {
[; ;pic16f883.h: 385: unsigned RBIF :1;
[; ;pic16f883.h: 386: unsigned INTF :1;
[; ;pic16f883.h: 387: unsigned T0IF :1;
[; ;pic16f883.h: 388: unsigned RBIE :1;
[; ;pic16f883.h: 389: unsigned INTE :1;
[; ;pic16f883.h: 390: unsigned T0IE :1;
[; ;pic16f883.h: 391: unsigned PEIE :1;
[; ;pic16f883.h: 392: unsigned GIE :1;
[; ;pic16f883.h: 393: };
[; ;pic16f883.h: 394: struct {
[; ;pic16f883.h: 395: unsigned :2;
[; ;pic16f883.h: 396: unsigned TMR0IF :1;
[; ;pic16f883.h: 397: unsigned :2;
[; ;pic16f883.h: 398: unsigned TMR0IE :1;
[; ;pic16f883.h: 399: };
[; ;pic16f883.h: 400: } INTCONbits_t;
[; ;pic16f883.h: 401: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f883.h: 456: extern volatile unsigned char PIR1 @ 0x00C;
"458
[; ;pic16f883.h: 458: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f883.h: 461: typedef union {
[; ;pic16f883.h: 462: struct {
[; ;pic16f883.h: 463: unsigned TMR1IF :1;
[; ;pic16f883.h: 464: unsigned TMR2IF :1;
[; ;pic16f883.h: 465: unsigned CCP1IF :1;
[; ;pic16f883.h: 466: unsigned SSPIF :1;
[; ;pic16f883.h: 467: unsigned TXIF :1;
[; ;pic16f883.h: 468: unsigned RCIF :1;
[; ;pic16f883.h: 469: unsigned ADIF :1;
[; ;pic16f883.h: 470: };
[; ;pic16f883.h: 471: } PIR1bits_t;
[; ;pic16f883.h: 472: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f883.h: 512: extern volatile unsigned char PIR2 @ 0x00D;
"514
[; ;pic16f883.h: 514: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f883.h: 517: typedef union {
[; ;pic16f883.h: 518: struct {
[; ;pic16f883.h: 519: unsigned CCP2IF :1;
[; ;pic16f883.h: 520: unsigned :1;
[; ;pic16f883.h: 521: unsigned ULPWUIF :1;
[; ;pic16f883.h: 522: unsigned BCLIF :1;
[; ;pic16f883.h: 523: unsigned EEIF :1;
[; ;pic16f883.h: 524: unsigned C1IF :1;
[; ;pic16f883.h: 525: unsigned C2IF :1;
[; ;pic16f883.h: 526: unsigned OSFIF :1;
[; ;pic16f883.h: 527: };
[; ;pic16f883.h: 528: } PIR2bits_t;
[; ;pic16f883.h: 529: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f883.h: 569: extern volatile unsigned short TMR1 @ 0x00E;
"571
[; ;pic16f883.h: 571: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f883.h: 576: extern volatile unsigned char TMR1L @ 0x00E;
"578
[; ;pic16f883.h: 578: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f883.h: 583: extern volatile unsigned char TMR1H @ 0x00F;
"585
[; ;pic16f883.h: 585: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f883.h: 590: extern volatile unsigned char T1CON @ 0x010;
"592
[; ;pic16f883.h: 592: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f883.h: 595: typedef union {
[; ;pic16f883.h: 596: struct {
[; ;pic16f883.h: 597: unsigned TMR1ON :1;
[; ;pic16f883.h: 598: unsigned TMR1CS :1;
[; ;pic16f883.h: 599: unsigned nT1SYNC :1;
[; ;pic16f883.h: 600: unsigned T1OSCEN :1;
[; ;pic16f883.h: 601: unsigned T1CKPS :2;
[; ;pic16f883.h: 602: unsigned TMR1GE :1;
[; ;pic16f883.h: 603: unsigned T1GINV :1;
[; ;pic16f883.h: 604: };
[; ;pic16f883.h: 605: struct {
[; ;pic16f883.h: 606: unsigned :2;
[; ;pic16f883.h: 607: unsigned T1INSYNC :1;
[; ;pic16f883.h: 608: unsigned :1;
[; ;pic16f883.h: 609: unsigned T1CKPS0 :1;
[; ;pic16f883.h: 610: unsigned T1CKPS1 :1;
[; ;pic16f883.h: 611: unsigned :1;
[; ;pic16f883.h: 612: unsigned T1GIV :1;
[; ;pic16f883.h: 613: };
[; ;pic16f883.h: 614: struct {
[; ;pic16f883.h: 615: unsigned :2;
[; ;pic16f883.h: 616: unsigned T1SYNC :1;
[; ;pic16f883.h: 617: };
[; ;pic16f883.h: 618: } T1CONbits_t;
[; ;pic16f883.h: 619: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f883.h: 684: extern volatile unsigned char TMR2 @ 0x011;
"686
[; ;pic16f883.h: 686: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f883.h: 691: extern volatile unsigned char T2CON @ 0x012;
"693
[; ;pic16f883.h: 693: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f883.h: 696: typedef union {
[; ;pic16f883.h: 697: struct {
[; ;pic16f883.h: 698: unsigned T2CKPS :2;
[; ;pic16f883.h: 699: unsigned TMR2ON :1;
[; ;pic16f883.h: 700: unsigned TOUTPS :4;
[; ;pic16f883.h: 701: };
[; ;pic16f883.h: 702: struct {
[; ;pic16f883.h: 703: unsigned T2CKPS0 :1;
[; ;pic16f883.h: 704: unsigned T2CKPS1 :1;
[; ;pic16f883.h: 705: unsigned :1;
[; ;pic16f883.h: 706: unsigned TOUTPS0 :1;
[; ;pic16f883.h: 707: unsigned TOUTPS1 :1;
[; ;pic16f883.h: 708: unsigned TOUTPS2 :1;
[; ;pic16f883.h: 709: unsigned TOUTPS3 :1;
[; ;pic16f883.h: 710: };
[; ;pic16f883.h: 711: } T2CONbits_t;
[; ;pic16f883.h: 712: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f883.h: 762: extern volatile unsigned char SSPBUF @ 0x013;
"764
[; ;pic16f883.h: 764: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f883.h: 769: extern volatile unsigned char SSPCON @ 0x014;
"771
[; ;pic16f883.h: 771: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f883.h: 774: typedef union {
[; ;pic16f883.h: 775: struct {
[; ;pic16f883.h: 776: unsigned SSPM :4;
[; ;pic16f883.h: 777: unsigned CKP :1;
[; ;pic16f883.h: 778: unsigned SSPEN :1;
[; ;pic16f883.h: 779: unsigned SSPOV :1;
[; ;pic16f883.h: 780: unsigned WCOL :1;
[; ;pic16f883.h: 781: };
[; ;pic16f883.h: 782: struct {
[; ;pic16f883.h: 783: unsigned SSPM0 :1;
[; ;pic16f883.h: 784: unsigned SSPM1 :1;
[; ;pic16f883.h: 785: unsigned SSPM2 :1;
[; ;pic16f883.h: 786: unsigned SSPM3 :1;
[; ;pic16f883.h: 787: };
[; ;pic16f883.h: 788: } SSPCONbits_t;
[; ;pic16f883.h: 789: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f883.h: 839: extern volatile unsigned short CCPR1 @ 0x015;
"841
[; ;pic16f883.h: 841: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f883.h: 846: extern volatile unsigned char CCPR1L @ 0x015;
"848
[; ;pic16f883.h: 848: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f883.h: 853: extern volatile unsigned char CCPR1H @ 0x016;
"855
[; ;pic16f883.h: 855: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f883.h: 860: extern volatile unsigned char CCP1CON @ 0x017;
"862
[; ;pic16f883.h: 862: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f883.h: 865: typedef union {
[; ;pic16f883.h: 866: struct {
[; ;pic16f883.h: 867: unsigned CCP1M :4;
[; ;pic16f883.h: 868: unsigned DC1B :2;
[; ;pic16f883.h: 869: unsigned P1M :2;
[; ;pic16f883.h: 870: };
[; ;pic16f883.h: 871: struct {
[; ;pic16f883.h: 872: unsigned CCP1M0 :1;
[; ;pic16f883.h: 873: unsigned CCP1M1 :1;
[; ;pic16f883.h: 874: unsigned CCP1M2 :1;
[; ;pic16f883.h: 875: unsigned CCP1M3 :1;
[; ;pic16f883.h: 876: unsigned DC1B0 :1;
[; ;pic16f883.h: 877: unsigned DC1B1 :1;
[; ;pic16f883.h: 878: unsigned P1M0 :1;
[; ;pic16f883.h: 879: unsigned P1M1 :1;
[; ;pic16f883.h: 880: };
[; ;pic16f883.h: 881: struct {
[; ;pic16f883.h: 882: unsigned :4;
[; ;pic16f883.h: 883: unsigned CCP1Y :1;
[; ;pic16f883.h: 884: unsigned CCP1X :1;
[; ;pic16f883.h: 885: };
[; ;pic16f883.h: 886: } CCP1CONbits_t;
[; ;pic16f883.h: 887: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f883.h: 957: extern volatile unsigned char RCSTA @ 0x018;
"959
[; ;pic16f883.h: 959: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f883.h: 962: typedef union {
[; ;pic16f883.h: 963: struct {
[; ;pic16f883.h: 964: unsigned RX9D :1;
[; ;pic16f883.h: 965: unsigned OERR :1;
[; ;pic16f883.h: 966: unsigned FERR :1;
[; ;pic16f883.h: 967: unsigned ADDEN :1;
[; ;pic16f883.h: 968: unsigned CREN :1;
[; ;pic16f883.h: 969: unsigned SREN :1;
[; ;pic16f883.h: 970: unsigned RX9 :1;
[; ;pic16f883.h: 971: unsigned SPEN :1;
[; ;pic16f883.h: 972: };
[; ;pic16f883.h: 973: struct {
[; ;pic16f883.h: 974: unsigned RCD8 :1;
[; ;pic16f883.h: 975: unsigned :5;
[; ;pic16f883.h: 976: unsigned RC9 :1;
[; ;pic16f883.h: 977: };
[; ;pic16f883.h: 978: struct {
[; ;pic16f883.h: 979: unsigned :6;
[; ;pic16f883.h: 980: unsigned nRC8 :1;
[; ;pic16f883.h: 981: };
[; ;pic16f883.h: 982: struct {
[; ;pic16f883.h: 983: unsigned :6;
[; ;pic16f883.h: 984: unsigned RC8_9 :1;
[; ;pic16f883.h: 985: };
[; ;pic16f883.h: 986: } RCSTAbits_t;
[; ;pic16f883.h: 987: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f883.h: 1052: extern volatile unsigned char TXREG @ 0x019;
"1054
[; ;pic16f883.h: 1054: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f883.h: 1059: extern volatile unsigned char RCREG @ 0x01A;
"1061
[; ;pic16f883.h: 1061: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f883.h: 1066: extern volatile unsigned short CCPR2 @ 0x01B;
"1068
[; ;pic16f883.h: 1068: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f883.h: 1073: extern volatile unsigned char CCPR2L @ 0x01B;
"1075
[; ;pic16f883.h: 1075: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f883.h: 1080: extern volatile unsigned char CCPR2H @ 0x01C;
"1082
[; ;pic16f883.h: 1082: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f883.h: 1087: extern volatile unsigned char CCP2CON @ 0x01D;
"1089
[; ;pic16f883.h: 1089: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f883.h: 1092: typedef union {
[; ;pic16f883.h: 1093: struct {
[; ;pic16f883.h: 1094: unsigned CCP2M :4;
[; ;pic16f883.h: 1095: unsigned DC2B0 :1;
[; ;pic16f883.h: 1096: unsigned DC2B1 :1;
[; ;pic16f883.h: 1097: };
[; ;pic16f883.h: 1098: struct {
[; ;pic16f883.h: 1099: unsigned CCP2M0 :1;
[; ;pic16f883.h: 1100: unsigned CCP2M1 :1;
[; ;pic16f883.h: 1101: unsigned CCP2M2 :1;
[; ;pic16f883.h: 1102: unsigned CCP2M3 :1;
[; ;pic16f883.h: 1103: unsigned CCP2Y :1;
[; ;pic16f883.h: 1104: unsigned CCP2X :1;
[; ;pic16f883.h: 1105: };
[; ;pic16f883.h: 1106: } CCP2CONbits_t;
[; ;pic16f883.h: 1107: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16f883.h: 1157: extern volatile unsigned char ADRESH @ 0x01E;
"1159
[; ;pic16f883.h: 1159: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f883.h: 1164: extern volatile unsigned char ADCON0 @ 0x01F;
"1166
[; ;pic16f883.h: 1166: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f883.h: 1169: typedef union {
[; ;pic16f883.h: 1170: struct {
[; ;pic16f883.h: 1171: unsigned ADON :1;
[; ;pic16f883.h: 1172: unsigned GO_nDONE :1;
[; ;pic16f883.h: 1173: unsigned CHS :4;
[; ;pic16f883.h: 1174: unsigned ADCS :2;
[; ;pic16f883.h: 1175: };
[; ;pic16f883.h: 1176: struct {
[; ;pic16f883.h: 1177: unsigned :1;
[; ;pic16f883.h: 1178: unsigned GO :1;
[; ;pic16f883.h: 1179: unsigned CHS0 :1;
[; ;pic16f883.h: 1180: unsigned CHS1 :1;
[; ;pic16f883.h: 1181: unsigned CHS2 :1;
[; ;pic16f883.h: 1182: unsigned CHS3 :1;
[; ;pic16f883.h: 1183: unsigned ADCS0 :1;
[; ;pic16f883.h: 1184: unsigned ADCS1 :1;
[; ;pic16f883.h: 1185: };
[; ;pic16f883.h: 1186: struct {
[; ;pic16f883.h: 1187: unsigned :1;
[; ;pic16f883.h: 1188: unsigned nDONE :1;
[; ;pic16f883.h: 1189: };
[; ;pic16f883.h: 1190: struct {
[; ;pic16f883.h: 1191: unsigned :1;
[; ;pic16f883.h: 1192: unsigned GO_DONE :1;
[; ;pic16f883.h: 1193: };
[; ;pic16f883.h: 1194: } ADCON0bits_t;
[; ;pic16f883.h: 1195: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f883.h: 1265: extern volatile unsigned char OPTION_REG @ 0x081;
"1267
[; ;pic16f883.h: 1267: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f883.h: 1270: typedef union {
[; ;pic16f883.h: 1271: struct {
[; ;pic16f883.h: 1272: unsigned PS :3;
[; ;pic16f883.h: 1273: unsigned PSA :1;
[; ;pic16f883.h: 1274: unsigned T0SE :1;
[; ;pic16f883.h: 1275: unsigned T0CS :1;
[; ;pic16f883.h: 1276: unsigned INTEDG :1;
[; ;pic16f883.h: 1277: unsigned nRBPU :1;
[; ;pic16f883.h: 1278: };
[; ;pic16f883.h: 1279: struct {
[; ;pic16f883.h: 1280: unsigned PS0 :1;
[; ;pic16f883.h: 1281: unsigned PS1 :1;
[; ;pic16f883.h: 1282: unsigned PS2 :1;
[; ;pic16f883.h: 1283: };
[; ;pic16f883.h: 1284: } OPTION_REGbits_t;
[; ;pic16f883.h: 1285: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f883.h: 1335: extern volatile unsigned char TRISA @ 0x085;
"1337
[; ;pic16f883.h: 1337: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f883.h: 1340: typedef union {
[; ;pic16f883.h: 1341: struct {
[; ;pic16f883.h: 1342: unsigned TRISA0 :1;
[; ;pic16f883.h: 1343: unsigned TRISA1 :1;
[; ;pic16f883.h: 1344: unsigned TRISA2 :1;
[; ;pic16f883.h: 1345: unsigned TRISA3 :1;
[; ;pic16f883.h: 1346: unsigned TRISA4 :1;
[; ;pic16f883.h: 1347: unsigned TRISA5 :1;
[; ;pic16f883.h: 1348: unsigned TRISA6 :1;
[; ;pic16f883.h: 1349: unsigned TRISA7 :1;
[; ;pic16f883.h: 1350: };
[; ;pic16f883.h: 1351: } TRISAbits_t;
[; ;pic16f883.h: 1352: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f883.h: 1397: extern volatile unsigned char TRISB @ 0x086;
"1399
[; ;pic16f883.h: 1399: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f883.h: 1402: typedef union {
[; ;pic16f883.h: 1403: struct {
[; ;pic16f883.h: 1404: unsigned TRISB0 :1;
[; ;pic16f883.h: 1405: unsigned TRISB1 :1;
[; ;pic16f883.h: 1406: unsigned TRISB2 :1;
[; ;pic16f883.h: 1407: unsigned TRISB3 :1;
[; ;pic16f883.h: 1408: unsigned TRISB4 :1;
[; ;pic16f883.h: 1409: unsigned TRISB5 :1;
[; ;pic16f883.h: 1410: unsigned TRISB6 :1;
[; ;pic16f883.h: 1411: unsigned TRISB7 :1;
[; ;pic16f883.h: 1412: };
[; ;pic16f883.h: 1413: } TRISBbits_t;
[; ;pic16f883.h: 1414: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f883.h: 1459: extern volatile unsigned char TRISC @ 0x087;
"1461
[; ;pic16f883.h: 1461: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f883.h: 1464: typedef union {
[; ;pic16f883.h: 1465: struct {
[; ;pic16f883.h: 1466: unsigned TRISC0 :1;
[; ;pic16f883.h: 1467: unsigned TRISC1 :1;
[; ;pic16f883.h: 1468: unsigned TRISC2 :1;
[; ;pic16f883.h: 1469: unsigned TRISC3 :1;
[; ;pic16f883.h: 1470: unsigned TRISC4 :1;
[; ;pic16f883.h: 1471: unsigned TRISC5 :1;
[; ;pic16f883.h: 1472: unsigned TRISC6 :1;
[; ;pic16f883.h: 1473: unsigned TRISC7 :1;
[; ;pic16f883.h: 1474: };
[; ;pic16f883.h: 1475: } TRISCbits_t;
[; ;pic16f883.h: 1476: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f883.h: 1521: extern volatile unsigned char TRISE @ 0x089;
"1523
[; ;pic16f883.h: 1523: asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
[; ;pic16f883.h: 1526: typedef union {
[; ;pic16f883.h: 1527: struct {
[; ;pic16f883.h: 1528: unsigned :3;
[; ;pic16f883.h: 1529: unsigned TRISE3 :1;
[; ;pic16f883.h: 1530: };
[; ;pic16f883.h: 1531: } TRISEbits_t;
[; ;pic16f883.h: 1532: extern volatile TRISEbits_t TRISEbits @ 0x089;
[; ;pic16f883.h: 1542: extern volatile unsigned char PIE1 @ 0x08C;
"1544
[; ;pic16f883.h: 1544: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f883.h: 1547: typedef union {
[; ;pic16f883.h: 1548: struct {
[; ;pic16f883.h: 1549: unsigned TMR1IE :1;
[; ;pic16f883.h: 1550: unsigned TMR2IE :1;
[; ;pic16f883.h: 1551: unsigned CCP1IE :1;
[; ;pic16f883.h: 1552: unsigned SSPIE :1;
[; ;pic16f883.h: 1553: unsigned TXIE :1;
[; ;pic16f883.h: 1554: unsigned RCIE :1;
[; ;pic16f883.h: 1555: unsigned ADIE :1;
[; ;pic16f883.h: 1556: };
[; ;pic16f883.h: 1557: } PIE1bits_t;
[; ;pic16f883.h: 1558: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f883.h: 1598: extern volatile unsigned char PIE2 @ 0x08D;
"1600
[; ;pic16f883.h: 1600: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f883.h: 1603: typedef union {
[; ;pic16f883.h: 1604: struct {
[; ;pic16f883.h: 1605: unsigned CCP2IE :1;
[; ;pic16f883.h: 1606: unsigned :1;
[; ;pic16f883.h: 1607: unsigned ULPWUIE :1;
[; ;pic16f883.h: 1608: unsigned BCLIE :1;
[; ;pic16f883.h: 1609: unsigned EEIE :1;
[; ;pic16f883.h: 1610: unsigned C1IE :1;
[; ;pic16f883.h: 1611: unsigned C2IE :1;
[; ;pic16f883.h: 1612: unsigned OSFIE :1;
[; ;pic16f883.h: 1613: };
[; ;pic16f883.h: 1614: } PIE2bits_t;
[; ;pic16f883.h: 1615: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f883.h: 1655: extern volatile unsigned char PCON @ 0x08E;
"1657
[; ;pic16f883.h: 1657: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f883.h: 1660: typedef union {
[; ;pic16f883.h: 1661: struct {
[; ;pic16f883.h: 1662: unsigned nBOR :1;
[; ;pic16f883.h: 1663: unsigned nPOR :1;
[; ;pic16f883.h: 1664: unsigned :2;
[; ;pic16f883.h: 1665: unsigned SBOREN :1;
[; ;pic16f883.h: 1666: unsigned ULPWUE :1;
[; ;pic16f883.h: 1667: };
[; ;pic16f883.h: 1668: struct {
[; ;pic16f883.h: 1669: unsigned nBO :1;
[; ;pic16f883.h: 1670: };
[; ;pic16f883.h: 1671: } PCONbits_t;
[; ;pic16f883.h: 1672: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f883.h: 1702: extern volatile unsigned char OSCCON @ 0x08F;
"1704
[; ;pic16f883.h: 1704: asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
[; ;pic16f883.h: 1707: typedef union {
[; ;pic16f883.h: 1708: struct {
[; ;pic16f883.h: 1709: unsigned SCS :1;
[; ;pic16f883.h: 1710: unsigned LTS :1;
[; ;pic16f883.h: 1711: unsigned HTS :1;
[; ;pic16f883.h: 1712: unsigned OSTS :1;
[; ;pic16f883.h: 1713: unsigned IRCF :3;
[; ;pic16f883.h: 1714: };
[; ;pic16f883.h: 1715: struct {
[; ;pic16f883.h: 1716: unsigned :4;
[; ;pic16f883.h: 1717: unsigned IRCF0 :1;
[; ;pic16f883.h: 1718: unsigned IRCF1 :1;
[; ;pic16f883.h: 1719: unsigned IRCF2 :1;
[; ;pic16f883.h: 1720: };
[; ;pic16f883.h: 1721: } OSCCONbits_t;
[; ;pic16f883.h: 1722: extern volatile OSCCONbits_t OSCCONbits @ 0x08F;
[; ;pic16f883.h: 1767: extern volatile unsigned char OSCTUNE @ 0x090;
"1769
[; ;pic16f883.h: 1769: asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
[; ;pic16f883.h: 1772: typedef union {
[; ;pic16f883.h: 1773: struct {
[; ;pic16f883.h: 1774: unsigned TUN :5;
[; ;pic16f883.h: 1775: };
[; ;pic16f883.h: 1776: struct {
[; ;pic16f883.h: 1777: unsigned TUN0 :1;
[; ;pic16f883.h: 1778: unsigned TUN1 :1;
[; ;pic16f883.h: 1779: unsigned TUN2 :1;
[; ;pic16f883.h: 1780: unsigned TUN3 :1;
[; ;pic16f883.h: 1781: unsigned TUN4 :1;
[; ;pic16f883.h: 1782: };
[; ;pic16f883.h: 1783: } OSCTUNEbits_t;
[; ;pic16f883.h: 1784: extern volatile OSCTUNEbits_t OSCTUNEbits @ 0x090;
[; ;pic16f883.h: 1819: extern volatile unsigned char SSPCON2 @ 0x091;
"1821
[; ;pic16f883.h: 1821: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f883.h: 1824: typedef union {
[; ;pic16f883.h: 1825: struct {
[; ;pic16f883.h: 1826: unsigned SEN :1;
[; ;pic16f883.h: 1827: unsigned RSEN :1;
[; ;pic16f883.h: 1828: unsigned PEN :1;
[; ;pic16f883.h: 1829: unsigned RCEN :1;
[; ;pic16f883.h: 1830: unsigned ACKEN :1;
[; ;pic16f883.h: 1831: unsigned ACKDT :1;
[; ;pic16f883.h: 1832: unsigned ACKSTAT :1;
[; ;pic16f883.h: 1833: unsigned GCEN :1;
[; ;pic16f883.h: 1834: };
[; ;pic16f883.h: 1835: } SSPCON2bits_t;
[; ;pic16f883.h: 1836: extern volatile SSPCON2bits_t SSPCON2bits @ 0x091;
[; ;pic16f883.h: 1881: extern volatile unsigned char PR2 @ 0x092;
"1883
[; ;pic16f883.h: 1883: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f883.h: 1888: extern volatile unsigned char SSPADD @ 0x093;
"1890
[; ;pic16f883.h: 1890: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f883.h: 1895: extern volatile unsigned char SSPMSK @ 0x093;
"1897
[; ;pic16f883.h: 1897: asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
[; ;pic16f883.h: 1900: extern volatile unsigned char MSK @ 0x093;
"1902
[; ;pic16f883.h: 1902: asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
[; ;pic16f883.h: 1905: typedef union {
[; ;pic16f883.h: 1906: struct {
[; ;pic16f883.h: 1907: unsigned MSK0 :1;
[; ;pic16f883.h: 1908: unsigned MSK1 :1;
[; ;pic16f883.h: 1909: unsigned MSK2 :1;
[; ;pic16f883.h: 1910: unsigned MSK3 :1;
[; ;pic16f883.h: 1911: unsigned MSK4 :1;
[; ;pic16f883.h: 1912: unsigned MSK5 :1;
[; ;pic16f883.h: 1913: unsigned MSK6 :1;
[; ;pic16f883.h: 1914: unsigned MSK7 :1;
[; ;pic16f883.h: 1915: };
[; ;pic16f883.h: 1916: } SSPMSKbits_t;
[; ;pic16f883.h: 1917: extern volatile SSPMSKbits_t SSPMSKbits @ 0x093;
[; ;pic16f883.h: 1960: typedef union {
[; ;pic16f883.h: 1961: struct {
[; ;pic16f883.h: 1962: unsigned MSK0 :1;
[; ;pic16f883.h: 1963: unsigned MSK1 :1;
[; ;pic16f883.h: 1964: unsigned MSK2 :1;
[; ;pic16f883.h: 1965: unsigned MSK3 :1;
[; ;pic16f883.h: 1966: unsigned MSK4 :1;
[; ;pic16f883.h: 1967: unsigned MSK5 :1;
[; ;pic16f883.h: 1968: unsigned MSK6 :1;
[; ;pic16f883.h: 1969: unsigned MSK7 :1;
[; ;pic16f883.h: 1970: };
[; ;pic16f883.h: 1971: } MSKbits_t;
[; ;pic16f883.h: 1972: extern volatile MSKbits_t MSKbits @ 0x093;
[; ;pic16f883.h: 2017: extern volatile unsigned char SSPSTAT @ 0x094;
"2019
[; ;pic16f883.h: 2019: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f883.h: 2022: typedef union {
[; ;pic16f883.h: 2023: struct {
[; ;pic16f883.h: 2024: unsigned BF :1;
[; ;pic16f883.h: 2025: unsigned UA :1;
[; ;pic16f883.h: 2026: unsigned R_nW :1;
[; ;pic16f883.h: 2027: unsigned S :1;
[; ;pic16f883.h: 2028: unsigned P :1;
[; ;pic16f883.h: 2029: unsigned D_nA :1;
[; ;pic16f883.h: 2030: unsigned CKE :1;
[; ;pic16f883.h: 2031: unsigned SMP :1;
[; ;pic16f883.h: 2032: };
[; ;pic16f883.h: 2033: struct {
[; ;pic16f883.h: 2034: unsigned :2;
[; ;pic16f883.h: 2035: unsigned R :1;
[; ;pic16f883.h: 2036: unsigned :2;
[; ;pic16f883.h: 2037: unsigned D :1;
[; ;pic16f883.h: 2038: };
[; ;pic16f883.h: 2039: struct {
[; ;pic16f883.h: 2040: unsigned :2;
[; ;pic16f883.h: 2041: unsigned I2C_READ :1;
[; ;pic16f883.h: 2042: unsigned I2C_START :1;
[; ;pic16f883.h: 2043: unsigned I2C_STOP :1;
[; ;pic16f883.h: 2044: unsigned I2C_DATA :1;
[; ;pic16f883.h: 2045: };
[; ;pic16f883.h: 2046: struct {
[; ;pic16f883.h: 2047: unsigned :2;
[; ;pic16f883.h: 2048: unsigned nW :1;
[; ;pic16f883.h: 2049: unsigned :2;
[; ;pic16f883.h: 2050: unsigned nA :1;
[; ;pic16f883.h: 2051: };
[; ;pic16f883.h: 2052: struct {
[; ;pic16f883.h: 2053: unsigned :2;
[; ;pic16f883.h: 2054: unsigned nWRITE :1;
[; ;pic16f883.h: 2055: unsigned :2;
[; ;pic16f883.h: 2056: unsigned nADDRESS :1;
[; ;pic16f883.h: 2057: };
[; ;pic16f883.h: 2058: struct {
[; ;pic16f883.h: 2059: unsigned :2;
[; ;pic16f883.h: 2060: unsigned R_W :1;
[; ;pic16f883.h: 2061: unsigned :2;
[; ;pic16f883.h: 2062: unsigned D_A :1;
[; ;pic16f883.h: 2063: };
[; ;pic16f883.h: 2064: struct {
[; ;pic16f883.h: 2065: unsigned :2;
[; ;pic16f883.h: 2066: unsigned READ_WRITE :1;
[; ;pic16f883.h: 2067: unsigned :2;
[; ;pic16f883.h: 2068: unsigned DATA_ADDRESS :1;
[; ;pic16f883.h: 2069: };
[; ;pic16f883.h: 2070: } SSPSTATbits_t;
[; ;pic16f883.h: 2071: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f883.h: 2186: extern volatile unsigned char WPUB @ 0x095;
"2188
[; ;pic16f883.h: 2188: asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
[; ;pic16f883.h: 2191: typedef union {
[; ;pic16f883.h: 2192: struct {
[; ;pic16f883.h: 2193: unsigned WPUB :8;
[; ;pic16f883.h: 2194: };
[; ;pic16f883.h: 2195: struct {
[; ;pic16f883.h: 2196: unsigned WPUB0 :1;
[; ;pic16f883.h: 2197: unsigned WPUB1 :1;
[; ;pic16f883.h: 2198: unsigned WPUB2 :1;
[; ;pic16f883.h: 2199: unsigned WPUB3 :1;
[; ;pic16f883.h: 2200: unsigned WPUB4 :1;
[; ;pic16f883.h: 2201: unsigned WPUB5 :1;
[; ;pic16f883.h: 2202: unsigned WPUB6 :1;
[; ;pic16f883.h: 2203: unsigned WPUB7 :1;
[; ;pic16f883.h: 2204: };
[; ;pic16f883.h: 2205: } WPUBbits_t;
[; ;pic16f883.h: 2206: extern volatile WPUBbits_t WPUBbits @ 0x095;
[; ;pic16f883.h: 2256: extern volatile unsigned char IOCB @ 0x096;
"2258
[; ;pic16f883.h: 2258: asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
[; ;pic16f883.h: 2261: typedef union {
[; ;pic16f883.h: 2262: struct {
[; ;pic16f883.h: 2263: unsigned IOCB :8;
[; ;pic16f883.h: 2264: };
[; ;pic16f883.h: 2265: struct {
[; ;pic16f883.h: 2266: unsigned IOCB0 :1;
[; ;pic16f883.h: 2267: unsigned IOCB1 :1;
[; ;pic16f883.h: 2268: unsigned IOCB2 :1;
[; ;pic16f883.h: 2269: unsigned IOCB3 :1;
[; ;pic16f883.h: 2270: unsigned IOCB4 :1;
[; ;pic16f883.h: 2271: unsigned IOCB5 :1;
[; ;pic16f883.h: 2272: unsigned IOCB6 :1;
[; ;pic16f883.h: 2273: unsigned IOCB7 :1;
[; ;pic16f883.h: 2274: };
[; ;pic16f883.h: 2275: } IOCBbits_t;
[; ;pic16f883.h: 2276: extern volatile IOCBbits_t IOCBbits @ 0x096;
[; ;pic16f883.h: 2326: extern volatile unsigned char VRCON @ 0x097;
"2328
[; ;pic16f883.h: 2328: asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
[; ;pic16f883.h: 2331: typedef union {
[; ;pic16f883.h: 2332: struct {
[; ;pic16f883.h: 2333: unsigned VR :4;
[; ;pic16f883.h: 2334: unsigned VRSS :1;
[; ;pic16f883.h: 2335: unsigned VRR :1;
[; ;pic16f883.h: 2336: unsigned VROE :1;
[; ;pic16f883.h: 2337: unsigned VREN :1;
[; ;pic16f883.h: 2338: };
[; ;pic16f883.h: 2339: struct {
[; ;pic16f883.h: 2340: unsigned VR0 :1;
[; ;pic16f883.h: 2341: unsigned VR1 :1;
[; ;pic16f883.h: 2342: unsigned VR2 :1;
[; ;pic16f883.h: 2343: unsigned VR3 :1;
[; ;pic16f883.h: 2344: };
[; ;pic16f883.h: 2345: } VRCONbits_t;
[; ;pic16f883.h: 2346: extern volatile VRCONbits_t VRCONbits @ 0x097;
[; ;pic16f883.h: 2396: extern volatile unsigned char TXSTA @ 0x098;
"2398
[; ;pic16f883.h: 2398: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f883.h: 2401: typedef union {
[; ;pic16f883.h: 2402: struct {
[; ;pic16f883.h: 2403: unsigned TX9D :1;
[; ;pic16f883.h: 2404: unsigned TRMT :1;
[; ;pic16f883.h: 2405: unsigned BRGH :1;
[; ;pic16f883.h: 2406: unsigned SENDB :1;
[; ;pic16f883.h: 2407: unsigned SYNC :1;
[; ;pic16f883.h: 2408: unsigned TXEN :1;
[; ;pic16f883.h: 2409: unsigned TX9 :1;
[; ;pic16f883.h: 2410: unsigned CSRC :1;
[; ;pic16f883.h: 2411: };
[; ;pic16f883.h: 2412: struct {
[; ;pic16f883.h: 2413: unsigned TXD8 :1;
[; ;pic16f883.h: 2414: unsigned :5;
[; ;pic16f883.h: 2415: unsigned nTX8 :1;
[; ;pic16f883.h: 2416: };
[; ;pic16f883.h: 2417: struct {
[; ;pic16f883.h: 2418: unsigned :6;
[; ;pic16f883.h: 2419: unsigned TX8_9 :1;
[; ;pic16f883.h: 2420: };
[; ;pic16f883.h: 2421: } TXSTAbits_t;
[; ;pic16f883.h: 2422: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f883.h: 2482: extern volatile unsigned char SPBRG @ 0x099;
"2484
[; ;pic16f883.h: 2484: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f883.h: 2487: typedef union {
[; ;pic16f883.h: 2488: struct {
[; ;pic16f883.h: 2489: unsigned BRG0 :1;
[; ;pic16f883.h: 2490: unsigned BRG1 :1;
[; ;pic16f883.h: 2491: unsigned BRG2 :1;
[; ;pic16f883.h: 2492: unsigned BRG3 :1;
[; ;pic16f883.h: 2493: unsigned BRG4 :1;
[; ;pic16f883.h: 2494: unsigned BRG5 :1;
[; ;pic16f883.h: 2495: unsigned BRG6 :1;
[; ;pic16f883.h: 2496: unsigned BRG7 :1;
[; ;pic16f883.h: 2497: };
[; ;pic16f883.h: 2498: } SPBRGbits_t;
[; ;pic16f883.h: 2499: extern volatile SPBRGbits_t SPBRGbits @ 0x099;
[; ;pic16f883.h: 2544: extern volatile unsigned char SPBRGH @ 0x09A;
"2546
[; ;pic16f883.h: 2546: asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
[; ;pic16f883.h: 2549: typedef union {
[; ;pic16f883.h: 2550: struct {
[; ;pic16f883.h: 2551: unsigned SPBRGH :8;
[; ;pic16f883.h: 2552: };
[; ;pic16f883.h: 2553: struct {
[; ;pic16f883.h: 2554: unsigned BRG8 :1;
[; ;pic16f883.h: 2555: unsigned BRG9 :1;
[; ;pic16f883.h: 2556: unsigned BRG10 :1;
[; ;pic16f883.h: 2557: unsigned BRG11 :1;
[; ;pic16f883.h: 2558: unsigned BRG12 :1;
[; ;pic16f883.h: 2559: unsigned BRG13 :1;
[; ;pic16f883.h: 2560: unsigned BRG14 :1;
[; ;pic16f883.h: 2561: unsigned BRG15 :1;
[; ;pic16f883.h: 2562: };
[; ;pic16f883.h: 2563: } SPBRGHbits_t;
[; ;pic16f883.h: 2564: extern volatile SPBRGHbits_t SPBRGHbits @ 0x09A;
[; ;pic16f883.h: 2614: extern volatile unsigned char PWM1CON @ 0x09B;
"2616
[; ;pic16f883.h: 2616: asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
[; ;pic16f883.h: 2619: typedef union {
[; ;pic16f883.h: 2620: struct {
[; ;pic16f883.h: 2621: unsigned PDC :7;
[; ;pic16f883.h: 2622: unsigned PRSEN :1;
[; ;pic16f883.h: 2623: };
[; ;pic16f883.h: 2624: struct {
[; ;pic16f883.h: 2625: unsigned PDC0 :1;
[; ;pic16f883.h: 2626: unsigned PDC1 :1;
[; ;pic16f883.h: 2627: unsigned PDC2 :1;
[; ;pic16f883.h: 2628: unsigned PDC3 :1;
[; ;pic16f883.h: 2629: unsigned PDC4 :1;
[; ;pic16f883.h: 2630: unsigned PDC5 :1;
[; ;pic16f883.h: 2631: unsigned PDC6 :1;
[; ;pic16f883.h: 2632: };
[; ;pic16f883.h: 2633: } PWM1CONbits_t;
[; ;pic16f883.h: 2634: extern volatile PWM1CONbits_t PWM1CONbits @ 0x09B;
[; ;pic16f883.h: 2684: extern volatile unsigned char ECCPAS @ 0x09C;
"2686
[; ;pic16f883.h: 2686: asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
[; ;pic16f883.h: 2689: typedef union {
[; ;pic16f883.h: 2690: struct {
[; ;pic16f883.h: 2691: unsigned PSSBD :2;
[; ;pic16f883.h: 2692: unsigned PSSAC :2;
[; ;pic16f883.h: 2693: unsigned ECCPAS :3;
[; ;pic16f883.h: 2694: unsigned ECCPASE :1;
[; ;pic16f883.h: 2695: };
[; ;pic16f883.h: 2696: struct {
[; ;pic16f883.h: 2697: unsigned PSSBD0 :1;
[; ;pic16f883.h: 2698: unsigned PSSBD1 :1;
[; ;pic16f883.h: 2699: unsigned PSSAC0 :1;
[; ;pic16f883.h: 2700: unsigned PSSAC1 :1;
[; ;pic16f883.h: 2701: unsigned ECCPAS0 :1;
[; ;pic16f883.h: 2702: unsigned ECCPAS1 :1;
[; ;pic16f883.h: 2703: unsigned ECCPAS2 :1;
[; ;pic16f883.h: 2704: };
[; ;pic16f883.h: 2705: } ECCPASbits_t;
[; ;pic16f883.h: 2706: extern volatile ECCPASbits_t ECCPASbits @ 0x09C;
[; ;pic16f883.h: 2766: extern volatile unsigned char PSTRCON @ 0x09D;
"2768
[; ;pic16f883.h: 2768: asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
[; ;pic16f883.h: 2771: typedef union {
[; ;pic16f883.h: 2772: struct {
[; ;pic16f883.h: 2773: unsigned STRA :1;
[; ;pic16f883.h: 2774: unsigned STRB :1;
[; ;pic16f883.h: 2775: unsigned STRC :1;
[; ;pic16f883.h: 2776: unsigned STRD :1;
[; ;pic16f883.h: 2777: unsigned STRSYNC :1;
[; ;pic16f883.h: 2778: };
[; ;pic16f883.h: 2779: } PSTRCONbits_t;
[; ;pic16f883.h: 2780: extern volatile PSTRCONbits_t PSTRCONbits @ 0x09D;
[; ;pic16f883.h: 2810: extern volatile unsigned char ADRESL @ 0x09E;
"2812
[; ;pic16f883.h: 2812: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f883.h: 2817: extern volatile unsigned char ADCON1 @ 0x09F;
"2819
[; ;pic16f883.h: 2819: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f883.h: 2822: typedef union {
[; ;pic16f883.h: 2823: struct {
[; ;pic16f883.h: 2824: unsigned :4;
[; ;pic16f883.h: 2825: unsigned VCFG0 :1;
[; ;pic16f883.h: 2826: unsigned VCFG1 :1;
[; ;pic16f883.h: 2827: unsigned :1;
[; ;pic16f883.h: 2828: unsigned ADFM :1;
[; ;pic16f883.h: 2829: };
[; ;pic16f883.h: 2830: } ADCON1bits_t;
[; ;pic16f883.h: 2831: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f883.h: 2851: extern volatile unsigned char WDTCON @ 0x105;
"2853
[; ;pic16f883.h: 2853: asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
[; ;pic16f883.h: 2856: typedef union {
[; ;pic16f883.h: 2857: struct {
[; ;pic16f883.h: 2858: unsigned SWDTEN :1;
[; ;pic16f883.h: 2859: unsigned WDTPS :4;
[; ;pic16f883.h: 2860: };
[; ;pic16f883.h: 2861: struct {
[; ;pic16f883.h: 2862: unsigned :1;
[; ;pic16f883.h: 2863: unsigned WDTPS0 :1;
[; ;pic16f883.h: 2864: unsigned WDTPS1 :1;
[; ;pic16f883.h: 2865: unsigned WDTPS2 :1;
[; ;pic16f883.h: 2866: unsigned WDTPS3 :1;
[; ;pic16f883.h: 2867: };
[; ;pic16f883.h: 2868: } WDTCONbits_t;
[; ;pic16f883.h: 2869: extern volatile WDTCONbits_t WDTCONbits @ 0x105;
[; ;pic16f883.h: 2904: extern volatile unsigned char CM1CON0 @ 0x107;
"2906
[; ;pic16f883.h: 2906: asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
[; ;pic16f883.h: 2909: typedef union {
[; ;pic16f883.h: 2910: struct {
[; ;pic16f883.h: 2911: unsigned C1CH :2;
[; ;pic16f883.h: 2912: unsigned C1R :1;
[; ;pic16f883.h: 2913: unsigned :1;
[; ;pic16f883.h: 2914: unsigned C1POL :1;
[; ;pic16f883.h: 2915: unsigned C1OE :1;
[; ;pic16f883.h: 2916: unsigned C1OUT :1;
[; ;pic16f883.h: 2917: unsigned C1ON :1;
[; ;pic16f883.h: 2918: };
[; ;pic16f883.h: 2919: struct {
[; ;pic16f883.h: 2920: unsigned C1CH0 :1;
[; ;pic16f883.h: 2921: unsigned C1CH1 :1;
[; ;pic16f883.h: 2922: };
[; ;pic16f883.h: 2923: } CM1CON0bits_t;
[; ;pic16f883.h: 2924: extern volatile CM1CON0bits_t CM1CON0bits @ 0x107;
[; ;pic16f883.h: 2969: extern volatile unsigned char CM2CON0 @ 0x108;
"2971
[; ;pic16f883.h: 2971: asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
[; ;pic16f883.h: 2974: typedef union {
[; ;pic16f883.h: 2975: struct {
[; ;pic16f883.h: 2976: unsigned C2CH :2;
[; ;pic16f883.h: 2977: unsigned C2R :1;
[; ;pic16f883.h: 2978: unsigned :1;
[; ;pic16f883.h: 2979: unsigned C2POL :1;
[; ;pic16f883.h: 2980: unsigned C2OE :1;
[; ;pic16f883.h: 2981: unsigned C2OUT :1;
[; ;pic16f883.h: 2982: unsigned C2ON :1;
[; ;pic16f883.h: 2983: };
[; ;pic16f883.h: 2984: struct {
[; ;pic16f883.h: 2985: unsigned C2CH0 :1;
[; ;pic16f883.h: 2986: unsigned C2CH1 :1;
[; ;pic16f883.h: 2987: };
[; ;pic16f883.h: 2988: } CM2CON0bits_t;
[; ;pic16f883.h: 2989: extern volatile CM2CON0bits_t CM2CON0bits @ 0x108;
[; ;pic16f883.h: 3034: extern volatile unsigned char CM2CON1 @ 0x109;
"3036
[; ;pic16f883.h: 3036: asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
[; ;pic16f883.h: 3039: typedef union {
[; ;pic16f883.h: 3040: struct {
[; ;pic16f883.h: 3041: unsigned C2SYNC :1;
[; ;pic16f883.h: 3042: unsigned T1GSS :1;
[; ;pic16f883.h: 3043: unsigned :2;
[; ;pic16f883.h: 3044: unsigned C2RSEL :1;
[; ;pic16f883.h: 3045: unsigned C1RSEL :1;
[; ;pic16f883.h: 3046: unsigned MC2OUT :1;
[; ;pic16f883.h: 3047: unsigned MC1OUT :1;
[; ;pic16f883.h: 3048: };
[; ;pic16f883.h: 3049: } CM2CON1bits_t;
[; ;pic16f883.h: 3050: extern volatile CM2CON1bits_t CM2CON1bits @ 0x109;
[; ;pic16f883.h: 3085: extern volatile unsigned char EEDATA @ 0x10C;
"3087
[; ;pic16f883.h: 3087: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f883.h: 3090: extern volatile unsigned char EEDAT @ 0x10C;
"3092
[; ;pic16f883.h: 3092: asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
[; ;pic16f883.h: 3097: extern volatile unsigned char EEADR @ 0x10D;
"3099
[; ;pic16f883.h: 3099: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f883.h: 3104: extern volatile unsigned char EEDATH @ 0x10E;
"3106
[; ;pic16f883.h: 3106: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f883.h: 3111: extern volatile unsigned char EEADRH @ 0x10F;
"3113
[; ;pic16f883.h: 3113: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f883.h: 3118: extern volatile unsigned char SRCON @ 0x185;
"3120
[; ;pic16f883.h: 3120: asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
[; ;pic16f883.h: 3123: typedef union {
[; ;pic16f883.h: 3124: struct {
[; ;pic16f883.h: 3125: unsigned FVREN :1;
[; ;pic16f883.h: 3126: unsigned :1;
[; ;pic16f883.h: 3127: unsigned PULSR :1;
[; ;pic16f883.h: 3128: unsigned PULSS :1;
[; ;pic16f883.h: 3129: unsigned C2REN :1;
[; ;pic16f883.h: 3130: unsigned C1SEN :1;
[; ;pic16f883.h: 3131: unsigned SR0 :1;
[; ;pic16f883.h: 3132: unsigned SR1 :1;
[; ;pic16f883.h: 3133: };
[; ;pic16f883.h: 3134: } SRCONbits_t;
[; ;pic16f883.h: 3135: extern volatile SRCONbits_t SRCONbits @ 0x185;
[; ;pic16f883.h: 3175: extern volatile unsigned char BAUDCTL @ 0x187;
"3177
[; ;pic16f883.h: 3177: asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
[; ;pic16f883.h: 3180: typedef union {
[; ;pic16f883.h: 3181: struct {
[; ;pic16f883.h: 3182: unsigned ABDEN :1;
[; ;pic16f883.h: 3183: unsigned WUE :1;
[; ;pic16f883.h: 3184: unsigned :1;
[; ;pic16f883.h: 3185: unsigned BRG16 :1;
[; ;pic16f883.h: 3186: unsigned SCKP :1;
[; ;pic16f883.h: 3187: unsigned :1;
[; ;pic16f883.h: 3188: unsigned RCIDL :1;
[; ;pic16f883.h: 3189: unsigned ABDOVF :1;
[; ;pic16f883.h: 3190: };
[; ;pic16f883.h: 3191: } BAUDCTLbits_t;
[; ;pic16f883.h: 3192: extern volatile BAUDCTLbits_t BAUDCTLbits @ 0x187;
[; ;pic16f883.h: 3227: extern volatile unsigned char ANSEL @ 0x188;
"3229
[; ;pic16f883.h: 3229: asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
[; ;pic16f883.h: 3232: typedef union {
[; ;pic16f883.h: 3233: struct {
[; ;pic16f883.h: 3234: unsigned ANS0 :1;
[; ;pic16f883.h: 3235: unsigned ANS1 :1;
[; ;pic16f883.h: 3236: unsigned ANS2 :1;
[; ;pic16f883.h: 3237: unsigned ANS3 :1;
[; ;pic16f883.h: 3238: unsigned ANS4 :1;
[; ;pic16f883.h: 3239: };
[; ;pic16f883.h: 3240: } ANSELbits_t;
[; ;pic16f883.h: 3241: extern volatile ANSELbits_t ANSELbits @ 0x188;
[; ;pic16f883.h: 3271: extern volatile unsigned char ANSELH @ 0x189;
"3273
[; ;pic16f883.h: 3273: asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
[; ;pic16f883.h: 3276: typedef union {
[; ;pic16f883.h: 3277: struct {
[; ;pic16f883.h: 3278: unsigned ANS8 :1;
[; ;pic16f883.h: 3279: unsigned ANS9 :1;
[; ;pic16f883.h: 3280: unsigned ANS10 :1;
[; ;pic16f883.h: 3281: unsigned ANS11 :1;
[; ;pic16f883.h: 3282: unsigned ANS12 :1;
[; ;pic16f883.h: 3283: unsigned ANS13 :1;
[; ;pic16f883.h: 3284: };
[; ;pic16f883.h: 3285: } ANSELHbits_t;
[; ;pic16f883.h: 3286: extern volatile ANSELHbits_t ANSELHbits @ 0x189;
[; ;pic16f883.h: 3321: extern volatile unsigned char EECON1 @ 0x18C;
"3323
[; ;pic16f883.h: 3323: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f883.h: 3326: typedef union {
[; ;pic16f883.h: 3327: struct {
[; ;pic16f883.h: 3328: unsigned RD :1;
[; ;pic16f883.h: 3329: unsigned WR :1;
[; ;pic16f883.h: 3330: unsigned WREN :1;
[; ;pic16f883.h: 3331: unsigned WRERR :1;
[; ;pic16f883.h: 3332: unsigned :3;
[; ;pic16f883.h: 3333: unsigned EEPGD :1;
[; ;pic16f883.h: 3334: };
[; ;pic16f883.h: 3335: } EECON1bits_t;
[; ;pic16f883.h: 3336: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;pic16f883.h: 3366: extern volatile unsigned char EECON2 @ 0x18D;
"3368
[; ;pic16f883.h: 3368: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f883.h: 3378: extern volatile __bit ABDEN @ (((unsigned) &BAUDCTL)*8) + 0;
[; ;pic16f883.h: 3380: extern volatile __bit ABDOVF @ (((unsigned) &BAUDCTL)*8) + 7;
[; ;pic16f883.h: 3382: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f883.h: 3384: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f883.h: 3386: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f883.h: 3388: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f883.h: 3390: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f883.h: 3392: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f883.h: 3394: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f883.h: 3396: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f883.h: 3398: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f883.h: 3400: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f883.h: 3402: extern volatile __bit ANS0 @ (((unsigned) &ANSEL)*8) + 0;
[; ;pic16f883.h: 3404: extern volatile __bit ANS1 @ (((unsigned) &ANSEL)*8) + 1;
[; ;pic16f883.h: 3406: extern volatile __bit ANS10 @ (((unsigned) &ANSELH)*8) + 2;
[; ;pic16f883.h: 3408: extern volatile __bit ANS11 @ (((unsigned) &ANSELH)*8) + 3;
[; ;pic16f883.h: 3410: extern volatile __bit ANS12 @ (((unsigned) &ANSELH)*8) + 4;
[; ;pic16f883.h: 3412: extern volatile __bit ANS13 @ (((unsigned) &ANSELH)*8) + 5;
[; ;pic16f883.h: 3414: extern volatile __bit ANS2 @ (((unsigned) &ANSEL)*8) + 2;
[; ;pic16f883.h: 3416: extern volatile __bit ANS3 @ (((unsigned) &ANSEL)*8) + 3;
[; ;pic16f883.h: 3418: extern volatile __bit ANS4 @ (((unsigned) &ANSEL)*8) + 4;
[; ;pic16f883.h: 3420: extern volatile __bit ANS8 @ (((unsigned) &ANSELH)*8) + 0;
[; ;pic16f883.h: 3422: extern volatile __bit ANS9 @ (((unsigned) &ANSELH)*8) + 1;
[; ;pic16f883.h: 3424: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f883.h: 3426: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f883.h: 3428: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f883.h: 3430: extern volatile __bit BRG0 @ (((unsigned) &SPBRG)*8) + 0;
[; ;pic16f883.h: 3432: extern volatile __bit BRG1 @ (((unsigned) &SPBRG)*8) + 1;
[; ;pic16f883.h: 3434: extern volatile __bit BRG10 @ (((unsigned) &SPBRGH)*8) + 2;
[; ;pic16f883.h: 3436: extern volatile __bit BRG11 @ (((unsigned) &SPBRGH)*8) + 3;
[; ;pic16f883.h: 3438: extern volatile __bit BRG12 @ (((unsigned) &SPBRGH)*8) + 4;
[; ;pic16f883.h: 3440: extern volatile __bit BRG13 @ (((unsigned) &SPBRGH)*8) + 5;
[; ;pic16f883.h: 3442: extern volatile __bit BRG14 @ (((unsigned) &SPBRGH)*8) + 6;
[; ;pic16f883.h: 3444: extern volatile __bit BRG15 @ (((unsigned) &SPBRGH)*8) + 7;
[; ;pic16f883.h: 3446: extern volatile __bit BRG16 @ (((unsigned) &BAUDCTL)*8) + 3;
[; ;pic16f883.h: 3448: extern volatile __bit BRG2 @ (((unsigned) &SPBRG)*8) + 2;
[; ;pic16f883.h: 3450: extern volatile __bit BRG3 @ (((unsigned) &SPBRG)*8) + 3;
[; ;pic16f883.h: 3452: extern volatile __bit BRG4 @ (((unsigned) &SPBRG)*8) + 4;
[; ;pic16f883.h: 3454: extern volatile __bit BRG5 @ (((unsigned) &SPBRG)*8) + 5;
[; ;pic16f883.h: 3456: extern volatile __bit BRG6 @ (((unsigned) &SPBRG)*8) + 6;
[; ;pic16f883.h: 3458: extern volatile __bit BRG7 @ (((unsigned) &SPBRG)*8) + 7;
[; ;pic16f883.h: 3460: extern volatile __bit BRG8 @ (((unsigned) &SPBRGH)*8) + 0;
[; ;pic16f883.h: 3462: extern volatile __bit BRG9 @ (((unsigned) &SPBRGH)*8) + 1;
[; ;pic16f883.h: 3464: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f883.h: 3466: extern volatile __bit C1CH0 @ (((unsigned) &CM1CON0)*8) + 0;
[; ;pic16f883.h: 3468: extern volatile __bit C1CH1 @ (((unsigned) &CM1CON0)*8) + 1;
[; ;pic16f883.h: 3470: extern volatile __bit C1IE @ (((unsigned) &PIE2)*8) + 5;
[; ;pic16f883.h: 3472: extern volatile __bit C1IF @ (((unsigned) &PIR2)*8) + 5;
[; ;pic16f883.h: 3474: extern volatile __bit C1OE @ (((unsigned) &CM1CON0)*8) + 5;
[; ;pic16f883.h: 3476: extern volatile __bit C1ON @ (((unsigned) &CM1CON0)*8) + 7;
[; ;pic16f883.h: 3478: extern volatile __bit C1OUT @ (((unsigned) &CM1CON0)*8) + 6;
[; ;pic16f883.h: 3480: extern volatile __bit C1POL @ (((unsigned) &CM1CON0)*8) + 4;
[; ;pic16f883.h: 3482: extern volatile __bit C1R @ (((unsigned) &CM1CON0)*8) + 2;
[; ;pic16f883.h: 3484: extern volatile __bit C1RSEL @ (((unsigned) &CM2CON1)*8) + 5;
[; ;pic16f883.h: 3486: extern volatile __bit C1SEN @ (((unsigned) &SRCON)*8) + 5;
[; ;pic16f883.h: 3488: extern volatile __bit C2CH0 @ (((unsigned) &CM2CON0)*8) + 0;
[; ;pic16f883.h: 3490: extern volatile __bit C2CH1 @ (((unsigned) &CM2CON0)*8) + 1;
[; ;pic16f883.h: 3492: extern volatile __bit C2IE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f883.h: 3494: extern volatile __bit C2IF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f883.h: 3496: extern volatile __bit C2OE @ (((unsigned) &CM2CON0)*8) + 5;
[; ;pic16f883.h: 3498: extern volatile __bit C2ON @ (((unsigned) &CM2CON0)*8) + 7;
[; ;pic16f883.h: 3500: extern volatile __bit C2OUT @ (((unsigned) &CM2CON0)*8) + 6;
[; ;pic16f883.h: 3502: extern volatile __bit C2POL @ (((unsigned) &CM2CON0)*8) + 4;
[; ;pic16f883.h: 3504: extern volatile __bit C2R @ (((unsigned) &CM2CON0)*8) + 2;
[; ;pic16f883.h: 3506: extern volatile __bit C2REN @ (((unsigned) &SRCON)*8) + 4;
[; ;pic16f883.h: 3508: extern volatile __bit C2RSEL @ (((unsigned) &CM2CON1)*8) + 4;
[; ;pic16f883.h: 3510: extern volatile __bit C2SYNC @ (((unsigned) &CM2CON1)*8) + 0;
[; ;pic16f883.h: 3512: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f883.h: 3514: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f883.h: 3516: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f883.h: 3518: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f883.h: 3520: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f883.h: 3522: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f883.h: 3524: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f883.h: 3526: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f883.h: 3528: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f883.h: 3530: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f883.h: 3532: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f883.h: 3534: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f883.h: 3536: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f883.h: 3538: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f883.h: 3540: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f883.h: 3542: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f883.h: 3544: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f883.h: 3546: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f883.h: 3548: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f883.h: 3550: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f883.h: 3552: extern volatile __bit CHS3 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f883.h: 3554: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f883.h: 3556: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f883.h: 3558: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f883.h: 3560: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f883.h: 3562: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f883.h: 3564: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f883.h: 3566: extern volatile __bit DC1B0 @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f883.h: 3568: extern volatile __bit DC1B1 @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f883.h: 3570: extern volatile __bit DC2B0 @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f883.h: 3572: extern volatile __bit DC2B1 @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f883.h: 3574: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f883.h: 3576: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f883.h: 3578: extern volatile __bit ECCPAS0 @ (((unsigned) &ECCPAS)*8) + 4;
[; ;pic16f883.h: 3580: extern volatile __bit ECCPAS1 @ (((unsigned) &ECCPAS)*8) + 5;
[; ;pic16f883.h: 3582: extern volatile __bit ECCPAS2 @ (((unsigned) &ECCPAS)*8) + 6;
[; ;pic16f883.h: 3584: extern volatile __bit ECCPASE @ (((unsigned) &ECCPAS)*8) + 7;
[; ;pic16f883.h: 3586: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f883.h: 3588: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f883.h: 3590: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f883.h: 3592: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f883.h: 3594: extern volatile __bit FVREN @ (((unsigned) &SRCON)*8) + 0;
[; ;pic16f883.h: 3596: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f883.h: 3598: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f883.h: 3600: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f883.h: 3602: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f883.h: 3604: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f883.h: 3606: extern volatile __bit HTS @ (((unsigned) &OSCCON)*8) + 2;
[; ;pic16f883.h: 3608: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f883.h: 3610: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f883.h: 3612: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f883.h: 3614: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f883.h: 3616: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f883.h: 3618: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f883.h: 3620: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f883.h: 3622: extern volatile __bit IOCB0 @ (((unsigned) &IOCB)*8) + 0;
[; ;pic16f883.h: 3624: extern volatile __bit IOCB1 @ (((unsigned) &IOCB)*8) + 1;
[; ;pic16f883.h: 3626: extern volatile __bit IOCB2 @ (((unsigned) &IOCB)*8) + 2;
[; ;pic16f883.h: 3628: extern volatile __bit IOCB3 @ (((unsigned) &IOCB)*8) + 3;
[; ;pic16f883.h: 3630: extern volatile __bit IOCB4 @ (((unsigned) &IOCB)*8) + 4;
[; ;pic16f883.h: 3632: extern volatile __bit IOCB5 @ (((unsigned) &IOCB)*8) + 5;
[; ;pic16f883.h: 3634: extern volatile __bit IOCB6 @ (((unsigned) &IOCB)*8) + 6;
[; ;pic16f883.h: 3636: extern volatile __bit IOCB7 @ (((unsigned) &IOCB)*8) + 7;
[; ;pic16f883.h: 3638: extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 4;
[; ;pic16f883.h: 3640: extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 5;
[; ;pic16f883.h: 3642: extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 6;
[; ;pic16f883.h: 3644: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f883.h: 3646: extern volatile __bit LTS @ (((unsigned) &OSCCON)*8) + 1;
[; ;pic16f883.h: 3648: extern volatile __bit MC1OUT @ (((unsigned) &CM2CON1)*8) + 7;
[; ;pic16f883.h: 3650: extern volatile __bit MC2OUT @ (((unsigned) &CM2CON1)*8) + 6;
[; ;pic16f883.h: 3652: extern volatile __bit MSK0 @ (((unsigned) &SSPMSK)*8) + 0;
[; ;pic16f883.h: 3654: extern volatile __bit MSK1 @ (((unsigned) &SSPMSK)*8) + 1;
[; ;pic16f883.h: 3656: extern volatile __bit MSK2 @ (((unsigned) &SSPMSK)*8) + 2;
[; ;pic16f883.h: 3658: extern volatile __bit MSK3 @ (((unsigned) &SSPMSK)*8) + 3;
[; ;pic16f883.h: 3660: extern volatile __bit MSK4 @ (((unsigned) &SSPMSK)*8) + 4;
[; ;pic16f883.h: 3662: extern volatile __bit MSK5 @ (((unsigned) &SSPMSK)*8) + 5;
[; ;pic16f883.h: 3664: extern volatile __bit MSK6 @ (((unsigned) &SSPMSK)*8) + 6;
[; ;pic16f883.h: 3666: extern volatile __bit MSK7 @ (((unsigned) &SSPMSK)*8) + 7;
[; ;pic16f883.h: 3668: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f883.h: 3670: extern volatile __bit OSFIE @ (((unsigned) &PIE2)*8) + 7;
[; ;pic16f883.h: 3672: extern volatile __bit OSFIF @ (((unsigned) &PIR2)*8) + 7;
[; ;pic16f883.h: 3674: extern volatile __bit OSTS @ (((unsigned) &OSCCON)*8) + 3;
[; ;pic16f883.h: 3676: extern volatile __bit P1M0 @ (((unsigned) &CCP1CON)*8) + 6;
[; ;pic16f883.h: 3678: extern volatile __bit P1M1 @ (((unsigned) &CCP1CON)*8) + 7;
[; ;pic16f883.h: 3680: extern volatile __bit PDC0 @ (((unsigned) &PWM1CON)*8) + 0;
[; ;pic16f883.h: 3682: extern volatile __bit PDC1 @ (((unsigned) &PWM1CON)*8) + 1;
[; ;pic16f883.h: 3684: extern volatile __bit PDC2 @ (((unsigned) &PWM1CON)*8) + 2;
[; ;pic16f883.h: 3686: extern volatile __bit PDC3 @ (((unsigned) &PWM1CON)*8) + 3;
[; ;pic16f883.h: 3688: extern volatile __bit PDC4 @ (((unsigned) &PWM1CON)*8) + 4;
[; ;pic16f883.h: 3690: extern volatile __bit PDC5 @ (((unsigned) &PWM1CON)*8) + 5;
[; ;pic16f883.h: 3692: extern volatile __bit PDC6 @ (((unsigned) &PWM1CON)*8) + 6;
[; ;pic16f883.h: 3694: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f883.h: 3696: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f883.h: 3698: extern volatile __bit PRSEN @ (((unsigned) &PWM1CON)*8) + 7;
[; ;pic16f883.h: 3700: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f883.h: 3702: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f883.h: 3704: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f883.h: 3706: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f883.h: 3708: extern volatile __bit PSSAC0 @ (((unsigned) &ECCPAS)*8) + 2;
[; ;pic16f883.h: 3710: extern volatile __bit PSSAC1 @ (((unsigned) &ECCPAS)*8) + 3;
[; ;pic16f883.h: 3712: extern volatile __bit PSSBD0 @ (((unsigned) &ECCPAS)*8) + 0;
[; ;pic16f883.h: 3714: extern volatile __bit PSSBD1 @ (((unsigned) &ECCPAS)*8) + 1;
[; ;pic16f883.h: 3716: extern volatile __bit PULSR @ (((unsigned) &SRCON)*8) + 2;
[; ;pic16f883.h: 3718: extern volatile __bit PULSS @ (((unsigned) &SRCON)*8) + 3;
[; ;pic16f883.h: 3720: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f883.h: 3722: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f883.h: 3724: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f883.h: 3726: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f883.h: 3728: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f883.h: 3730: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f883.h: 3732: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic16f883.h: 3734: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic16f883.h: 3736: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f883.h: 3738: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f883.h: 3740: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f883.h: 3742: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f883.h: 3744: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f883.h: 3746: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f883.h: 3748: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f883.h: 3750: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f883.h: 3752: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f883.h: 3754: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f883.h: 3756: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f883.h: 3758: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f883.h: 3760: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f883.h: 3762: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f883.h: 3764: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f883.h: 3766: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f883.h: 3768: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f883.h: 3770: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f883.h: 3772: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f883.h: 3774: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f883.h: 3776: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f883.h: 3778: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f883.h: 3780: extern volatile __bit RCIDL @ (((unsigned) &BAUDCTL)*8) + 6;
[; ;pic16f883.h: 3782: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f883.h: 3784: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f883.h: 3786: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f883.h: 3788: extern volatile __bit RE3 @ (((unsigned) &PORTE)*8) + 3;
[; ;pic16f883.h: 3790: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f883.h: 3792: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f883.h: 3794: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f883.h: 3796: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f883.h: 3798: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f883.h: 3800: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f883.h: 3802: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f883.h: 3804: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f883.h: 3806: extern volatile __bit SBOREN @ (((unsigned) &PCON)*8) + 4;
[; ;pic16f883.h: 3808: extern volatile __bit SCKP @ (((unsigned) &BAUDCTL)*8) + 4;
[; ;pic16f883.h: 3810: extern volatile __bit SCS @ (((unsigned) &OSCCON)*8) + 0;
[; ;pic16f883.h: 3812: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f883.h: 3814: extern volatile __bit SENDB @ (((unsigned) &TXSTA)*8) + 3;
[; ;pic16f883.h: 3816: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f883.h: 3818: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f883.h: 3820: extern volatile __bit SR0 @ (((unsigned) &SRCON)*8) + 6;
[; ;pic16f883.h: 3822: extern volatile __bit SR1 @ (((unsigned) &SRCON)*8) + 7;
[; ;pic16f883.h: 3824: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f883.h: 3826: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f883.h: 3828: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f883.h: 3830: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f883.h: 3832: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f883.h: 3834: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f883.h: 3836: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f883.h: 3838: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f883.h: 3840: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f883.h: 3842: extern volatile __bit STRA @ (((unsigned) &PSTRCON)*8) + 0;
[; ;pic16f883.h: 3844: extern volatile __bit STRB @ (((unsigned) &PSTRCON)*8) + 1;
[; ;pic16f883.h: 3846: extern volatile __bit STRC @ (((unsigned) &PSTRCON)*8) + 2;
[; ;pic16f883.h: 3848: extern volatile __bit STRD @ (((unsigned) &PSTRCON)*8) + 3;
[; ;pic16f883.h: 3850: extern volatile __bit STRSYNC @ (((unsigned) &PSTRCON)*8) + 4;
[; ;pic16f883.h: 3852: extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;
[; ;pic16f883.h: 3854: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f883.h: 3856: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f883.h: 3858: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f883.h: 3860: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f883.h: 3862: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f883.h: 3864: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f883.h: 3866: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f883.h: 3868: extern volatile __bit T1GINV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f883.h: 3870: extern volatile __bit T1GIV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f883.h: 3872: extern volatile __bit T1GSS @ (((unsigned) &CM2CON1)*8) + 1;
[; ;pic16f883.h: 3874: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f883.h: 3876: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f883.h: 3878: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f883.h: 3880: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f883.h: 3882: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f883.h: 3884: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f883.h: 3886: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f883.h: 3888: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f883.h: 3890: extern volatile __bit TMR1GE @ (((unsigned) &T1CON)*8) + 6;
[; ;pic16f883.h: 3892: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f883.h: 3894: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f883.h: 3896: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f883.h: 3898: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f883.h: 3900: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f883.h: 3902: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f883.h: 3904: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f883.h: 3906: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f883.h: 3908: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f883.h: 3910: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f883.h: 3912: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f883.h: 3914: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f883.h: 3916: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f883.h: 3918: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f883.h: 3920: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f883.h: 3922: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f883.h: 3924: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic16f883.h: 3926: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic16f883.h: 3928: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f883.h: 3930: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f883.h: 3932: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f883.h: 3934: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f883.h: 3936: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f883.h: 3938: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f883.h: 3940: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f883.h: 3942: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f883.h: 3944: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f883.h: 3946: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f883.h: 3948: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f883.h: 3950: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f883.h: 3952: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f883.h: 3954: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f883.h: 3956: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f883.h: 3958: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f883.h: 3960: extern volatile __bit TRISE3 @ (((unsigned) &TRISE)*8) + 3;
[; ;pic16f883.h: 3962: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f883.h: 3964: extern volatile __bit TUN0 @ (((unsigned) &OSCTUNE)*8) + 0;
[; ;pic16f883.h: 3966: extern volatile __bit TUN1 @ (((unsigned) &OSCTUNE)*8) + 1;
[; ;pic16f883.h: 3968: extern volatile __bit TUN2 @ (((unsigned) &OSCTUNE)*8) + 2;
[; ;pic16f883.h: 3970: extern volatile __bit TUN3 @ (((unsigned) &OSCTUNE)*8) + 3;
[; ;pic16f883.h: 3972: extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;
[; ;pic16f883.h: 3974: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f883.h: 3976: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f883.h: 3978: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f883.h: 3980: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f883.h: 3982: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f883.h: 3984: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f883.h: 3986: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f883.h: 3988: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f883.h: 3990: extern volatile __bit ULPWUE @ (((unsigned) &PCON)*8) + 5;
[; ;pic16f883.h: 3992: extern volatile __bit ULPWUIE @ (((unsigned) &PIE2)*8) + 2;
[; ;pic16f883.h: 3994: extern volatile __bit ULPWUIF @ (((unsigned) &PIR2)*8) + 2;
[; ;pic16f883.h: 3996: extern volatile __bit VCFG0 @ (((unsigned) &ADCON1)*8) + 4;
[; ;pic16f883.h: 3998: extern volatile __bit VCFG1 @ (((unsigned) &ADCON1)*8) + 5;
[; ;pic16f883.h: 4000: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic16f883.h: 4002: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic16f883.h: 4004: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic16f883.h: 4006: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic16f883.h: 4008: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic16f883.h: 4010: extern volatile __bit VROE @ (((unsigned) &VRCON)*8) + 6;
[; ;pic16f883.h: 4012: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic16f883.h: 4014: extern volatile __bit VRSS @ (((unsigned) &VRCON)*8) + 4;
[; ;pic16f883.h: 4016: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f883.h: 4018: extern volatile __bit WDTPS0 @ (((unsigned) &WDTCON)*8) + 1;
[; ;pic16f883.h: 4020: extern volatile __bit WDTPS1 @ (((unsigned) &WDTCON)*8) + 2;
[; ;pic16f883.h: 4022: extern volatile __bit WDTPS2 @ (((unsigned) &WDTCON)*8) + 3;
[; ;pic16f883.h: 4024: extern volatile __bit WDTPS3 @ (((unsigned) &WDTCON)*8) + 4;
[; ;pic16f883.h: 4026: extern volatile __bit WPUB0 @ (((unsigned) &WPUB)*8) + 0;
[; ;pic16f883.h: 4028: extern volatile __bit WPUB1 @ (((unsigned) &WPUB)*8) + 1;
[; ;pic16f883.h: 4030: extern volatile __bit WPUB2 @ (((unsigned) &WPUB)*8) + 2;
[; ;pic16f883.h: 4032: extern volatile __bit WPUB3 @ (((unsigned) &WPUB)*8) + 3;
[; ;pic16f883.h: 4034: extern volatile __bit WPUB4 @ (((unsigned) &WPUB)*8) + 4;
[; ;pic16f883.h: 4036: extern volatile __bit WPUB5 @ (((unsigned) &WPUB)*8) + 5;
[; ;pic16f883.h: 4038: extern volatile __bit WPUB6 @ (((unsigned) &WPUB)*8) + 6;
[; ;pic16f883.h: 4040: extern volatile __bit WPUB7 @ (((unsigned) &WPUB)*8) + 7;
[; ;pic16f883.h: 4042: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f883.h: 4044: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f883.h: 4046: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f883.h: 4048: extern volatile __bit WUE @ (((unsigned) &BAUDCTL)*8) + 1;
[; ;pic16f883.h: 4050: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f883.h: 4052: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f883.h: 4054: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f883.h: 4056: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f883.h: 4058: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f883.h: 4060: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f883.h: 4062: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f883.h: 4064: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f883.h: 4066: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f883.h: 4068: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f883.h: 4070: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f883.h: 4072: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f883.h: 4074: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f883.h: 4076: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f883.h: 4078: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 29: extern void __nop(void);
[; ;pic.h: 78: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 153: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 155: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 193: extern __bank0 unsigned char __resetbits;
[; ;pic.h: 194: extern __bank0 __bit __powerdown;
[; ;pic.h: 195: extern __bank0 __bit __timeout;
[; ;math.h: 30: extern double fabs(double);
[; ;math.h: 31: extern double floor(double);
[; ;math.h: 32: extern double ceil(double);
[; ;math.h: 33: extern double modf(double, double *);
[; ;math.h: 34: extern double sqrt(double);
[; ;math.h: 35: extern double atof(const char *);
[; ;math.h: 36: extern double sin(double) ;
[; ;math.h: 37: extern double cos(double) ;
[; ;math.h: 38: extern double tan(double) ;
[; ;math.h: 39: extern double asin(double) ;
[; ;math.h: 40: extern double acos(double) ;
[; ;math.h: 41: extern double atan(double);
[; ;math.h: 42: extern double atan2(double, double) ;
[; ;math.h: 43: extern double log(double);
[; ;math.h: 44: extern double log10(double);
[; ;math.h: 45: extern double pow(double, double) ;
[; ;math.h: 46: extern double exp(double) ;
[; ;math.h: 47: extern double sinh(double) ;
[; ;math.h: 48: extern double cosh(double) ;
[; ;math.h: 49: extern double tanh(double);
[; ;math.h: 50: extern double eval_poly(double, const double *, int);
[; ;math.h: 51: extern double frexp(double, int *);
[; ;math.h: 52: extern double ldexp(double, int);
[; ;math.h: 53: extern double fmod(double, double);
[; ;math.h: 54: extern double trunc(double);
[; ;math.h: 55: extern double round(double);
"19 newmain.c
[v _start `i ~T0 @X0 1 e ]
[; ;newmain.c: 19: int start;
"21
[v _Lcd_Port `(v ~T0 @X0 1 ef1`uc ]
"22
{
[; ;newmain.c: 21: void Lcd_Port(char a)
[; ;newmain.c: 22: {
[e :U _Lcd_Port ]
"21
[v _a `uc ~T0 @X0 1 r1 ]
"22
[f ]
[; ;newmain.c: 23: if(a & 1)
"23
[e $ ! != & -> _a `i -> 1 `i -> 0 `i 135  ]
[; ;newmain.c: 24: RC2 = 1;
"24
[e = _RC2 -> -> 1 `i `b ]
[e $U 136  ]
"25
[e :U 135 ]
[; ;newmain.c: 25: else
[; ;newmain.c: 26: RC2 = 0;
"26
[e = _RC2 -> -> 0 `i `b ]
[e :U 136 ]
[; ;newmain.c: 28: if(a & 2)
"28
[e $ ! != & -> _a `i -> 2 `i -> 0 `i 137  ]
[; ;newmain.c: 29: RC3 = 1;
"29
[e = _RC3 -> -> 1 `i `b ]
[e $U 138  ]
"30
[e :U 137 ]
[; ;newmain.c: 30: else
[; ;newmain.c: 31: RC3 = 0;
"31
[e = _RC3 -> -> 0 `i `b ]
[e :U 138 ]
[; ;newmain.c: 33: if(a & 4)
"33
[e $ ! != & -> _a `i -> 4 `i -> 0 `i 139  ]
[; ;newmain.c: 34: RC4 = 1;
"34
[e = _RC4 -> -> 1 `i `b ]
[e $U 140  ]
"35
[e :U 139 ]
[; ;newmain.c: 35: else
[; ;newmain.c: 36: RC4 = 0;
"36
[e = _RC4 -> -> 0 `i `b ]
[e :U 140 ]
[; ;newmain.c: 38: if(a & 8)
"38
[e $ ! != & -> _a `i -> 8 `i -> 0 `i 141  ]
[; ;newmain.c: 39: RC5 = 1;
"39
[e = _RC5 -> -> 1 `i `b ]
[e $U 142  ]
"40
[e :U 141 ]
[; ;newmain.c: 40: else
[; ;newmain.c: 41: RC5 = 0;
"41
[e = _RC5 -> -> 0 `i `b ]
[e :U 142 ]
[; ;newmain.c: 42: }
"42
[e :UE 134 ]
}
"43
[v _Lcd_Cmd `(v ~T0 @X0 1 ef1`uc ]
"44
{
[; ;newmain.c: 43: void Lcd_Cmd(char a)
[; ;newmain.c: 44: {
[e :U _Lcd_Cmd ]
"43
[v _a `uc ~T0 @X0 1 r1 ]
"44
[f ]
[; ;newmain.c: 45: RC0 = 0;
"45
[e = _RC0 -> -> 0 `i `b ]
[; ;newmain.c: 46: Lcd_Port(a);
"46
[e ( _Lcd_Port (1 _a ]
[; ;newmain.c: 47: RC1 = 1;
"47
[e = _RC1 -> -> 1 `i `b ]
[; ;newmain.c: 48: _delay((unsigned long)((4)*(4000000/4000.0)));
"48
[e ( __delay (1 -> * -> -> 4 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 49: RC1 = 0;
"49
[e = _RC1 -> -> 0 `i `b ]
[; ;newmain.c: 50: }
"50
[e :UE 143 ]
}
"52
[v _Lcd_Clear `(v ~T0 @X0 1 ef ]
"53
{
[; ;newmain.c: 52: void Lcd_Clear()
[; ;newmain.c: 53: {
[e :U _Lcd_Clear ]
[f ]
[; ;newmain.c: 54: Lcd_Cmd(0);
"54
[e ( _Lcd_Cmd (1 -> -> 0 `i `uc ]
[; ;newmain.c: 55: Lcd_Cmd(1);
"55
[e ( _Lcd_Cmd (1 -> -> 1 `i `uc ]
[; ;newmain.c: 56: }
"56
[e :UE 144 ]
}
"58
[v _Lcd_Set_Cursor `(v ~T0 @X0 1 ef2`uc`uc ]
"59
{
[; ;newmain.c: 58: void Lcd_Set_Cursor(char a, char b)
[; ;newmain.c: 59: {
[e :U _Lcd_Set_Cursor ]
"58
[v _a `uc ~T0 @X0 1 r1 ]
[v _b `uc ~T0 @X0 1 r2 ]
"59
[f ]
"60
[v _temp `uc ~T0 @X0 1 a ]
[v _z `uc ~T0 @X0 1 a ]
[v _y `uc ~T0 @X0 1 a ]
[; ;newmain.c: 60: char temp,z,y;
[; ;newmain.c: 61: if(a == 1)
"61
[e $ ! == -> _a `i -> 1 `i 146  ]
[; ;newmain.c: 62: {
"62
{
[; ;newmain.c: 63: temp = 0x80 + b - 1;
"63
[e = _temp -> - + -> 128 `i -> _b `i -> 1 `i `uc ]
[; ;newmain.c: 64: z = temp>>4;
"64
[e = _z -> >> -> _temp `i -> 4 `i `uc ]
[; ;newmain.c: 65: y = temp & 0x0F;
"65
[e = _y -> & -> _temp `i -> 15 `i `uc ]
[; ;newmain.c: 66: Lcd_Cmd(z);
"66
[e ( _Lcd_Cmd (1 _z ]
[; ;newmain.c: 67: Lcd_Cmd(y);
"67
[e ( _Lcd_Cmd (1 _y ]
"68
}
[; ;newmain.c: 68: }
[e $U 147  ]
"69
[e :U 146 ]
[; ;newmain.c: 69: else if(a == 2)
[e $ ! == -> _a `i -> 2 `i 148  ]
[; ;newmain.c: 70: {
"70
{
[; ;newmain.c: 71: temp = 0xC0 + b - 1;
"71
[e = _temp -> - + -> 192 `i -> _b `i -> 1 `i `uc ]
[; ;newmain.c: 72: z = temp>>4;
"72
[e = _z -> >> -> _temp `i -> 4 `i `uc ]
[; ;newmain.c: 73: y = temp & 0x0F;
"73
[e = _y -> & -> _temp `i -> 15 `i `uc ]
[; ;newmain.c: 74: Lcd_Cmd(z);
"74
[e ( _Lcd_Cmd (1 _z ]
[; ;newmain.c: 75: Lcd_Cmd(y);
"75
[e ( _Lcd_Cmd (1 _y ]
"76
}
[e :U 148 ]
"77
[e :U 147 ]
[; ;newmain.c: 76: }
[; ;newmain.c: 77: }
[e :UE 145 ]
}
"79
[v _Lcd_Init `(v ~T0 @X0 1 ef ]
"80
{
[; ;newmain.c: 79: void Lcd_Init()
[; ;newmain.c: 80: {
[e :U _Lcd_Init ]
[f ]
[; ;newmain.c: 81: Lcd_Port(0x00);
"81
[e ( _Lcd_Port (1 -> -> 0 `i `uc ]
[; ;newmain.c: 82: _delay((unsigned long)((20)*(4000000/4000.0)));
"82
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 83: Lcd_Cmd(0x03);
"83
[e ( _Lcd_Cmd (1 -> -> 3 `i `uc ]
[; ;newmain.c: 84: _delay((unsigned long)((5)*(4000000/4000.0)));
"84
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 85: Lcd_Cmd(0x03);
"85
[e ( _Lcd_Cmd (1 -> -> 3 `i `uc ]
[; ;newmain.c: 86: _delay((unsigned long)((11)*(4000000/4000.0)));
"86
[e ( __delay (1 -> * -> -> 11 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 87: Lcd_Cmd(0x03);
"87
[e ( _Lcd_Cmd (1 -> -> 3 `i `uc ]
[; ;newmain.c: 89: Lcd_Cmd(0x02);
"89
[e ( _Lcd_Cmd (1 -> -> 2 `i `uc ]
[; ;newmain.c: 90: Lcd_Cmd(0x02);
"90
[e ( _Lcd_Cmd (1 -> -> 2 `i `uc ]
[; ;newmain.c: 91: Lcd_Cmd(0x08);
"91
[e ( _Lcd_Cmd (1 -> -> 8 `i `uc ]
[; ;newmain.c: 92: Lcd_Cmd(0x00);
"92
[e ( _Lcd_Cmd (1 -> -> 0 `i `uc ]
[; ;newmain.c: 93: Lcd_Cmd(0x0C);
"93
[e ( _Lcd_Cmd (1 -> -> 12 `i `uc ]
[; ;newmain.c: 94: Lcd_Cmd(0x00);
"94
[e ( _Lcd_Cmd (1 -> -> 0 `i `uc ]
[; ;newmain.c: 95: Lcd_Cmd(0x06);
"95
[e ( _Lcd_Cmd (1 -> -> 6 `i `uc ]
[; ;newmain.c: 96: }
"96
[e :UE 149 ]
}
"98
[v _Lcd_Write_Char `(v ~T0 @X0 1 ef1`uc ]
"99
{
[; ;newmain.c: 98: void Lcd_Write_Char(char a)
[; ;newmain.c: 99: {
[e :U _Lcd_Write_Char ]
"98
[v _a `uc ~T0 @X0 1 r1 ]
"99
[f ]
"100
[v _temp `uc ~T0 @X0 1 a ]
[v _y `uc ~T0 @X0 1 a ]
[; ;newmain.c: 100: char temp,y;
[; ;newmain.c: 101: temp = a&0x0F;
"101
[e = _temp -> & -> _a `i -> 15 `i `uc ]
[; ;newmain.c: 102: y = a&0xF0;
"102
[e = _y -> & -> _a `i -> 240 `i `uc ]
[; ;newmain.c: 103: RC0 = 1;
"103
[e = _RC0 -> -> 1 `i `b ]
[; ;newmain.c: 104: Lcd_Port(y>>4);
"104
[e ( _Lcd_Port (1 -> >> -> _y `i -> 4 `i `uc ]
[; ;newmain.c: 105: RC1 = 1;
"105
[e = _RC1 -> -> 1 `i `b ]
[; ;newmain.c: 106: _delay((unsigned long)((40)*(4000000/4000000.0)));
"106
[e ( __delay (1 -> * -> -> 40 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 107: RC1 = 0;
"107
[e = _RC1 -> -> 0 `i `b ]
[; ;newmain.c: 108: Lcd_Port(temp);
"108
[e ( _Lcd_Port (1 _temp ]
[; ;newmain.c: 109: RC1 = 1;
"109
[e = _RC1 -> -> 1 `i `b ]
[; ;newmain.c: 110: _delay((unsigned long)((40)*(4000000/4000000.0)));
"110
[e ( __delay (1 -> * -> -> 40 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 111: RC1 = 0;
"111
[e = _RC1 -> -> 0 `i `b ]
[; ;newmain.c: 112: }
"112
[e :UE 150 ]
}
"114
[v _Lcd_Write_String `(v ~T0 @X0 1 ef1`*Cuc ]
"115
{
[; ;newmain.c: 114: void Lcd_Write_String(const char *a)
[; ;newmain.c: 115: {
[e :U _Lcd_Write_String ]
"114
[v _a `*Cuc ~T0 @X0 1 r1 ]
"115
[f ]
"118
[v _i `i ~T0 @X0 1 a ]
[; ;newmain.c: 118: int i;
[; ;newmain.c: 119: for(i=0;a[i]!='\0';i++)
"119
{
[e = _i -> 0 `i ]
[e $U 155  ]
"120
[e :U 152 ]
[; ;newmain.c: 120: Lcd_Write_Char(a[i]);
[e ( _Lcd_Write_Char (1 *U + _a * -> _i `x -> -> # *U _a `i `x ]
"119
[e ++ _i -> 1 `i ]
[e :U 155 ]
[e $ != -> *U + _a * -> _i `x -> -> # *U _a `i `x `ui -> 0 `ui 152  ]
[e :U 153 ]
"120
}
[; ;newmain.c: 123: }
"123
[e :UE 151 ]
}
"125
[v _lcddisplay `(v ~T0 @X0 1 ef1`ui ]
"126
{
[; ;newmain.c: 125: void lcddisplay(unsigned int num)
[; ;newmain.c: 126: {
[e :U _lcddisplay ]
"125
[v _num `ui ~T0 @X0 1 r1 ]
"126
[f ]
[; ;newmain.c: 129: num=num%10000;
"129
[e = _num % _num -> -> 10000 `i `ui ]
[; ;newmain.c: 132: num=num%1000;
"132
[e = _num % _num -> -> 1000 `i `ui ]
[; ;newmain.c: 135: num=num%100;
"135
[e = _num % _num -> -> 100 `i `ui ]
[; ;newmain.c: 137: Lcd_Write_Char((num/10)+0x30);
"137
[e ( _Lcd_Write_Char (1 -> + / _num -> -> 10 `i `ui -> -> 48 `i `ui `uc ]
[; ;newmain.c: 139: Lcd_Write_Char((num%10)+0x30);
"139
[e ( _Lcd_Write_Char (1 -> + % _num -> -> 10 `i `ui -> -> 48 `i `ui `uc ]
[; ;newmain.c: 143: }
"143
[e :UE 156 ]
}
"146
[v _ADC_Init `(v ~T0 @X0 1 ef ]
"147
{
[; ;newmain.c: 146: void ADC_Init()
[; ;newmain.c: 147: {
[e :U _ADC_Init ]
[f ]
[; ;newmain.c: 148: ANSEL = 0X01;
"148
[e = _ANSEL -> -> 1 `i `uc ]
[; ;newmain.c: 149: ADCON0 = 0x01;
"149
[e = _ADCON0 -> -> 1 `i `uc ]
[; ;newmain.c: 150: ADCON1 = 0x80;
"150
[e = _ADCON1 -> -> 128 `i `uc ]
[; ;newmain.c: 154: }
"154
[e :UE 157 ]
}
"156
[v _ADC_Read `(ui ~T0 @X0 1 ef1`uc ]
"157
{
[; ;newmain.c: 156: unsigned int ADC_Read(unsigned char channel)
[; ;newmain.c: 157: {
[e :U _ADC_Read ]
"156
[v _channel `uc ~T0 @X0 1 r1 ]
"157
[f ]
[; ;newmain.c: 158: if(channel > 7)
"158
[e $ ! > -> _channel `i -> 7 `i 159  ]
[; ;newmain.c: 159: return 0;
"159
[e ) -> -> 0 `i `ui ]
[e $UE 158  ]
[e :U 159 ]
[; ;newmain.c: 161: ADCON0 &= 0xC5;
"161
[e =& _ADCON0 -> -> 197 `i `uc ]
[; ;newmain.c: 162: ADCON0 |= channel<<3;
"162
[e =| _ADCON0 -> << -> _channel `i -> 3 `i `uc ]
[; ;newmain.c: 163: _delay((unsigned long)((2)*(4000000/4000.0)));
"163
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 164: GO_nDONE = 1;
"164
[e = _GO_nDONE -> -> 1 `i `b ]
[; ;newmain.c: 165: while(GO_nDONE);
"165
[e $U 160  ]
[e :U 161 ]
[e :U 160 ]
[e $ _GO_nDONE 161  ]
[e :U 162 ]
[; ;newmain.c: 166: return ((ADRESH<<8)+ADRESL);
"166
[e ) -> + << -> _ADRESH `i -> 8 `i -> _ADRESL `i `ui ]
[e $UE 158  ]
[; ;newmain.c: 167: }
"167
[e :UE 158 ]
}
"169
[v _getTemp `(i ~T0 @X0 1 ef ]
"170
{
[; ;newmain.c: 169: int getTemp()
[; ;newmain.c: 170: {
[e :U _getTemp ]
[f ]
"174
[v F1652 `Cf ~T0 @X0 1 s invBeta ]
[i F1652
-> / .1.00 .3380.00 `f
]
"176
[v F1653 `Cf ~T0 @X0 1 s adcMax ]
[i F1653
-> .1023.00 `f
]
"177
[v F1654 `Cf ~T0 @X0 1 s invT0 ]
[i F1654
-> / .1.00 .298.15 `f
]
"179
[v _adcVal `i ~T0 @X0 1 a ]
[v _i `i ~T0 @X0 1 a ]
[v _numSamples `i ~T0 @X0 1 a ]
[; ;newmain.c: 174: const float invBeta = 1.00 / 3380.00;
[; ;newmain.c: 176: const float adcMax = 1023.00;
[; ;newmain.c: 177: const float invT0 = 1.00 / 298.15;
[; ;newmain.c: 179: int adcVal, i, numSamples = 5;
[e = _numSamples -> 5 `i ]
"180
[v _K `f ~T0 @X0 1 a ]
[v _C `f ~T0 @X0 1 a ]
[v _F `f ~T0 @X0 1 a ]
[; ;newmain.c: 180: float K, C, F;
[; ;newmain.c: 182: adcVal = 0;
"182
[e = _adcVal -> 0 `i ]
[; ;newmain.c: 183: for (i = 0; i < numSamples; i++)
"183
{
[e = _i -> 0 `i ]
[e $U 167  ]
"184
[e :U 164 ]
[; ;newmain.c: 184: {
{
[; ;newmain.c: 185: adcVal = adcVal + ADC_Read(0);
"185
[e = _adcVal -> + -> _adcVal `ui ( _ADC_Read (1 -> -> 0 `i `uc `i ]
[; ;newmain.c: 186: _delay((unsigned long)((10)*(4000000/4000.0)));
"186
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"187
}
"183
[e ++ _i -> 1 `i ]
[e :U 167 ]
[e $ < _i _numSamples 164  ]
[e :U 165 ]
"187
}
[; ;newmain.c: 187: }
[; ;newmain.c: 188: adcVal = adcVal/5;
"188
[e = _adcVal / _adcVal -> 5 `i ]
[; ;newmain.c: 189: K = 1.00 / (invT0 + invBeta*(log ( adcMax / (float) adcVal - 1.00)));
"189
[e = _K -> / .1.00 + -> F1654 `d * -> F1652 `d ( _log (1 - -> / F1653 -> _adcVal `f `d .1.00 `f ]
[; ;newmain.c: 190: C = K - 273.15;
"190
[e = _C -> - -> _K `d .273.15 `f ]
[; ;newmain.c: 191: F = ((9.0*C)/5.00) + 32.00;
"191
[e = _F -> + / * .9.0 -> _C `d .5.00 .32.00 `f ]
[; ;newmain.c: 193: return C;
"193
[e ) -> _C `i ]
[e $UE 163  ]
[; ;newmain.c: 194: }
"194
[e :UE 163 ]
}
"237
[v _checktemp `(i ~T0 @X0 1 ef ]
"238
{
[; ;newmain.c: 237: int checktemp()
[; ;newmain.c: 238: {
[e :U _checktemp ]
[f ]
"239
[v _val `i ~T0 @X0 1 a ]
[; ;newmain.c: 239: int val = 0;
[e = _val -> 0 `i ]
"240
[v _voltage `i ~T0 @X0 1 a ]
[; ;newmain.c: 240: int voltage = 0;
[e = _voltage -> 0 `i ]
"241
[v _temp `d ~T0 @X0 1 a ]
[; ;newmain.c: 241: double temp;
[; ;newmain.c: 242: val = ADC_Read(0);
"242
[e = _val -> ( _ADC_Read (1 -> -> 0 `i `uc `i ]
[; ;newmain.c: 243: voltage= (val * 5)/(1023);
"243
[e = _voltage / * _val -> 5 `i -> 1023 `i ]
[; ;newmain.c: 244: Lcd_Clear();
"244
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 246: temp = log(((10240000/val) - 10000));
"246
[e = _temp ( _log (1 -> - / -> 10240000 `l -> _val `l -> -> 10000 `i `l `d ]
[; ;newmain.c: 247: temp = 1 / (0.001129148 + (0.000234125 + (0.0000000876741 * temp * temp ))* temp );
"247
[e = _temp / -> -> 1 `i `d + .0.001129148 * + .0.000234125 * * .0.0000000876741 _temp _temp _temp ]
[; ;newmain.c: 248: temp = temp - 273.15;
"248
[e = _temp - _temp .273.15 ]
[; ;newmain.c: 249: return temp;
"249
[e ) -> _temp `i ]
[e $UE 168  ]
[; ;newmain.c: 250: }
"250
[e :UE 168 ]
}
"253
[v _delay60 `(v ~T0 @X0 1 ef3`i`i`i ]
"254
{
[; ;newmain.c: 253: void delay60(int a,int b,int c)
[; ;newmain.c: 254: {
[e :U _delay60 ]
"253
[v _a `i ~T0 @X0 1 r1 ]
[v _b `i ~T0 @X0 1 r2 ]
[v _c `i ~T0 @X0 1 r3 ]
"254
[f ]
"255
[v _i `i ~T0 @X0 1 a ]
[v _tempval `i ~T0 @X0 1 a ]
[; ;newmain.c: 255: int i,tempval;
[; ;newmain.c: 256: for(i=0;i<=29;i++)
"256
{
[e = _i -> 0 `i ]
[e $ <= _i -> 29 `i 170  ]
[e $U 171  ]
"257
[e :U 170 ]
[; ;newmain.c: 257: {
{
[; ;newmain.c: 258: tempval = getTemp();
"258
[e = _tempval ( _getTemp ..  ]
[; ;newmain.c: 259: if((a<10)&&(a>70))
"259
[e $ ! && < _a -> 10 `i > _a -> 70 `i 173  ]
[; ;newmain.c: 260: {
"260
{
[; ;newmain.c: 261: break;
"261
[e $U 171  ]
"262
}
[e :U 173 ]
[; ;newmain.c: 262: }
[; ;newmain.c: 263: if(RB3 == 0)
"263
[e $ ! == -> _RB3 `i -> 0 `i 174  ]
[; ;newmain.c: 264: {
"264
{
[; ;newmain.c: 265: start = 1;
"265
[e = _start -> 1 `i ]
[; ;newmain.c: 267: break;
"267
[e $U 171  ]
"269
}
[; ;newmain.c: 269: }
[e $U 175  ]
"270
[e :U 174 ]
[; ;newmain.c: 270: else
[; ;newmain.c: 271: {
"271
{
[; ;newmain.c: 272: start = 0;
"272
[e = _start -> 0 `i ]
"273
}
[e :U 175 ]
[; ;newmain.c: 273: }
[; ;newmain.c: 274: if((tempval>=70)||(tempval<=10))
"274
[e $ ! || >= _tempval -> 70 `i <= _tempval -> 10 `i 176  ]
[; ;newmain.c: 275: {
"275
{
[; ;newmain.c: 277: break;
"277
[e $U 171  ]
"279
}
[e :U 176 ]
[; ;newmain.c: 279: }
[; ;newmain.c: 281: Lcd_Clear();
"281
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 282: Lcd_Set_Cursor(1,1);
"282
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 283: Lcd_Write_String("On_temp:");
"283
[e ( _Lcd_Write_String (1 :s 1C ]
[; ;newmain.c: 285: Lcd_Set_Cursor(1,14);
"285
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 14 `i `uc ]
[; ;newmain.c: 286: lcddisplay(b);
"286
[e ( _lcddisplay (1 -> _b `ui ]
[; ;newmain.c: 287: Lcd_Set_Cursor(2,1);
"287
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 288: Lcd_Write_String("Off_temp:");
"288
[e ( _Lcd_Write_String (1 :s 2C ]
[; ;newmain.c: 289: Lcd_Set_Cursor(2,14);
"289
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 14 `i `uc ]
[; ;newmain.c: 290: lcddisplay(c);
"290
[e ( _lcddisplay (1 -> _c `ui ]
[; ;newmain.c: 291: _delay((unsigned long)((1000)*(4000000/4000.0)));
"291
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 292: Lcd_Clear();
"292
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 293: Lcd_Set_Cursor(1,1);
"293
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 294: Lcd_Write_String("current temp:");
"294
[e ( _Lcd_Write_String (1 :s 3C ]
[; ;newmain.c: 295: Lcd_Set_Cursor(1,14);
"295
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 14 `i `uc ]
[; ;newmain.c: 296: lcddisplay(tempval);
"296
[e ( _lcddisplay (1 -> _tempval `ui ]
[; ;newmain.c: 297: Lcd_Set_Cursor(2,1);
"297
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 298: lcddisplay(i);
"298
[e ( _lcddisplay (1 -> _i `ui ]
[; ;newmain.c: 299: _delay((unsigned long)((1000)*(4000000/4000.0)));
"299
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"300
}
"256
[e ++ _i -> 1 `i ]
[e $ <= _i -> 29 `i 170  ]
[e :U 171 ]
"300
}
[; ;newmain.c: 300: }
[; ;newmain.c: 301: }
"301
[e :UE 169 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"304
[v _main `(v ~T0 @X0 1 ef ]
"305
{
[; ;newmain.c: 304: void main()
[; ;newmain.c: 305: {
[e :U _main ]
[f ]
[; ;newmain.c: 307: TRISA = 0xFF;
"307
[e = _TRISA -> -> 255 `i `uc ]
[; ;newmain.c: 308: TRISB = 0x0F;
"308
[e = _TRISB -> -> 15 `i `uc ]
[; ;newmain.c: 309: TRISC = 0x00;
"309
[e = _TRISC -> -> 0 `i `uc ]
[; ;newmain.c: 311: ANSELH = 0X00;
"311
[e = _ANSELH -> -> 0 `i `uc ]
[; ;newmain.c: 312: ADC_Init();
"312
[e ( _ADC_Init ..  ]
[; ;newmain.c: 313: Lcd_Init();
"313
[e ( _Lcd_Init ..  ]
"319
[v _data `us ~T0 @X0 1 a ]
"320
[v _highval `i ~T0 @X0 1 a ]
[; ;newmain.c: 319: unsigned short int data;
[; ;newmain.c: 320: int highval=70;
[e = _highval -> 70 `i ]
"321
[v _lowval `i ~T0 @X0 1 a ]
[; ;newmain.c: 321: int lowval=10;
[e = _lowval -> 10 `i ]
"322
[v _b `i ~T0 @X0 1 a ]
[; ;newmain.c: 322: int b=0;
[e = _b -> 0 `i ]
"323
[v _tempval `i ~T0 @X0 1 a ]
"326
[v _curs `i ~T0 @X0 1 a ]
"327
[v _switchsel `i ~T0 @X0 1 a ]
[; ;newmain.c: 323: int tempval;
[; ;newmain.c: 326: int curs;
[; ;newmain.c: 327: int switchsel =0;
[e = _switchsel -> 0 `i ]
"329
[v _c `i ~T0 @X0 1 a ]
[; ;newmain.c: 329: int c = 0;
[e = _c -> 0 `i ]
[; ;newmain.c: 332: Lcd_Init();
"332
[e ( _Lcd_Init ..  ]
[; ;newmain.c: 333: Lcd_Clear();
"333
[e ( _Lcd_Clear ..  ]
[v _start `i ~T0 @X0 1 a ]
[; ;newmain.c: 334: int start = 0;
"334
[e = _start -> 0 `i ]
[; ;newmain.c: 335: while(1)
"335
[e :U 179 ]
[; ;newmain.c: 336: {
"336
{
[; ;newmain.c: 337: Lcd_Clear();
"337
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 338: tempval = getTemp();
"338
[e = _tempval ( _getTemp ..  ]
[; ;newmain.c: 342: if(RB3 == 0)
"342
[e $ ! == -> _RB3 `i -> 0 `i 181  ]
[; ;newmain.c: 343: {
"343
{
[; ;newmain.c: 344: start:
"344
[e :U 182 ]
[; ;newmain.c: 345: Lcd_Clear();
"345
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 346: Lcd_Set_Cursor(1,1);
"346
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 347: Lcd_Write_String("Entering setup");
"347
[e ( _Lcd_Write_String (1 :s 4C ]
[; ;newmain.c: 348: _delay((unsigned long)((1000)*(4000000/4000.0)));
"348
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 349: Lcd_Clear();
"349
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 350: Lcd_Set_Cursor(1,1);
"350
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 351: Lcd_Write_String("On temp: ");
"351
[e ( _Lcd_Write_String (1 :s 5C ]
[; ;newmain.c: 352: lcddisplay(lowval);
"352
[e ( _lcddisplay (1 -> _lowval `ui ]
[; ;newmain.c: 353: Lcd_Set_Cursor(2,1);
"353
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 354: Lcd_Write_String("OFF temp:");
"354
[e ( _Lcd_Write_String (1 :s 6C ]
[; ;newmain.c: 355: lcddisplay(highval);
"355
[e ( _lcddisplay (1 -> _highval `ui ]
[; ;newmain.c: 358: while(1)
"358
[e :U 184 ]
[; ;newmain.c: 359: {
"359
{
[; ;newmain.c: 361: if(!RB0)
"361
[e $ ! ! _RB0 186  ]
[; ;newmain.c: 362: {
"362
{
[; ;newmain.c: 364: switchsel++;
"364
[e ++ _switchsel -> 1 `i ]
[; ;newmain.c: 365: if(switchsel == 3)
"365
[e $ ! == _switchsel -> 3 `i 187  ]
[; ;newmain.c: 366: {
"366
{
[; ;newmain.c: 367: switchsel = 1;
"367
[e = _switchsel -> 1 `i ]
"368
}
[e :U 187 ]
[; ;newmain.c: 368: }
[; ;newmain.c: 369: while(RB0 == 0);
"369
[e $U 188  ]
[e :U 189 ]
[e :U 188 ]
[e $ == -> _RB0 `i -> 0 `i 189  ]
[e :U 190 ]
"370
}
[e :U 186 ]
[; ;newmain.c: 370: }
[; ;newmain.c: 371: if((switchsel == 1)&&(switchsel<=2))
"371
[e $ ! && == _switchsel -> 1 `i <= _switchsel -> 2 `i 191  ]
[; ;newmain.c: 372: {
"372
{
[; ;newmain.c: 375: Lcd_Clear();
"375
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 376: Lcd_Set_Cursor(1,1);
"376
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 377: Lcd_Write_String("On: ");
"377
[e ( _Lcd_Write_String (1 :s 7C ]
[; ;newmain.c: 378: Lcd_Set_Cursor(1,12);
"378
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 12 `i `uc ]
[; ;newmain.c: 379: lcddisplay(lowval);
"379
[e ( _lcddisplay (1 -> _lowval `ui ]
[; ;newmain.c: 380: Lcd_Set_Cursor(2,1);
"380
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 381: Lcd_Write_String("OFF:");
"381
[e ( _Lcd_Write_String (1 :s 8C ]
[; ;newmain.c: 382: Lcd_Set_Cursor(2,12);
"382
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 12 `i `uc ]
[; ;newmain.c: 383: lcddisplay(highval);
"383
[e ( _lcddisplay (1 -> _highval `ui ]
[; ;newmain.c: 385: Lcd_Set_Cursor(1,15);
"385
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 15 `i `uc ]
[; ;newmain.c: 386: Lcd_Write_String("<<");
"386
[e ( _Lcd_Write_String (1 :s 9C ]
[; ;newmain.c: 387: curs = 1;
"387
[e = _curs -> 1 `i ]
[; ;newmain.c: 390: if(!RB1)
"390
[e $ ! ! _RB1 192  ]
[; ;newmain.c: 391: {
"391
{
[; ;newmain.c: 393: lowval++;
"393
[e ++ _lowval -> 1 `i ]
[; ;newmain.c: 394: if(lowval==highval)
"394
[e $ ! == _lowval _highval 193  ]
[; ;newmain.c: 395: {
"395
{
[; ;newmain.c: 396: lowval = 60;
"396
[e = _lowval -> 60 `i ]
"397
}
[e :U 193 ]
[; ;newmain.c: 397: }
[; ;newmain.c: 399: Lcd_Set_Cursor(1,1);
"399
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 400: Lcd_Write_String("On:");
"400
[e ( _Lcd_Write_String (1 :s 10C ]
[; ;newmain.c: 401: Lcd_Set_Cursor(1,12);
"401
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 12 `i `uc ]
[; ;newmain.c: 402: lcddisplay(lowval);
"402
[e ( _lcddisplay (1 -> _lowval `ui ]
[; ;newmain.c: 407: while(!RB1);
"407
[e $U 194  ]
[e :U 195 ]
[e :U 194 ]
[e $ ! _RB1 195  ]
[e :U 196 ]
"408
}
[; ;newmain.c: 408: }
[e $U 197  ]
"409
[e :U 192 ]
[; ;newmain.c: 409: else if(!RB2)
[e $ ! ! _RB2 198  ]
[; ;newmain.c: 410: {
"410
{
[; ;newmain.c: 412: if(lowval==60)
"412
[e $ ! == _lowval -> 60 `i 199  ]
[; ;newmain.c: 413: {
"413
{
[; ;newmain.c: 414: lowval = highval;
"414
[e = _lowval _highval ]
"415
}
[e :U 199 ]
[; ;newmain.c: 415: }
[; ;newmain.c: 417: lowval--;
"417
[e -- _lowval -> 1 `i ]
[; ;newmain.c: 418: Lcd_Clear();
"418
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 419: Lcd_Set_Cursor(1,1);
"419
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 420: Lcd_Write_String("On:");
"420
[e ( _Lcd_Write_String (1 :s 11C ]
[; ;newmain.c: 421: Lcd_Set_Cursor(1,12);
"421
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 12 `i `uc ]
[; ;newmain.c: 422: lcddisplay(lowval);
"422
[e ( _lcddisplay (1 -> _lowval `ui ]
[; ;newmain.c: 427: while(!RB2);
"427
[e $U 200  ]
[e :U 201 ]
[e :U 200 ]
[e $ ! _RB2 201  ]
[e :U 202 ]
"428
}
[e :U 198 ]
"434
[e :U 197 ]
}
[; ;newmain.c: 428: }
[; ;newmain.c: 434: }
[e $U 203  ]
"435
[e :U 191 ]
[; ;newmain.c: 435: else if((switchsel == 2) && (switchsel<=2))
[e $ ! && == _switchsel -> 2 `i <= _switchsel -> 2 `i 204  ]
[; ;newmain.c: 437: {
"437
{
[; ;newmain.c: 439: Lcd_Clear();
"439
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 440: Lcd_Set_Cursor(1,1);
"440
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 441: Lcd_Write_String("On: ");
"441
[e ( _Lcd_Write_String (1 :s 12C ]
[; ;newmain.c: 442: Lcd_Set_Cursor(1,12);
"442
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 12 `i `uc ]
[; ;newmain.c: 443: lcddisplay(lowval);
"443
[e ( _lcddisplay (1 -> _lowval `ui ]
[; ;newmain.c: 444: Lcd_Set_Cursor(2,1);
"444
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 445: Lcd_Write_String("OFF:");
"445
[e ( _Lcd_Write_String (1 :s 13C ]
[; ;newmain.c: 446: Lcd_Set_Cursor(2,12);
"446
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 12 `i `uc ]
[; ;newmain.c: 447: lcddisplay(highval);
"447
[e ( _lcddisplay (1 -> _highval `ui ]
[; ;newmain.c: 448: Lcd_Set_Cursor(2,15);
"448
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 15 `i `uc ]
[; ;newmain.c: 449: Lcd_Write_String("<<");
"449
[e ( _Lcd_Write_String (1 :s 14C ]
[; ;newmain.c: 450: curs = 2;
"450
[e = _curs -> 2 `i ]
[; ;newmain.c: 454: if(!RB1)
"454
[e $ ! ! _RB1 205  ]
[; ;newmain.c: 455: {
"455
{
[; ;newmain.c: 459: if(highval == 98)
"459
[e $ ! == _highval -> 98 `i 206  ]
[; ;newmain.c: 460: {
"460
{
[; ;newmain.c: 461: highval = lowval;
"461
[e = _highval _lowval ]
"462
}
[e :U 206 ]
[; ;newmain.c: 462: }
[; ;newmain.c: 464: highval++;
"464
[e ++ _highval -> 1 `i ]
[; ;newmain.c: 469: Lcd_Clear();
"469
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 474: Lcd_Set_Cursor(2,1);
"474
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 475: Lcd_Write_String("OFF:");
"475
[e ( _Lcd_Write_String (1 :s 15C ]
[; ;newmain.c: 476: Lcd_Set_Cursor(2,12);
"476
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 12 `i `uc ]
[; ;newmain.c: 477: lcddisplay(highval);
"477
[e ( _lcddisplay (1 -> _highval `ui ]
[; ;newmain.c: 478: while(!RB1);
"478
[e $U 207  ]
[e :U 208 ]
[e :U 207 ]
[e $ ! _RB1 208  ]
[e :U 209 ]
"479
}
[; ;newmain.c: 479: }
[e $U 210  ]
"480
[e :U 205 ]
[; ;newmain.c: 480: else if(!RB2)
[e $ ! ! _RB2 211  ]
[; ;newmain.c: 481: {
"481
{
"483
[v _der `i ~T0 @X0 1 a ]
[; ;newmain.c: 483: int der = highval;
[e = _der _highval ]
[; ;newmain.c: 484: der = der-1;
"484
[e = _der - _der -> 1 `i ]
[; ;newmain.c: 485: if(der == lowval)
"485
[e $ ! == _der _lowval 212  ]
[; ;newmain.c: 486: {
"486
{
[; ;newmain.c: 487: highval = 99;
"487
[e = _highval -> 99 `i ]
"488
}
[e :U 212 ]
[; ;newmain.c: 488: }
[; ;newmain.c: 489: highval--;
"489
[e -- _highval -> 1 `i ]
[; ;newmain.c: 495: Lcd_Set_Cursor(2,1);
"495
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 496: Lcd_Write_String("OFF:");
"496
[e ( _Lcd_Write_String (1 :s 16C ]
[; ;newmain.c: 497: Lcd_Set_Cursor(2,12);
"497
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 12 `i `uc ]
[; ;newmain.c: 498: lcddisplay(highval);
"498
[e ( _lcddisplay (1 -> _highval `ui ]
[; ;newmain.c: 499: while(!RB2);
"499
[e $U 213  ]
[e :U 214 ]
[e :U 213 ]
[e $ ! _RB2 214  ]
[e :U 215 ]
"500
}
[e :U 211 ]
"501
[e :U 210 ]
}
[e :U 204 ]
"504
[e :U 203 ]
[; ;newmain.c: 500: }
[; ;newmain.c: 501: }
[; ;newmain.c: 504: if((!RB3)&&(curs == 1))
[e $ ! && ! _RB3 == _curs -> 1 `i 216  ]
[; ;newmain.c: 505: {
"505
{
[; ;newmain.c: 506: break;
"506
[e $U 185  ]
"507
}
[e :U 216 ]
[; ;newmain.c: 507: }
[; ;newmain.c: 508: if((!RB3)&&(curs == 2))
"508
[e $ ! && ! _RB3 == _curs -> 2 `i 217  ]
[; ;newmain.c: 509: {
"509
{
[; ;newmain.c: 510: break;
"510
[e $U 185  ]
"511
}
[e :U 217 ]
[; ;newmain.c: 511: }
[; ;newmain.c: 512: _delay((unsigned long)((100)*(4000000/4000.0)));
"512
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"516
}
[e :U 183 ]
"358
[e $U 184  ]
[e :U 185 ]
[; ;newmain.c: 516: }
[; ;newmain.c: 517: while(RB3 == 0);
"517
[e $U 218  ]
[e :U 219 ]
[e :U 218 ]
[e $ == -> _RB3 `i -> 0 `i 219  ]
[e :U 220 ]
"518
}
[; ;newmain.c: 518: }
[e $U 221  ]
"519
[e :U 181 ]
[; ;newmain.c: 519: else if(start == 1)
[e $ ! == _start -> 1 `i 222  ]
[; ;newmain.c: 520: {
"520
{
[; ;newmain.c: 521: goto start;
"521
[e $U 182  ]
"522
}
[e :U 222 ]
"523
[e :U 221 ]
[; ;newmain.c: 522: }
[; ;newmain.c: 523: Lcd_Clear();
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 526: if((tempval>=10)&&(tempval<=70))
"526
[e $ ! && >= _tempval -> 10 `i <= _tempval -> 70 `i 223  ]
[; ;newmain.c: 527: {
"527
{
[; ;newmain.c: 529: if(((tempval>=lowval)&&(tempval<=highval))&&((lowval>=10)&&(highval<=70)))
"529
[e $ ! && && >= _tempval _lowval <= _tempval _highval && >= _lowval -> 10 `i <= _highval -> 70 `i 224  ]
[; ;newmain.c: 531: {
"531
{
[; ;newmain.c: 533: RB7 = 1;
"533
[e = _RB7 -> -> 1 `i `b ]
[; ;newmain.c: 536: delay60(tempval,lowval,highval);
"536
[e ( _delay60 (3 , , _tempval _lowval _highval ]
[; ;newmain.c: 537: RB7 = 0;
"537
[e = _RB7 -> -> 0 `i `b ]
[; ;newmain.c: 538: delay60(tempval,lowval,highval);
"538
[e ( _delay60 (3 , , _tempval _lowval _highval ]
[; ;newmain.c: 539: c = 0;
"539
[e = _c -> 0 `i ]
"545
}
[; ;newmain.c: 545: }
[e $U 225  ]
"546
[e :U 224 ]
[; ;newmain.c: 546: else
[; ;newmain.c: 547: {
"547
{
[; ;newmain.c: 548: Lcd_Clear();
"548
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 549: Lcd_Set_Cursor(1,1);
"549
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 551: Lcd_Write_String("Set TEMP 10-70");
"551
[e ( _Lcd_Write_String (1 :s 17C ]
[; ;newmain.c: 553: RB7 = 0;
"553
[e = _RB7 -> -> 0 `i `b ]
[; ;newmain.c: 554: c=1;
"554
[e = _c -> 1 `i ]
[; ;newmain.c: 555: _delay((unsigned long)((1000)*(4000000/4000.0)));
"555
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"556
}
[e :U 225 ]
"557
}
[; ;newmain.c: 556: }
[; ;newmain.c: 557: }
[e $U 226  ]
"558
[e :U 223 ]
[; ;newmain.c: 558: else
[; ;newmain.c: 559: {
"559
{
[; ;newmain.c: 560: if(tempval<10)
"560
[e $ ! < _tempval -> 10 `i 227  ]
[; ;newmain.c: 561: {
"561
{
[; ;newmain.c: 562: Lcd_Clear();
"562
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 563: RB7 = 0;
"563
[e = _RB7 -> -> 0 `i `b ]
[; ;newmain.c: 564: Lcd_Set_Cursor(1,1);
"564
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 565: Lcd_Write_String("LOW TEMP");
"565
[e ( _Lcd_Write_String (1 :s 18C ]
[; ;newmain.c: 566: _delay((unsigned long)((1000)*(4000000/4000.0)));
"566
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"567
}
[; ;newmain.c: 567: }
[e $U 228  ]
"568
[e :U 227 ]
[; ;newmain.c: 568: else if(tempval>70)
[e $ ! > _tempval -> 70 `i 229  ]
[; ;newmain.c: 569: {
"569
{
[; ;newmain.c: 570: Lcd_Clear();
"570
[e ( _Lcd_Clear ..  ]
[; ;newmain.c: 571: RB7 = 0;
"571
[e = _RB7 -> -> 0 `i `b ]
[; ;newmain.c: 572: Lcd_Set_Cursor(1,1);
"572
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 573: Lcd_Write_String("HIGH TEMP");
"573
[e ( _Lcd_Write_String (1 :s 19C ]
[; ;newmain.c: 574: _delay((unsigned long)((1000)*(4000000/4000.0)));
"574
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"575
}
[e :U 229 ]
"577
[e :U 228 ]
}
[e :U 226 ]
"590
}
[e :U 178 ]
"335
[e $U 179  ]
[e :U 180 ]
[; ;newmain.c: 575: }
[; ;newmain.c: 577: }
[; ;newmain.c: 590: }
[; ;newmain.c: 592: }
"592
[e :UE 177 ]
}
[a 4C 69 110 116 101 114 105 110 103 32 115 101 116 117 112 0 ]
[a 18C 76 79 87 32 84 69 77 80 0 ]
[a 19C 72 73 71 72 32 84 69 77 80 0 ]
[a 9C 60 60 0 ]
[a 14C 60 60 0 ]
[a 1C 79 110 95 116 101 109 112 58 0 ]
[a 2C 79 102 102 95 116 101 109 112 58 0 ]
[a 3C 99 117 114 114 101 110 116 32 116 101 109 112 58 0 ]
[a 6C 79 70 70 32 116 101 109 112 58 0 ]
[a 10C 79 110 58 0 ]
[a 11C 79 110 58 0 ]
[a 8C 79 70 70 58 0 ]
[a 13C 79 70 70 58 0 ]
[a 15C 79 70 70 58 0 ]
[a 16C 79 70 70 58 0 ]
[a 17C 83 101 116 32 84 69 77 80 32 49 48 45 55 48 0 ]
[a 5C 79 110 32 116 101 109 112 58 32 0 ]
[a 7C 79 110 58 32 0 ]
[a 12C 79 110 58 32 0 ]
