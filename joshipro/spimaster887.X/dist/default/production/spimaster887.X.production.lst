

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sat Jan 13 15:14:25 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 1.44
    12                           ; Generated 14/09/2017 GMT
    13                           ; 
    14                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F887 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  008F                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  0105                     	;# 
   109  0107                     	;# 
   110  0108                     	;# 
   111  0109                     	;# 
   112  010C                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0185                     	;# 
   118  0187                     	;# 
   119  0188                     	;# 
   120  0189                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0014                     _SSPCON	set	20
   124  0013                     _SSPBUF	set	19
   125  0094                     _SSPSTAT	set	148
   126  043D                     _TRISC5	set	1085
   127  043B                     _TRISC3	set	1083
   128                           
   129                           	psect	strings
   130  0003                     __pstrings:	
   131  0003                     stringtab:	
   132  0003                     __stringtab:	
   133  0003                     stringcode:	
   134                           ;	String table - string pointers are 1 byte each
   135                           
   136  0003                     stringdir:	
   137  0003  3000               	movlw	high stringdir
   138  0004  008A               	movwf	10
   139  0005  0804               	movf	4,w
   140  0006  0A84               	incf	4,f
   141  0007  0782               	addwf	2,f
   142  0008                     __stringbase:	
   143  0008  3400               	retlw	0
   144  0009                     __end_of__stringtab:	
   145  0009                     STR_1:	
   146  0009  346A               	retlw	106	;'j'
   147  000A  346F               	retlw	111	;'o'
   148  000B  3473               	retlw	115	;'s'
   149  000C  3468               	retlw	104	;'h'
   150  000D  3469               	retlw	105	;'i'
   151  000E  3400               	retlw	0
   152                           
   153                           ; #config settings
   154  0000                     
   155                           	psect	cinit
   156  07FC                     start_initialization:	
   157  07FC                     __initialization:	
   158  07FC                     end_of_initialization:	
   159                           ;End of C runtime variable initialization code
   160                           
   161  07FC                     __end_of__initialization:	
   162  07FC  0183               	clrf	3
   163  07FD  120A  118A  2FC1   	ljmp	_main	;jump to C main() function
   164                           
   165                           	psect	cstackCOMMON
   166  0070                     __pcstackCOMMON:	
   167  0070                     ?_SPI_String:	
   168  0070                     ??_SPI_String:	
   169                           ; 1 bytes @ 0x0
   170                           
   171  0070                     ?_main:	
   172                           ; 1 bytes @ 0x0
   173                           
   174                           
   175                           ; 1 bytes @ 0x0
   176  0070                     	ds	1
   177  0071                     SPI_String@i:	
   178                           
   179                           ; 2 bytes @ 0x1
   180  0071                     	ds	2
   181  0073                     SPI_String@a:	
   182                           
   183                           ; 1 bytes @ 0x3
   184  0073                     	ds	1
   185  0074                     ??_main:	
   186  0074                     main@i:	
   187                           ; 1 bytes @ 0x4
   188                           
   189                           
   190                           ; 2 bytes @ 0x4
   191  0074                     	ds	2
   192  0076                     main@a:	
   193                           
   194                           ; 2 bytes @ 0x6
   195  0076                     	ds	2
   196                           
   197                           	psect	maintext
   198  07C1                     __pmaintext:	
   199 ;;
   200 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   201 ;;
   202 ;; *************** function _main *****************
   203 ;; Defined at:
   204 ;;		line 40 in file "newmain.c"
   205 ;; Parameters:    Size  Location     Type
   206 ;;		None
   207 ;; Auto vars:     Size  Location     Type
   208 ;;  a               2    6[COMMON] int 
   209 ;;  i               2    4[COMMON] int 
   210 ;; Return value:  Size  Location     Type
   211 ;;                  1    wreg      void 
   212 ;; Registers used:
   213 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   214 ;; Tracked objects:
   215 ;;		On entry : B00/0
   216 ;;		On exit  : 0/0
   217 ;;		Unchanged: 0/0
   218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   219 ;;      Params:         0       0       0       0       0
   220 ;;      Locals:         4       0       0       0       0
   221 ;;      Temps:          0       0       0       0       0
   222 ;;      Totals:         4       0       0       0       0
   223 ;;Total ram usage:        4 bytes
   224 ;; Hardware stack levels required when called:    2
   225 ;; This function calls:
   226 ;;		_SPI_String
   227 ;; This function is called by:
   228 ;;		Startup code after reset
   229 ;; This function uses a non-reentrant model
   230 ;;
   231                           
   232                           
   233                           ;psect for function _main
   234  07C1                     _main:	
   235                           
   236                           ;newmain.c: 41: SSPCON = 0x20;
   237                           
   238                           ;incstack = 0
   239                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   240  07C1  3020               	movlw	32
   241  07C2  1283               	bcf	3,5	;RP0=0, select bank0
   242  07C3  1303               	bcf	3,6	;RP1=0, select bank0
   243  07C4  0094               	movwf	20	;volatile
   244                           
   245                           ;newmain.c: 42: SSPSTAT = 0;
   246  07C5  1683               	bsf	3,5	;RP0=1, select bank1
   247  07C6  1303               	bcf	3,6	;RP1=0, select bank1
   248  07C7  0194               	clrf	20	;volatile
   249                           
   250                           ;newmain.c: 43: TRISC3 = 0;
   251  07C8  1187               	bcf	7,3	;volatile
   252                           
   253                           ;newmain.c: 44: TRISC5 = 0;
   254  07C9  1287               	bcf	7,5	;volatile
   255                           
   256                           ;newmain.c: 46: int i = 0;
   257  07CA  01F4               	clrf	main@i
   258  07CB  01F5               	clrf	main@i+1
   259                           
   260                           ;newmain.c: 47: int a= 0;
   261  07CC  01F6               	clrf	main@a
   262  07CD  01F7               	clrf	main@a+1
   263  07CE                     l528:	
   264                           ;newmain.c: 48: while(1){
   265                           
   266                           
   267                           ;newmain.c: 52: SPI_String("joshi");
   268  07CE  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   269  07CF  120A  118A  27D5  120A  118A  	fcall	_SPI_String
   270  07D4  2FCE               	goto	l528
   271  07D5                     __end_of_main:	
   272                           
   273                           	psect	text1
   274  07D5                     __ptext1:	
   275 ;; *************** function _SPI_String *****************
   276 ;; Defined at:
   277 ;;		line 27 in file "newmain.c"
   278 ;; Parameters:    Size  Location     Type
   279 ;;  a               1    wreg     PTR const unsigned char 
   280 ;;		 -> STR_1(6), 
   281 ;; Auto vars:     Size  Location     Type
   282 ;;  a               1    3[COMMON] PTR const unsigned char 
   283 ;;		 -> STR_1(6), 
   284 ;;  i               2    1[COMMON] int 
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   289 ;; Tracked objects:
   290 ;;		On entry : 0/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   294 ;;      Params:         0       0       0       0       0
   295 ;;      Locals:         3       0       0       0       0
   296 ;;      Temps:          1       0       0       0       0
   297 ;;      Totals:         4       0       0       0       0
   298 ;;Total ram usage:        4 bytes
   299 ;; Hardware stack levels used:    2
   300 ;; This function calls:
   301 ;;		Nothing
   302 ;; This function is called by:
   303 ;;		_main
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307                           
   308                           ;psect for function _SPI_String
   309  07D5                     _SPI_String:	
   310                           
   311                           ;incstack = 0
   312                           ; Regs used in _SPI_String: [wreg-fsr0h+status,2+status,0+pclath]
   313                           ;SPI_String@a stored from wreg
   314  07D5  00F3               	movwf	SPI_String@a
   315                           
   316                           ;newmain.c: 31: int i;
   317                           ;newmain.c: 32: for(i=0;a[i]!='\0';i++)
   318  07D6  01F1               	clrf	SPI_String@i
   319  07D7  01F2               	clrf	SPI_String@i+1
   320  07D8                     l15:	
   321  07D8  0871               	movf	SPI_String@i,w
   322  07D9  0773               	addwf	SPI_String@a,w
   323  07DA  0084               	movwf	4
   324  07DB  120A  118A  2003  120A  118A  	fcall	stringdir
   325  07E0  3A00               	xorlw	0
   326  07E1  1903               	btfsc	3,2
   327  07E2  0008               	return
   328                           
   329                           ;newmain.c: 33: {
   330                           ;newmain.c: 34: SSPBUF = a[i];
   331  07E3  0871               	movf	SPI_String@i,w
   332  07E4  0773               	addwf	SPI_String@a,w
   333  07E5  0084               	movwf	4
   334  07E6  120A  118A  2003  120A  118A  	fcall	stringdir
   335  07EB  1283               	bcf	3,5	;RP0=0, select bank0
   336  07EC  1303               	bcf	3,6	;RP1=0, select bank0
   337  07ED  0093               	movwf	19	;volatile
   338                           
   339                           ;newmain.c: 35: _delay((unsigned long)((1)*(4000000/4000.0)));
   340  07EE  30C7               	movlw	199
   341  07EF  00F0               	movwf	??_SPI_String
   342  07F0                     u37:	
   343  07F0  2FF1               	nop2
   344  07F1  0BF0               	decfsz	??_SPI_String,f
   345  07F2  2FF0               	goto	u37
   346  07F3  2FF4               	nop2
   347  07F4  2FF5               	nop2
   348  07F5  3001               	movlw	1
   349  07F6  07F1               	addwf	SPI_String@i,f
   350  07F7  1803               	skipnc
   351  07F8  0AF2               	incf	SPI_String@i+1,f
   352  07F9  3000               	movlw	0
   353  07FA  07F2               	addwf	SPI_String@i+1,f
   354  07FB  2FD8               	goto	l15
   355  07FC                     __end_of_SPI_String:	
   356  007E                     btemp	set	126	;btemp
   357  007E                     wtemp0	set	126


Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    SPI_String@a	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_SPI_String

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     119
                                              4 COMMON     4     4      0
                         _SPI_String
 ---------------------------------------------------------------------------------
 (2) _SPI_String                                           4     4      0     117
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_String

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sat Jan 13 15:14:25 2018

                       pc 0002                _SPI_String 07D5               __CFG_CP$OFF 0000  
                      l15 07D8                        u37 07F0                        fsr 0004  
             __CFG_LVP$ON 0000                       l528 07CE              __CFG_CPD$OFF 0000  
                     fsr0 0004              __CFG_IESO$ON 0000                      STR_1 0009  
            __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000                      _main 07C1  
                    btemp 007E             __CFG_BOREN$ON 0000                      start 0000  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     main@a 0076  
                   main@i 0074                     pclath 000A                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 07FC  
            __end_of_main 07D5               ?_SPI_String 0070                    ??_main 0074  
                  _TRISC3 043B                    _TRISC5 043D                    _SSPBUF 0013  
                  _SSPCON 0014            __CFG_PWRTE$OFF 0000       __size_of_SPI_String 0027  
 __end_of__initialization 07FC            __pcstackCOMMON 0070                __pmaintext 07C1  
                 _SSPSTAT 0094                __stringtab 0003              ??_SPI_String 0070  
                 __ptext1 07D5      end_of_initialization 07FC        __end_of_SPI_String 07FC  
     start_initialization 07FC  __CFG_FOSC$INTRC_NOCLKOUT 0000               SPI_String@a 0073  
             SPI_String@i 0071                 ___latbits 0002                 __pstrings 0003  
             __stringbase 0008        __end_of__stringtab 0009         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0014                 stringcode 0003                  stringdir 0003  
                stringtab 0003  
