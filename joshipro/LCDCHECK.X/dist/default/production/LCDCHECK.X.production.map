Microchip MPLAB XC8 Compiler V1.44 ()

Linker command line:

--edf=C:\Program Files\Microchip\xc8\v1.44\dat\en_msgs.txt -cs \
  -h+dist/default/production\LCDCHECK.X.production.sym \
  --cmf=dist/default/production\LCDCHECK.X.production.cmf -z -Q16F767 \
  -oC:\Users\admin\AppData\Local\Temp\s8l0.2 \
  -Mdist/default/production/LCDCHECK.X.production.map -E1 -ver=XC8 \
  -ASTACK=0110h-016fh -pstack=STACK -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh \
  -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -DCODE=2 -DSTRCODE=2 \
  -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\admin\AppData\Local\Temp\s8l0.obj \
  dist/default/production\LCDCHECK.X.production.obj 

Object code version is 3.11

Machine type is 16F767



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\admin\AppData\Local\Temp\s8l0.obj
                end_init                              0        0        3        0       0
dist/default/production\LCDCHECK.X.production.obj
                cinit                               7FC      7FC        4      FF8       0
                text9                               6E4      6E4       2E      DC8       0
                text8                               68E      68E       1A      D1C       0
                text7                               66B      66B        5      CD6       0
                text6                               712      712       4C      E24       0
                text5                               67A      67A       14      CF4       0
                text4                               670      670        5      CE0       0
                text3                               675      675        5      CEA       0
                text2                               6A8      6A8       1A      D50       0
                text1                               6C2      6C2       22      D84       0
                maintext                            75E      75E       9E      EBC       0
                cstackCOMMON                         70       70        C       70       1
                strings                               3        3       22        6       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              0        0        3         0
                cinit                               7FC      7FC        4         0
                text9                               6E4      6E4       2E         0
                text8                               68E      68E       1A         0
                text7                               66B      66B        5         0
                text6                               712      712       4C         0
                text5                               67A      67A       14         0
                text4                               670      670        5         0
                text3                               675      675        5         0
                text2                               6A8      6A8       1A         0
                text1                               6C2      6C2       22         0
                maintext                            75E      75E       9E         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                               3        3       22         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        C         1

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                strings                        000003  000022  000025         6       0  STRING      2
                cstackCOMMON                   000070  00000C  00007C        70       1  COMMON      1
                text7                          00066B  000005  000670       CD6       0  CODE        2
                text4                          000670  000005  000675       CE0       0  CODE        2
                text3                          000675  000005  00067A       CEA       0  CODE        2
                text5                          00067A  000014  00068E       CF4       0  CODE        2
                text8                          00068E  00001A  0006A8       D1C       0  CODE        2
                text2                          0006A8  00001A  0006C2       D50       0  CODE        2
                text1                          0006C2  000022  0006E4       D84       0  CODE        2
                text9                          0006E4  00002E  000712       DC8       0  CODE        2
                text6                          000712  00004C  00075E       E24       0  CODE        2
                maintext                       00075E  00009E  0007FC       EBC       0  CODE        2
                cinit                          0007FC  000004  000800       FF8       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0020-006F             50           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0025-066A            646           2
                         0800-1FFF            800
        COMMON           007C-007D              2           1
        CONFIG           2007-2008              2           2
        CONST            0025-066A            100           2
                         0800-1FFF            100
        ENTRY            0025-066A            100           2
                         0800-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0020-006F             50           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0025-066A            646           2
                         0800-1FFF           1800
        STRING           0025-066A            100           2
                         0800-1FFF            100

                                  Symbol Table

Lcd8_Cmd@a                  cstackCOMMON 0073
Lcd8_Port@a                 cstackCOMMON 0070
Lcd8_Set_Cursor@a           cstackCOMMON 0075
Lcd8_Set_Cursor@b           cstackCOMMON 0074
Lcd8_Write_Char@a           cstackCOMMON 0073
Lcd8_Write_String@a         cstackCOMMON 0076
Lcd8_Write_String@i         cstackCOMMON 0074
_Lcd8_Clear                 text7        066B
_Lcd8_Cmd                   text8        068E
_Lcd8_Init                  text6        0712
_Lcd8_Port                  text9        06E4
_Lcd8_Set_Cursor            text5        067A
_Lcd8_Shift_Left            text4        0670
_Lcd8_Shift_Right           text3        0675
_Lcd8_Write_Char            text2        06A8
_Lcd8_Write_String          text1        06C2
_RB6                        (abs)        0036
_RB7                        (abs)        0037
_RC0                        (abs)        0038
_RC1                        (abs)        0039
_RC2                        (abs)        003A
_RC3                        (abs)        003B
_RC4                        (abs)        003C
_RC5                        (abs)        003D
_RC6                        (abs)        003E
_RC7                        (abs)        003F
_TRISB                      (abs)        0086
_TRISC                      (abs)        0087
__Habs1                     abs1         0000
__Hbank0                    bank0        0000
__Hbank1                    bank1        0000
__Hbank2                    bank2        0000
__Hbank3                    bank3        0000
__Hcinit                    cinit        0800
__Hclrtext                  clrtext      0000
__Hcode                     code         0000
__Hcommon                   common       0000
__Hconfig                   config       0000
__HcstackCOMMON             cstackCOMMON 0000
__Heeprom_data              eeprom_data  0000
__Hend_init                 end_init     0003
__Hfunctab                  functab      0000
__Hidloc                    idloc        0000
__Hinit                     init         0000
__Hintentry                 intentry     0000
__Hmaintext                 maintext     0000
__Hpowerup                  powerup      0000
__Hram                      ram          0000
__Hreset_vec                reset_vec    0000
__Hsfr0                     sfr0         0000
__Hsfr1                     sfr1         0000
__Hsfr2                     sfr2         0000
__Hsfr3                     sfr3         0000
__Hspace_0                  (abs)        0800
__Hspace_1                  (abs)        007C
__Hspace_2                  (abs)        0000
__Hspace_3                  (abs)        0000
__Hstack                    stack        0000
__Hstrings                  strings      0000
__Htext                     text         0000
__Labs1                     abs1         0000
__Lbank0                    bank0        0000
__Lbank1                    bank1        0000
__Lbank2                    bank2        0000
__Lbank3                    bank3        0000
__Lcinit                    cinit        07FC
__Lclrtext                  clrtext      0000
__Lcode                     code         0000
__Lcommon                   common       0000
__Lconfig                   config       0000
__LcstackCOMMON             cstackCOMMON 0000
__Leeprom_data              eeprom_data  0000
__Lend_init                 end_init     0000
__Lfunctab                  functab      0000
__Lidloc                    idloc        0000
__Linit                     init         0000
__Lintentry                 intentry     0000
__Lmaintext                 maintext     0000
__Lpowerup                  powerup      0000
__Lram                      ram          0000
__Lreset_vec                reset_vec    0000
__Lsfr0                     sfr0         0000
__Lsfr1                     sfr1         0000
__Lsfr2                     sfr2         0000
__Lsfr3                     sfr3         0000
__Lspace_0                  (abs)        0000
__Lspace_1                  (abs)        0000
__Lspace_2                  (abs)        0000
__Lspace_3                  (abs)        0000
__Lstack                    stack        0000
__Lstrings                  strings      0000
__Ltext                     text         0000
__S0                        (abs)        0800
__S1                        (abs)        007C
__S2                        (abs)        0000
___int_sp                   stack        0000
___latbits                  (abs)        0002
___sp                       stack        0000
__end_of_Lcd8_Clear         text7        0670
__end_of_Lcd8_Cmd           text8        06A8
__end_of_Lcd8_Init          text6        075E
__end_of_Lcd8_Port          text9        0712
__end_of_Lcd8_Set_Cursor    text5        068E
__end_of_Lcd8_Shift_Left    text4        0675
__end_of_Lcd8_Shift_Right   text3        067A
__end_of_Lcd8_Write_Char    text2        06C2
__end_of_Lcd8_Write_String  text1        06E4
__end_of__initialization    cinit        07FC
__end_of__stringtab         strings      0009
__end_of_main               maintext     07FC
__initialization            cinit        07FC
__pcstackCOMMON             cstackCOMMON 0070
__pmaintext                 maintext     075E
__pstrings                  strings      0003
__ptext1                    text1        06C2
__ptext2                    text2        06A8
__ptext3                    text3        0675
__ptext4                    text4        0670
__ptext5                    text5        067A
__ptext6                    text6        0712
__ptext7                    text7        066B
__ptext8                    text8        068E
__ptext9                    text9        06E4
__size_of_Lcd8_Clear        (abs)        0000
__size_of_Lcd8_Cmd          (abs)        0000
__size_of_Lcd8_Init         (abs)        0000
__size_of_Lcd8_Port         (abs)        0000
__size_of_Lcd8_Set_Cursor   (abs)        0000
__size_of_Lcd8_Shift_Left   (abs)        0000
__size_of_Lcd8_Shift_Right  (abs)        0000
__size_of_Lcd8_Write_Char   (abs)        0000
__size_of_Lcd8_Write_String (abs)        0000
__size_of_main              (abs)        0000
__stringbase                strings      0008
__stringtab                 strings      0003
_main                       maintext     075E
btemp                       (abs)        007E
end_of_initialization       cinit        07FC
intlevel0                   functab      0000
intlevel1                   functab      0000
intlevel2                   functab      0000
intlevel3                   functab      0000
intlevel4                   functab      0000
intlevel5                   functab      0000
main@i                      cstackCOMMON 007A
reset_vec                   reset_vec    0000
stackhi                     (abs)        0000
stacklo                     (abs)        0000
start                       init         0000
start_initialization        cinit        07FC
wtemp0                      (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 20 in file "LCDCHECK.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   10[COMMON] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd8_Clear
		_Lcd8_Init
		_Lcd8_Set_Cursor
		_Lcd8_Shift_Left
		_Lcd8_Shift_Right
		_Lcd8_Write_Char
		_Lcd8_Write_String
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _Lcd8_Write_String *****************
 Defined at:
		line 105 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     PTR unsigned char 
		 -> STR_1(28), 
 Auto vars:     Size  Location     Type
  a               1    6[COMMON] PTR unsigned char 
		 -> STR_1(28), 
  i               2    4[COMMON] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd8_Write_Char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd8_Write_Char *****************
 Defined at:
		line 96 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd8_Port
 This function is called by:
		_Lcd8_Write_String
		_main
 This function uses a non-reentrant model


 *************** function _Lcd8_Shift_Right *****************
 Defined at:
		line 112 in file "lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd8_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd8_Shift_Left *****************
 Defined at:
		line 117 in file "lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd8_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd8_Set_Cursor *****************
 Defined at:
		line 70 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  b               1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  a               1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd8_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd8_Init *****************
 Defined at:
		line 78 in file "lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd8_Cmd
		_Lcd8_Port
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd8_Clear *****************
 Defined at:
		line 65 in file "lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   50[None  ] int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd8_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd8_Cmd *****************
 Defined at:
		line 56 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd8_Port
 This function is called by:
		_Lcd8_Clear
		_Lcd8_Set_Cursor
		_Lcd8_Init
		_Lcd8_Shift_Right
		_Lcd8_Shift_Left
 This function uses a non-reentrant model


 *************** function _Lcd8_Port *****************
 Defined at:
		line 14 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Lcd8_Cmd
		_Lcd8_Init
		_Lcd8_Write_Char
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
LCDCHECK.c
		_main          		CODE           	075E	0000	159

LCDCHECK.c estimated size: 159

shared
		__stringtab    		STRING         	0003	0000	7
		__initialization		CODE           	07FC	0000	1

shared estimated size: 8

lcd.h
		_Lcd8_Write_String		CODE           	06C2	0000	35
		_Lcd8_Set_Cursor		CODE           	067A	0000	21
		_Lcd8_Shift_Left		CODE           	0670	0000	6
		_Lcd8_Init     		CODE           	0712	0000	77
		_Lcd8_Port     		CODE           	06E4	0000	47
		_Lcd8_Write_Char		CODE           	06A8	0000	27
		_Lcd8_Cmd      		CODE           	068E	0000	27
		_Lcd8_Shift_Right		CODE           	0675	0000	6
		_Lcd8_Clear    		CODE           	066B	0000	6

lcd.h estimated size: 252

