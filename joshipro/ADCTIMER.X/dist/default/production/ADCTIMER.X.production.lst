

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Dec 12 13:39:20 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	12F675
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	dabs	1,0x5E,2
     9  0000                     
    10                           ; Version 1.44
    11                           ; Generated 14/09/2017 GMT
    12                           ; 
    13                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC12F675 Definitions
    42                           ; 
    43                           ; SFR Addresses
    44  0000                     	;# 
    45  0001                     	;# 
    46  0002                     	;# 
    47  0003                     	;# 
    48  0004                     	;# 
    49  0005                     	;# 
    50  000A                     	;# 
    51  000B                     	;# 
    52  000C                     	;# 
    53  000E                     	;# 
    54  000E                     	;# 
    55  000F                     	;# 
    56  0010                     	;# 
    57  0019                     	;# 
    58  001E                     	;# 
    59  001F                     	;# 
    60  0081                     	;# 
    61  0085                     	;# 
    62  008C                     	;# 
    63  008E                     	;# 
    64  0090                     	;# 
    65  0095                     	;# 
    66  0096                     	;# 
    67  0096                     	;# 
    68  0099                     	;# 
    69  009A                     	;# 
    70  009A                     	;# 
    71  009B                     	;# 
    72  009C                     	;# 
    73  009D                     	;# 
    74  009E                     	;# 
    75  009F                     	;# 
    76  0001                     _TMR0	set	1
    77  0019                     _CMCON	set	25
    78  001E                     _ADRESH	set	30
    79  001F                     _ADCON0	set	31
    80  0028                     _GP0	set	40
    81  005A                     _T0IF	set	90
    82  002A                     _GP2	set	42
    83  00F9                     _GO_nDONE	set	249
    84  0081                     _OPTION_REG	set	129
    85  0099                     _VRCON	set	153
    86  009F                     _ANSEL	set	159
    87  009E                     _ADRESL	set	158
    88  042A                     _TRISIO2	set	1066
    89  0429                     _TRISIO1	set	1065
    90  042D                     _TRISIO5	set	1069
    91  042B                     _TRISIO3	set	1067
    92  042C                     _TRISIO4	set	1068
    93  0428                     _TRISIO0	set	1064
    94                           
    95                           ; #config settings
    96  0000                     
    97                           	psect	cinit
    98  03FD                     start_initialization:	
    99  03FD                     __initialization:	
   100  03FD                     end_of_initialization:	
   101                           ;End of C runtime variable initialization code
   102                           
   103  03FD                     __end_of__initialization:	
   104  03FD  0183               	clrf	3
   105  03FE  29E7               	ljmp	_main	;jump to C main() function
   106                           
   107                           	psect	cstackBANK0
   108  0020                     __pcstackBANK0:	
   109  0020                     ?_main:	
   110  0020                     ?_GetADCValue:	
   111                           ; 1 bytes @ 0x0
   112                           
   113                           
   114                           ; 2 bytes @ 0x0
   115  0020                     	ds	2
   116  0022                     ??_GetADCValue:	
   117                           
   118                           ; 1 bytes @ 0x2
   119  0022                     	ds	2
   120  0024                     GetADCValue@Channel:	
   121                           
   122                           ; 1 bytes @ 0x4
   123  0024                     	ds	1
   124  0025                     ??_main:	
   125                           
   126                           ; 1 bytes @ 0x5
   127  0025                     	ds	1
   128  0026                     main@ADC_value:	
   129                           
   130                           ; 2 bytes @ 0x6
   131  0026                     	ds	2
   132  0028                     main@ADC_value1:	
   133                           
   134                           ; 2 bytes @ 0x8
   135  0028                     	ds	2
   136  002A                     main@off:	
   137                           
   138                           ; 2 bytes @ 0xA
   139  002A                     	ds	2
   140  002C                     main@count:	
   141                           
   142                           ; 2 bytes @ 0xC
   143  002C                     	ds	2
   144  002E                     main@counts:	
   145                           
   146                           ; 2 bytes @ 0xE
   147  002E                     	ds	2
   148  0030                     main@ledf:	
   149                           
   150                           ; 2 bytes @ 0x10
   151  0030                     	ds	2
   152  0032                     main@TIMERM:	
   153                           
   154                           ; 2 bytes @ 0x12
   155  0032                     	ds	2
   156  0034                     main@TIMERS:	
   157                           
   158                           ; 2 bytes @ 0x14
   159  0034                     	ds	2
   160  0036                     main@ADC1:	
   161                           
   162                           ; 2 bytes @ 0x16
   163  0036                     	ds	2
   164  0038                     main@ADC2:	
   165                           
   166                           ; 2 bytes @ 0x18
   167  0038                     	ds	2
   168                           
   169                           	psect	maintext
   170  01E7                     __pmaintext:	
   171 ;;
   172 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   173 ;;
   174 ;; *************** function _main *****************
   175 ;; Defined at:
   176 ;;		line 65 in file "adctimer.c"
   177 ;; Parameters:    Size  Location     Type
   178 ;;		None
   179 ;; Auto vars:     Size  Location     Type
   180 ;;  ADC2            2   24[BANK0 ] int 
   181 ;;  ADC1            2   22[BANK0 ] int 
   182 ;;  TIMERS          2   20[BANK0 ] int 
   183 ;;  TIMERM          2   18[BANK0 ] int 
   184 ;;  ledf            2   16[BANK0 ] int 
   185 ;;  counts          2   14[BANK0 ] int 
   186 ;;  count           2   12[BANK0 ] int 
   187 ;;  off             2   10[BANK0 ] int 
   188 ;;  ADC_value1      2    8[BANK0 ] unsigned int 
   189 ;;  ADC_value       2    6[BANK0 ] unsigned int 
   190 ;; Return value:  Size  Location     Type
   191 ;;                  1    wreg      void 
   192 ;; Registers used:
   193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   194 ;; Tracked objects:
   195 ;;		On entry : B00/0
   196 ;;		On exit  : 0/0
   197 ;;		Unchanged: 0/0
   198 ;; Data sizes:     COMMON   BANK0
   199 ;;      Params:         0       0
   200 ;;      Locals:         0      20
   201 ;;      Temps:          0       1
   202 ;;      Totals:         0      21
   203 ;;Total ram usage:       21 bytes
   204 ;; Hardware stack levels required when called:    1
   205 ;; This function calls:
   206 ;;		_GetADCValue
   207 ;; This function is called by:
   208 ;;		Startup code after reset
   209 ;; This function uses a non-reentrant model
   210 ;;
   211                           
   212                           
   213                           ;psect for function _main
   214  01E7                     _main:	
   215                           
   216                           ;adctimer.c: 68: TRISIO0 = 0;
   217                           
   218                           ;incstack = 0
   219                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   220  01E7  1683               	bsf	3,5	;RP0=1, select bank1
   221  01E8  1005               	bcf	5,0	;volatile
   222                           
   223                           ;adctimer.c: 69: TRISIO4 = 1;
   224  01E9  1605               	bsf	5,4	;volatile
   225                           
   226                           ;adctimer.c: 70: TRISIO3 = 1;
   227  01EA  1585               	bsf	5,3	;volatile
   228                           
   229                           ;adctimer.c: 71: TRISIO5 = 1;
   230  01EB  1685               	bsf	5,5	;volatile
   231                           
   232                           ;adctimer.c: 72: TRISIO1 = 1;
   233  01EC  1485               	bsf	5,1	;volatile
   234                           
   235                           ;adctimer.c: 73: TRISIO2 = 0;
   236  01ED  1105               	bcf	5,2	;volatile
   237                           
   238                           ;adctimer.c: 75: ANSEL = 0X09;
   239  01EE  3009               	movlw	9
   240  01EF  009F               	movwf	31	;volatile
   241                           
   242                           ;adctimer.c: 76: CMCON = 0X07;
   243  01F0  3007               	movlw	7
   244  01F1  1283               	bcf	3,5	;RP0=0, select bank0
   245  01F2  0099               	movwf	25	;volatile
   246                           
   247                           ;adctimer.c: 77: ADCON0 = 0X83;
   248  01F3  3083               	movlw	131
   249  01F4  009F               	movwf	31	;volatile
   250                           
   251                           ;adctimer.c: 78: VRCON = 0X00;
   252  01F5  1683               	bsf	3,5	;RP0=1, select bank1
   253  01F6  0199               	clrf	25	;volatile
   254                           
   255                           ;adctimer.c: 79: OPTION_REG = 0x07;
   256  01F7  3007               	movlw	7
   257  01F8  0081               	movwf	1	;volatile
   258                           
   259                           ;adctimer.c: 80: TMR0 = 0x00;
   260  01F9  1283               	bcf	3,5	;RP0=0, select bank0
   261  01FA  0181               	clrf	1	;volatile
   262                           
   263                           ;adctimer.c: 84: int ADC1 = 0;
   264  01FB  01B6               	clrf	main@ADC1
   265  01FC  01B7               	clrf	main@ADC1+1
   266                           
   267                           ;adctimer.c: 85: int ADC2 = 0;
   268  01FD  01B8               	clrf	main@ADC2
   269  01FE  01B9               	clrf	main@ADC2+1
   270                           
   271                           ;adctimer.c: 86: int TIMERM = 0;
   272  01FF  01B2               	clrf	main@TIMERM
   273  0200  01B3               	clrf	main@TIMERM+1
   274                           
   275                           ;adctimer.c: 87: int TIMERS = 0;
   276  0201  01B4               	clrf	main@TIMERS
   277  0202  01B5               	clrf	main@TIMERS+1
   278                           
   279                           ;adctimer.c: 88: int count = 0;
   280  0203  01AC               	clrf	main@count
   281  0204  01AD               	clrf	main@count+1
   282                           
   283                           ;adctimer.c: 89: int counts = 0;
   284  0205  01AE               	clrf	main@counts
   285  0206  01AF               	clrf	main@counts+1
   286                           
   287                           ;adctimer.c: 90: int off =0;
   288  0207  01AA               	clrf	main@off
   289  0208  01AB               	clrf	main@off+1
   290                           
   291                           ;adctimer.c: 91: int ledf = 0;
   292  0209  01B0               	clrf	main@ledf
   293  020A  01B1               	clrf	main@ledf+1
   294                           
   295                           ;adctimer.c: 93: unsigned int ADC_value = 0;
   296  020B  01A6               	clrf	main@ADC_value
   297  020C  01A7               	clrf	main@ADC_value+1
   298                           
   299                           ;adctimer.c: 94: unsigned int ADC_value1 = 0;
   300  020D  01A8               	clrf	main@ADC_value1
   301  020E  01A9               	clrf	main@ADC_value1+1
   302                           
   303                           ;adctimer.c: 96: GP2 = 0;
   304  020F  1105               	bcf	5,2	;volatile
   305  0210                     l713:	
   306                           ;adctimer.c: 99: while(1)
   307                           
   308                           
   309                           ;adctimer.c: 100: {
   310                           ;adctimer.c: 102: ADC1 = GetADCValue(1<<3);
   311  0210  3008               	movlw	8
   312  0211  21BA               	fcall	_GetADCValue
   313  0212  1283               	bcf	3,5	;RP0=0, select bank0
   314  0213  0821               	movf	?_GetADCValue+1,w
   315  0214  00B7               	movwf	main@ADC1+1
   316  0215  0820               	movf	?_GetADCValue,w
   317  0216  00B6               	movwf	main@ADC1
   318                           
   319                           ;adctimer.c: 104: ADC2 = GetADCValue(1<<1);
   320  0217  3002               	movlw	2
   321  0218  21BA               	fcall	_GetADCValue
   322  0219  1283               	bcf	3,5	;RP0=0, select bank0
   323  021A  0821               	movf	?_GetADCValue+1,w
   324  021B  00B9               	movwf	main@ADC2+1
   325  021C  0820               	movf	?_GetADCValue,w
   326  021D  00B8               	movwf	main@ADC2
   327                           
   328                           ;adctimer.c: 107: if((ADC1>=0)&&(ADC1<200))
   329  021E  1BB7               	btfsc	main@ADC1+1,7
   330  021F  2A30               	goto	l723
   331  0220  0837               	movf	main@ADC1+1,w
   332  0221  3A80               	xorlw	128
   333  0222  00DF               	movwf	95
   334  0223  3080               	movlw	128
   335  0224  025F               	subwf	95,w
   336  0225  1D03               	skipz
   337  0226  2A29               	goto	u385
   338  0227  30C8               	movlw	200
   339  0228  0236               	subwf	main@ADC1,w
   340  0229                     u385:	
   341  0229  1803               	skipnc
   342  022A  2A30               	goto	l723
   343                           
   344                           ;adctimer.c: 108: {
   345                           ;adctimer.c: 110: TIMERM = 1050;
   346  022B  301A               	movlw	26
   347  022C  1283               	bcf	3,5	;RP0=0, select bank0
   348  022D  00B2               	movwf	main@TIMERM
   349  022E  3004               	movlw	4
   350  022F  00B3               	movwf	main@TIMERM+1
   351  0230                     l723:	
   352                           
   353                           ;adctimer.c: 112: }
   354                           ;adctimer.c: 114: if((ADC1>200)&&(ADC1<400))
   355  0230  1283               	bcf	3,5	;RP0=0, select bank0
   356  0231  0837               	movf	main@ADC1+1,w
   357  0232  3A80               	xorlw	128
   358  0233  00DF               	movwf	95
   359  0234  3080               	movlw	128
   360  0235  025F               	subwf	95,w
   361  0236  1D03               	skipz
   362  0237  2A3A               	goto	u395
   363  0238  30C9               	movlw	201
   364  0239  0236               	subwf	main@ADC1,w
   365  023A                     u395:	
   366  023A  1C03               	skipc
   367  023B  2A4D               	goto	l729
   368  023C  1283               	bcf	3,5	;RP0=0, select bank0
   369  023D  0837               	movf	main@ADC1+1,w
   370  023E  3A80               	xorlw	128
   371  023F  00DF               	movwf	95
   372  0240  3081               	movlw	129
   373  0241  025F               	subwf	95,w
   374  0242  1D03               	skipz
   375  0243  2A46               	goto	u405
   376  0244  3090               	movlw	144
   377  0245  0236               	subwf	main@ADC1,w
   378  0246                     u405:	
   379  0246  1803               	skipnc
   380  0247  2A4D               	goto	l729
   381                           
   382                           ;adctimer.c: 115: {
   383                           ;adctimer.c: 117: TIMERM = 2094;
   384  0248  302E               	movlw	46
   385  0249  1283               	bcf	3,5	;RP0=0, select bank0
   386  024A  00B2               	movwf	main@TIMERM
   387  024B  3008               	movlw	8
   388  024C  00B3               	movwf	main@TIMERM+1
   389  024D                     l729:	
   390                           
   391                           ;adctimer.c: 118: }
   392                           ;adctimer.c: 119: if((ADC1>400)&&(ADC1<600))
   393  024D  1283               	bcf	3,5	;RP0=0, select bank0
   394  024E  0837               	movf	main@ADC1+1,w
   395  024F  3A80               	xorlw	128
   396  0250  00DF               	movwf	95
   397  0251  3081               	movlw	129
   398  0252  025F               	subwf	95,w
   399  0253  1D03               	skipz
   400  0254  2A57               	goto	u415
   401  0255  3091               	movlw	145
   402  0256  0236               	subwf	main@ADC1,w
   403  0257                     u415:	
   404  0257  1C03               	skipc
   405  0258  2A6A               	goto	l735
   406  0259  1283               	bcf	3,5	;RP0=0, select bank0
   407  025A  0837               	movf	main@ADC1+1,w
   408  025B  3A80               	xorlw	128
   409  025C  00DF               	movwf	95
   410  025D  3082               	movlw	130
   411  025E  025F               	subwf	95,w
   412  025F  1D03               	skipz
   413  0260  2A63               	goto	u425
   414  0261  3058               	movlw	88
   415  0262  0236               	subwf	main@ADC1,w
   416  0263                     u425:	
   417  0263  1803               	skipnc
   418  0264  2A6A               	goto	l735
   419                           
   420                           ;adctimer.c: 120: {
   421                           ;adctimer.c: 122: TIMERM = 3140;
   422  0265  3044               	movlw	68
   423  0266  1283               	bcf	3,5	;RP0=0, select bank0
   424  0267  00B2               	movwf	main@TIMERM
   425  0268  300C               	movlw	12
   426  0269  00B3               	movwf	main@TIMERM+1
   427  026A                     l735:	
   428                           
   429                           ;adctimer.c: 123: }
   430                           ;adctimer.c: 124: if((ADC1>600)&&(ADC1<800))
   431  026A  1283               	bcf	3,5	;RP0=0, select bank0
   432  026B  0837               	movf	main@ADC1+1,w
   433  026C  3A80               	xorlw	128
   434  026D  00DF               	movwf	95
   435  026E  3082               	movlw	130
   436  026F  025F               	subwf	95,w
   437  0270  1D03               	skipz
   438  0271  2A74               	goto	u435
   439  0272  3059               	movlw	89
   440  0273  0236               	subwf	main@ADC1,w
   441  0274                     u435:	
   442  0274  1C03               	skipc
   443  0275  2A87               	goto	l741
   444  0276  1283               	bcf	3,5	;RP0=0, select bank0
   445  0277  0837               	movf	main@ADC1+1,w
   446  0278  3A80               	xorlw	128
   447  0279  00DF               	movwf	95
   448  027A  3083               	movlw	131
   449  027B  025F               	subwf	95,w
   450  027C  1D03               	skipz
   451  027D  2A80               	goto	u445
   452  027E  3020               	movlw	32
   453  027F  0236               	subwf	main@ADC1,w
   454  0280                     u445:	
   455  0280  1803               	skipnc
   456  0281  2A87               	goto	l741
   457                           
   458                           ;adctimer.c: 125: {
   459                           ;adctimer.c: 126: TIMERM = 4125;
   460  0282  301D               	movlw	29
   461  0283  1283               	bcf	3,5	;RP0=0, select bank0
   462  0284  00B2               	movwf	main@TIMERM
   463  0285  3010               	movlw	16
   464  0286  00B3               	movwf	main@TIMERM+1
   465  0287                     l741:	
   466                           
   467                           ;adctimer.c: 127: }
   468                           ;adctimer.c: 128: if((ADC1>800)&&(ADC1<=1024))
   469  0287  1283               	bcf	3,5	;RP0=0, select bank0
   470  0288  0837               	movf	main@ADC1+1,w
   471  0289  3A80               	xorlw	128
   472  028A  00DF               	movwf	95
   473  028B  3083               	movlw	131
   474  028C  025F               	subwf	95,w
   475  028D  1D03               	skipz
   476  028E  2A91               	goto	u455
   477  028F  3021               	movlw	33
   478  0290  0236               	subwf	main@ADC1,w
   479  0291                     u455:	
   480  0291  1C03               	skipc
   481  0292  2AA4               	goto	l747
   482  0293  1283               	bcf	3,5	;RP0=0, select bank0
   483  0294  0837               	movf	main@ADC1+1,w
   484  0295  3A80               	xorlw	128
   485  0296  00DF               	movwf	95
   486  0297  3084               	movlw	132
   487  0298  025F               	subwf	95,w
   488  0299  1D03               	skipz
   489  029A  2A9D               	goto	u465
   490  029B  3001               	movlw	1
   491  029C  0236               	subwf	main@ADC1,w
   492  029D                     u465:	
   493  029D  1803               	skipnc
   494  029E  2AA4               	goto	l747
   495                           
   496                           ;adctimer.c: 129: {
   497                           ;adctimer.c: 130: TIMERM = 5220;
   498  029F  3064               	movlw	100
   499  02A0  1283               	bcf	3,5	;RP0=0, select bank0
   500  02A1  00B2               	movwf	main@TIMERM
   501  02A2  3014               	movlw	20
   502  02A3  00B3               	movwf	main@TIMERM+1
   503  02A4                     l747:	
   504                           
   505                           ;adctimer.c: 131: }
   506                           ;adctimer.c: 135: if((ADC2>=0)&&(ADC2<100))
   507  02A4  1283               	bcf	3,5	;RP0=0, select bank0
   508  02A5  1BB9               	btfsc	main@ADC2+1,7
   509  02A6  2AB7               	goto	l753
   510  02A7  0839               	movf	main@ADC2+1,w
   511  02A8  3A80               	xorlw	128
   512  02A9  00DF               	movwf	95
   513  02AA  3080               	movlw	128
   514  02AB  025F               	subwf	95,w
   515  02AC  1D03               	skipz
   516  02AD  2AB0               	goto	u485
   517  02AE  3064               	movlw	100
   518  02AF  0238               	subwf	main@ADC2,w
   519  02B0                     u485:	
   520  02B0  1803               	skipnc
   521  02B1  2AB7               	goto	l753
   522                           
   523                           ;adctimer.c: 136: {
   524                           ;adctimer.c: 140: TIMERS = 15;
   525  02B2  300F               	movlw	15
   526  02B3  1283               	bcf	3,5	;RP0=0, select bank0
   527  02B4  00B4               	movwf	main@TIMERS
   528  02B5  3000               	movlw	0
   529  02B6  00B5               	movwf	main@TIMERS+1
   530  02B7                     l753:	
   531                           
   532                           ;adctimer.c: 141: }
   533                           ;adctimer.c: 142: if((ADC2>100)&&(ADC2<200))
   534  02B7  1283               	bcf	3,5	;RP0=0, select bank0
   535  02B8  0839               	movf	main@ADC2+1,w
   536  02B9  3A80               	xorlw	128
   537  02BA  00DF               	movwf	95
   538  02BB  3080               	movlw	128
   539  02BC  025F               	subwf	95,w
   540  02BD  1D03               	skipz
   541  02BE  2AC1               	goto	u495
   542  02BF  3065               	movlw	101
   543  02C0  0238               	subwf	main@ADC2,w
   544  02C1                     u495:	
   545  02C1  1C03               	skipc
   546  02C2  2AD4               	goto	l759
   547  02C3  1283               	bcf	3,5	;RP0=0, select bank0
   548  02C4  0839               	movf	main@ADC2+1,w
   549  02C5  3A80               	xorlw	128
   550  02C6  00DF               	movwf	95
   551  02C7  3080               	movlw	128
   552  02C8  025F               	subwf	95,w
   553  02C9  1D03               	skipz
   554  02CA  2ACD               	goto	u505
   555  02CB  30C8               	movlw	200
   556  02CC  0238               	subwf	main@ADC2,w
   557  02CD                     u505:	
   558  02CD  1803               	skipnc
   559  02CE  2AD4               	goto	l759
   560                           
   561                           ;adctimer.c: 143: {
   562                           ;adctimer.c: 145: TIMERS = 30;
   563  02CF  301E               	movlw	30
   564  02D0  1283               	bcf	3,5	;RP0=0, select bank0
   565  02D1  00B4               	movwf	main@TIMERS
   566  02D2  3000               	movlw	0
   567  02D3  00B5               	movwf	main@TIMERS+1
   568  02D4                     l759:	
   569                           
   570                           ;adctimer.c: 146: }
   571                           ;adctimer.c: 147: if((ADC2>200)&&(ADC2<300))
   572  02D4  1283               	bcf	3,5	;RP0=0, select bank0
   573  02D5  0839               	movf	main@ADC2+1,w
   574  02D6  3A80               	xorlw	128
   575  02D7  00DF               	movwf	95
   576  02D8  3080               	movlw	128
   577  02D9  025F               	subwf	95,w
   578  02DA  1D03               	skipz
   579  02DB  2ADE               	goto	u515
   580  02DC  30C9               	movlw	201
   581  02DD  0238               	subwf	main@ADC2,w
   582  02DE                     u515:	
   583  02DE  1C03               	skipc
   584  02DF  2AF1               	goto	l765
   585  02E0  1283               	bcf	3,5	;RP0=0, select bank0
   586  02E1  0839               	movf	main@ADC2+1,w
   587  02E2  3A80               	xorlw	128
   588  02E3  00DF               	movwf	95
   589  02E4  3081               	movlw	129
   590  02E5  025F               	subwf	95,w
   591  02E6  1D03               	skipz
   592  02E7  2AEA               	goto	u525
   593  02E8  302C               	movlw	44
   594  02E9  0238               	subwf	main@ADC2,w
   595  02EA                     u525:	
   596  02EA  1803               	skipnc
   597  02EB  2AF1               	goto	l765
   598                           
   599                           ;adctimer.c: 148: {
   600                           ;adctimer.c: 151: TIMERS = 45;
   601  02EC  302D               	movlw	45
   602  02ED  1283               	bcf	3,5	;RP0=0, select bank0
   603  02EE  00B4               	movwf	main@TIMERS
   604  02EF  3000               	movlw	0
   605  02F0  00B5               	movwf	main@TIMERS+1
   606  02F1                     l765:	
   607                           
   608                           ;adctimer.c: 152: }
   609                           ;adctimer.c: 153: if((ADC2>300)&&(ADC2<400))
   610  02F1  1283               	bcf	3,5	;RP0=0, select bank0
   611  02F2  0839               	movf	main@ADC2+1,w
   612  02F3  3A80               	xorlw	128
   613  02F4  00DF               	movwf	95
   614  02F5  3081               	movlw	129
   615  02F6  025F               	subwf	95,w
   616  02F7  1D03               	skipz
   617  02F8  2AFB               	goto	u535
   618  02F9  302D               	movlw	45
   619  02FA  0238               	subwf	main@ADC2,w
   620  02FB                     u535:	
   621  02FB  1C03               	skipc
   622  02FC  2B0E               	goto	l771
   623  02FD  1283               	bcf	3,5	;RP0=0, select bank0
   624  02FE  0839               	movf	main@ADC2+1,w
   625  02FF  3A80               	xorlw	128
   626  0300  00DF               	movwf	95
   627  0301  3081               	movlw	129
   628  0302  025F               	subwf	95,w
   629  0303  1D03               	skipz
   630  0304  2B07               	goto	u545
   631  0305  3090               	movlw	144
   632  0306  0238               	subwf	main@ADC2,w
   633  0307                     u545:	
   634  0307  1803               	skipnc
   635  0308  2B0E               	goto	l771
   636                           
   637                           ;adctimer.c: 154: {
   638                           ;adctimer.c: 155: TIMERS = 60;
   639  0309  303C               	movlw	60
   640  030A  1283               	bcf	3,5	;RP0=0, select bank0
   641  030B  00B4               	movwf	main@TIMERS
   642  030C  3000               	movlw	0
   643  030D  00B5               	movwf	main@TIMERS+1
   644  030E                     l771:	
   645                           
   646                           ;adctimer.c: 156: }
   647                           ;adctimer.c: 157: if((ADC2>400)&&(ADC2<500))
   648  030E  1283               	bcf	3,5	;RP0=0, select bank0
   649  030F  0839               	movf	main@ADC2+1,w
   650  0310  3A80               	xorlw	128
   651  0311  00DF               	movwf	95
   652  0312  3081               	movlw	129
   653  0313  025F               	subwf	95,w
   654  0314  1D03               	skipz
   655  0315  2B18               	goto	u555
   656  0316  3091               	movlw	145
   657  0317  0238               	subwf	main@ADC2,w
   658  0318                     u555:	
   659  0318  1C03               	skipc
   660  0319  2B2B               	goto	l777
   661  031A  1283               	bcf	3,5	;RP0=0, select bank0
   662  031B  0839               	movf	main@ADC2+1,w
   663  031C  3A80               	xorlw	128
   664  031D  00DF               	movwf	95
   665  031E  3081               	movlw	129
   666  031F  025F               	subwf	95,w
   667  0320  1D03               	skipz
   668  0321  2B24               	goto	u565
   669  0322  30F4               	movlw	244
   670  0323  0238               	subwf	main@ADC2,w
   671  0324                     u565:	
   672  0324  1803               	skipnc
   673  0325  2B2B               	goto	l777
   674                           
   675                           ;adctimer.c: 158: {
   676                           ;adctimer.c: 159: TIMERS = 75;
   677  0326  304B               	movlw	75
   678  0327  1283               	bcf	3,5	;RP0=0, select bank0
   679  0328  00B4               	movwf	main@TIMERS
   680  0329  3000               	movlw	0
   681  032A  00B5               	movwf	main@TIMERS+1
   682  032B                     l777:	
   683                           
   684                           ;adctimer.c: 160: }
   685                           ;adctimer.c: 161: if((ADC2>500)&&(ADC2<600))
   686  032B  1283               	bcf	3,5	;RP0=0, select bank0
   687  032C  0839               	movf	main@ADC2+1,w
   688  032D  3A80               	xorlw	128
   689  032E  00DF               	movwf	95
   690  032F  3081               	movlw	129
   691  0330  025F               	subwf	95,w
   692  0331  1D03               	skipz
   693  0332  2B35               	goto	u575
   694  0333  30F5               	movlw	245
   695  0334  0238               	subwf	main@ADC2,w
   696  0335                     u575:	
   697  0335  1C03               	skipc
   698  0336  2B48               	goto	l783
   699  0337  1283               	bcf	3,5	;RP0=0, select bank0
   700  0338  0839               	movf	main@ADC2+1,w
   701  0339  3A80               	xorlw	128
   702  033A  00DF               	movwf	95
   703  033B  3082               	movlw	130
   704  033C  025F               	subwf	95,w
   705  033D  1D03               	skipz
   706  033E  2B41               	goto	u585
   707  033F  3058               	movlw	88
   708  0340  0238               	subwf	main@ADC2,w
   709  0341                     u585:	
   710  0341  1803               	skipnc
   711  0342  2B48               	goto	l783
   712                           
   713                           ;adctimer.c: 162: {
   714                           ;adctimer.c: 163: TIMERS = 90;
   715  0343  305A               	movlw	90
   716  0344  1283               	bcf	3,5	;RP0=0, select bank0
   717  0345  00B4               	movwf	main@TIMERS
   718  0346  3000               	movlw	0
   719  0347  00B5               	movwf	main@TIMERS+1
   720  0348                     l783:	
   721                           
   722                           ;adctimer.c: 164: }
   723                           ;adctimer.c: 165: if((ADC2>600)&&(ADC2<700))
   724  0348  1283               	bcf	3,5	;RP0=0, select bank0
   725  0349  0839               	movf	main@ADC2+1,w
   726  034A  3A80               	xorlw	128
   727  034B  00DF               	movwf	95
   728  034C  3082               	movlw	130
   729  034D  025F               	subwf	95,w
   730  034E  1D03               	skipz
   731  034F  2B52               	goto	u595
   732  0350  3059               	movlw	89
   733  0351  0238               	subwf	main@ADC2,w
   734  0352                     u595:	
   735  0352  1C03               	skipc
   736  0353  2B65               	goto	l789
   737  0354  1283               	bcf	3,5	;RP0=0, select bank0
   738  0355  0839               	movf	main@ADC2+1,w
   739  0356  3A80               	xorlw	128
   740  0357  00DF               	movwf	95
   741  0358  3082               	movlw	130
   742  0359  025F               	subwf	95,w
   743  035A  1D03               	skipz
   744  035B  2B5E               	goto	u605
   745  035C  30BC               	movlw	188
   746  035D  0238               	subwf	main@ADC2,w
   747  035E                     u605:	
   748  035E  1803               	skipnc
   749  035F  2B65               	goto	l789
   750                           
   751                           ;adctimer.c: 166: {
   752                           ;adctimer.c: 167: TIMERS = 105;
   753  0360  3069               	movlw	105
   754  0361  1283               	bcf	3,5	;RP0=0, select bank0
   755  0362  00B4               	movwf	main@TIMERS
   756  0363  3000               	movlw	0
   757  0364  00B5               	movwf	main@TIMERS+1
   758  0365                     l789:	
   759                           
   760                           ;adctimer.c: 168: }
   761                           ;adctimer.c: 169: if((ADC2>700)&&(ADC2<800))
   762  0365  1283               	bcf	3,5	;RP0=0, select bank0
   763  0366  0839               	movf	main@ADC2+1,w
   764  0367  3A80               	xorlw	128
   765  0368  00DF               	movwf	95
   766  0369  3082               	movlw	130
   767  036A  025F               	subwf	95,w
   768  036B  1D03               	skipz
   769  036C  2B6F               	goto	u615
   770  036D  30BD               	movlw	189
   771  036E  0238               	subwf	main@ADC2,w
   772  036F                     u615:	
   773  036F  1C03               	skipc
   774  0370  2B82               	goto	l795
   775  0371  1283               	bcf	3,5	;RP0=0, select bank0
   776  0372  0839               	movf	main@ADC2+1,w
   777  0373  3A80               	xorlw	128
   778  0374  00DF               	movwf	95
   779  0375  3083               	movlw	131
   780  0376  025F               	subwf	95,w
   781  0377  1D03               	skipz
   782  0378  2B7B               	goto	u625
   783  0379  3020               	movlw	32
   784  037A  0238               	subwf	main@ADC2,w
   785  037B                     u625:	
   786  037B  1803               	skipnc
   787  037C  2B82               	goto	l795
   788                           
   789                           ;adctimer.c: 170: {
   790                           ;adctimer.c: 171: TIMERS = 120;
   791  037D  3078               	movlw	120
   792  037E  1283               	bcf	3,5	;RP0=0, select bank0
   793  037F  00B4               	movwf	main@TIMERS
   794  0380  3000               	movlw	0
   795  0381  00B5               	movwf	main@TIMERS+1
   796  0382                     l795:	
   797                           
   798                           ;adctimer.c: 172: }
   799                           ;adctimer.c: 173: if((ADC2>800)&&(ADC2<900))
   800  0382  1283               	bcf	3,5	;RP0=0, select bank0
   801  0383  0839               	movf	main@ADC2+1,w
   802  0384  3A80               	xorlw	128
   803  0385  00DF               	movwf	95
   804  0386  3083               	movlw	131
   805  0387  025F               	subwf	95,w
   806  0388  1D03               	skipz
   807  0389  2B8C               	goto	u635
   808  038A  3021               	movlw	33
   809  038B  0238               	subwf	main@ADC2,w
   810  038C                     u635:	
   811  038C  1C03               	skipc
   812  038D  2B9F               	goto	l801
   813  038E  1283               	bcf	3,5	;RP0=0, select bank0
   814  038F  0839               	movf	main@ADC2+1,w
   815  0390  3A80               	xorlw	128
   816  0391  00DF               	movwf	95
   817  0392  3083               	movlw	131
   818  0393  025F               	subwf	95,w
   819  0394  1D03               	skipz
   820  0395  2B98               	goto	u645
   821  0396  3084               	movlw	132
   822  0397  0238               	subwf	main@ADC2,w
   823  0398                     u645:	
   824  0398  1803               	skipnc
   825  0399  2B9F               	goto	l801
   826                           
   827                           ;adctimer.c: 174: {
   828                           ;adctimer.c: 175: TIMERS = 135;
   829  039A  3087               	movlw	135
   830  039B  1283               	bcf	3,5	;RP0=0, select bank0
   831  039C  00B4               	movwf	main@TIMERS
   832  039D  3000               	movlw	0
   833  039E  00B5               	movwf	main@TIMERS+1
   834  039F                     l801:	
   835                           
   836                           ;adctimer.c: 176: }
   837                           ;adctimer.c: 177: if((ADC2>900)&&(ADC2<=1024))
   838  039F  1283               	bcf	3,5	;RP0=0, select bank0
   839  03A0  0839               	movf	main@ADC2+1,w
   840  03A1  3A80               	xorlw	128
   841  03A2  00DF               	movwf	95
   842  03A3  3083               	movlw	131
   843  03A4  025F               	subwf	95,w
   844  03A5  1D03               	skipz
   845  03A6  2BA9               	goto	u655
   846  03A7  3085               	movlw	133
   847  03A8  0238               	subwf	main@ADC2,w
   848  03A9                     u655:	
   849  03A9  1C03               	skipc
   850  03AA  2BBC               	goto	l807
   851  03AB  1283               	bcf	3,5	;RP0=0, select bank0
   852  03AC  0839               	movf	main@ADC2+1,w
   853  03AD  3A80               	xorlw	128
   854  03AE  00DF               	movwf	95
   855  03AF  3084               	movlw	132
   856  03B0  025F               	subwf	95,w
   857  03B1  1D03               	skipz
   858  03B2  2BB5               	goto	u665
   859  03B3  3001               	movlw	1
   860  03B4  0238               	subwf	main@ADC2,w
   861  03B5                     u665:	
   862  03B5  1803               	skipnc
   863  03B6  2BBC               	goto	l807
   864                           
   865                           ;adctimer.c: 178: {
   866                           ;adctimer.c: 179: TIMERS = 150;
   867  03B7  3096               	movlw	150
   868  03B8  1283               	bcf	3,5	;RP0=0, select bank0
   869  03B9  00B4               	movwf	main@TIMERS
   870  03BA  3000               	movlw	0
   871  03BB  00B5               	movwf	main@TIMERS+1
   872  03BC                     l807:	
   873                           
   874                           ;adctimer.c: 180: }
   875                           ;adctimer.c: 183: if(T0IF)
   876  03BC  1D0B               	btfss	11,2	;volatile
   877  03BD  2A10               	goto	l713
   878                           
   879                           ;adctimer.c: 184: {
   880                           ;adctimer.c: 185: T0IF = 0;
   881  03BE  110B               	bcf	11,2	;volatile
   882                           
   883                           ;adctimer.c: 187: if(count<TIMERM)
   884  03BF  1283               	bcf	3,5	;RP0=0, select bank0
   885  03C0  082D               	movf	main@count+1,w
   886  03C1  3A80               	xorlw	128
   887  03C2  00A5               	movwf	??_main
   888  03C3  0833               	movf	main@TIMERM+1,w
   889  03C4  3A80               	xorlw	128
   890  03C5  0225               	subwf	??_main,w
   891  03C6  1D03               	skipz
   892  03C7  2BCA               	goto	u685
   893  03C8  0832               	movf	main@TIMERM,w
   894  03C9  022C               	subwf	main@count,w
   895  03CA                     u685:	
   896  03CA  1803               	skipnc
   897  03CB  2BDE               	goto	l71
   898                           
   899                           ;adctimer.c: 188: {
   900                           ;adctimer.c: 189: count++;
   901  03CC  3001               	movlw	1
   902  03CD  1283               	bcf	3,5	;RP0=0, select bank0
   903  03CE  07AC               	addwf	main@count,f
   904  03CF  1803               	skipnc
   905  03D0  0AAD               	incf	main@count+1,f
   906  03D1  3000               	movlw	0
   907  03D2  07AD               	addwf	main@count+1,f
   908                           
   909                           ;adctimer.c: 190: if(ledf == 0)
   910  03D3  0830               	movf	main@ledf,w
   911  03D4  0431               	iorwf	main@ledf+1,w
   912  03D5  1D03               	btfss	3,2
   913  03D6  2BE9               	goto	l825
   914                           
   915                           ;adctimer.c: 191: {
   916                           ;adctimer.c: 192: GP2 = 1;
   917  03D7  1505               	bsf	5,2	;volatile
   918                           
   919                           ;adctimer.c: 193: GP0 = 1;
   920  03D8  1405               	bsf	5,0	;volatile
   921                           
   922                           ;adctimer.c: 194: ledf = 1;
   923  03D9  3001               	movlw	1
   924  03DA  00B0               	movwf	main@ledf
   925  03DB  3000               	movlw	0
   926  03DC  00B1               	movwf	main@ledf+1
   927                           
   928                           ;adctimer.c: 195: }
   929                           ;adctimer.c: 198: }
   930  03DD  2BE9               	goto	l825
   931  03DE                     l71:	
   932                           
   933                           ;adctimer.c: 199: else
   934                           ;adctimer.c: 201: {
   935                           ;adctimer.c: 202: GP2 = 0;
   936  03DE  1283               	bcf	3,5	;RP0=0, select bank0
   937  03DF  1105               	bcf	5,2	;volatile
   938                           
   939                           ;adctimer.c: 203: GP0 = 0;
   940  03E0  1005               	bcf	5,0	;volatile
   941                           
   942                           ;adctimer.c: 205: ledf = 0;
   943  03E1  01B0               	clrf	main@ledf
   944  03E2  01B1               	clrf	main@ledf+1
   945                           
   946                           ;adctimer.c: 206: counts++;
   947  03E3  3001               	movlw	1
   948  03E4  07AE               	addwf	main@counts,f
   949  03E5  1803               	skipnc
   950  03E6  0AAF               	incf	main@counts+1,f
   951  03E7  3000               	movlw	0
   952  03E8  07AF               	addwf	main@counts+1,f
   953  03E9                     l825:	
   954                           
   955                           ;adctimer.c: 207: }
   956                           ;adctimer.c: 209: if(counts >=TIMERS)
   957  03E9  082F               	movf	main@counts+1,w
   958  03EA  3A80               	xorlw	128
   959  03EB  00A5               	movwf	??_main
   960  03EC  0835               	movf	main@TIMERS+1,w
   961  03ED  3A80               	xorlw	128
   962  03EE  0225               	subwf	??_main,w
   963  03EF  1D03               	skipz
   964  03F0  2BF3               	goto	u705
   965  03F1  0834               	movf	main@TIMERS,w
   966  03F2  022E               	subwf	main@counts,w
   967  03F3                     u705:	
   968  03F3  1C03               	skipc
   969  03F4  2A10               	goto	l713
   970                           
   971                           ;adctimer.c: 210: {
   972                           ;adctimer.c: 211: count = 0;
   973  03F5  1283               	bcf	3,5	;RP0=0, select bank0
   974  03F6  01AC               	clrf	main@count
   975  03F7  01AD               	clrf	main@count+1
   976                           
   977                           ;adctimer.c: 212: counts = 0;
   978  03F8  01AE               	clrf	main@counts
   979  03F9  01AF               	clrf	main@counts+1
   980                           
   981                           ;adctimer.c: 213: off = 0;
   982  03FA  01AA               	clrf	main@off
   983  03FB  01AB               	clrf	main@off+1
   984  03FC  2A10               	goto	l713
   985  03FD                     __end_of_main:	
   986                           
   987                           	psect	text1
   988  01BA                     __ptext1:	
   989 ;; *************** function _GetADCValue *****************
   990 ;; Defined at:
   991 ;;		line 36 in file "adctimer.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;  Channel         1    wreg     unsigned char 
   994 ;; Auto vars:     Size  Location     Type
   995 ;;  Channel         1    4[BANK0 ] unsigned char 
   996 ;; Return value:  Size  Location     Type
   997 ;;                  2    0[BANK0 ] unsigned int 
   998 ;; Registers used:
   999 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMMON   BANK0
  1005 ;;      Params:         0       2
  1006 ;;      Locals:         0       1
  1007 ;;      Temps:          0       2
  1008 ;;      Totals:         0       5
  1009 ;;Total ram usage:        5 bytes
  1010 ;; Hardware stack levels used:    1
  1011 ;; This function calls:
  1012 ;;		Nothing
  1013 ;; This function is called by:
  1014 ;;		_main
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           
  1019                           ;psect for function _GetADCValue
  1020  01BA                     _GetADCValue:	
  1021                           
  1022                           ;incstack = 0
  1023                           ; Regs used in _GetADCValue: [wreg-fsr0h+status,2+status,0]
  1024                           ;GetADCValue@Channel stored from wreg
  1025  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1026  01BB  00A4               	movwf	GetADCValue@Channel
  1027                           
  1028                           ;adctimer.c: 38: ADCON0 &= 0xf3;
  1029  01BC  30F3               	movlw	243
  1030  01BD  00A2               	movwf	??_GetADCValue
  1031  01BE  0822               	movf	??_GetADCValue,w
  1032  01BF  059F               	andwf	31,f	;volatile
  1033                           
  1034                           ;adctimer.c: 40: switch(Channel)
  1035  01C0  29CB               	goto	l693
  1036  01C1                     l42:	
  1037                           ;adctimer.c: 41: {
  1038                           ;adctimer.c: 43: case 1<<1: ADCON0 |= 0x04; break;
  1039                           
  1040  01C1  151F               	bsf	31,2	;volatile
  1041  01C2  29D3               	goto	l695
  1042  01C3                     l685:	
  1043                           ;adctimer.c: 45: case 1<<3: ADCON0 |= 0x0c; break;
  1044                           
  1045  01C3  300C               	movlw	12
  1046  01C4  00A2               	movwf	??_GetADCValue
  1047  01C5  0822               	movf	??_GetADCValue,w
  1048  01C6  049F               	iorwf	31,f	;volatile
  1049  01C7  29D3               	goto	l695
  1050  01C8                     l687:	
  1051                           ;adctimer.c: 47: default: return 0;
  1052                           
  1053  01C8  01A0               	clrf	?_GetADCValue
  1054  01C9  01A1               	clrf	?_GetADCValue+1
  1055  01CA  0008               	return
  1056  01CB                     l693:	
  1057                           ;adctimer.c: 48: }
  1058                           
  1059  01CB  0824               	movf	GetADCValue@Channel,w
  1060                           
  1061                           ; Switch size 1, requested type "space"
  1062                           ; Number of cases is 2, Range of values is 2 to 8
  1063                           ; switch strategies available:
  1064                           ; Name         Instructions Cycles
  1065                           ; simple_byte            7     4 (average)
  1066                           ; direct_byte           16     9 (fixed)
  1067                           ; jumptable            263     9 (fixed)
  1068                           ;	Chosen strategy is simple_byte
  1069  01CC  3A02               	xorlw	2	; case 2
  1070  01CD  1903               	skipnz
  1071  01CE  29C1               	goto	l42
  1072  01CF  3A0A               	xorlw	10	; case 8
  1073  01D0  1903               	skipnz
  1074  01D1  29C3               	goto	l685
  1075  01D2  29C8               	goto	l687
  1076  01D3                     l695:	
  1077                           
  1078                           ;adctimer.c: 50: _delay((unsigned long)((10)*(4000000/4000.0)));
  1079  01D3  300D               	movlw	13
  1080  01D4  00A3               	movwf	??_GetADCValue+1
  1081  01D5  30FB               	movlw	251
  1082  01D6  00A2               	movwf	??_GetADCValue
  1083  01D7                     u717:	
  1084  01D7  0BA2               	decfsz	??_GetADCValue,f
  1085  01D8  29D7               	goto	u717
  1086  01D9  0BA3               	decfsz	??_GetADCValue+1,f
  1087  01DA  29D7               	goto	u717
  1088  01DB  29DC               	nop2
  1089                           
  1090                           ;adctimer.c: 52: GO_nDONE = 1;
  1091  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1092  01DD  149F               	bsf	31,1	;volatile
  1093  01DE                     l47:	
  1094                           ;adctimer.c: 54: while(GO_nDONE);
  1095                           
  1096  01DE  189F               	btfsc	31,1	;volatile
  1097  01DF  29DE               	goto	l47
  1098                           
  1099                           ;adctimer.c: 56: return ((ADRESH<<8)+ADRESL);
  1100  01E0  081E               	movf	30,w	;volatile
  1101  01E1  00A1               	movwf	?_GetADCValue+1
  1102  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  1103  01E3  081E               	movf	30,w	;volatile
  1104  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1105  01E5  00A0               	movwf	?_GetADCValue
  1106  01E6  0008               	return
  1107  01E7                     __end_of_GetADCValue:	
  1108  005E                     btemp	set	94	;btemp
  1109  005E                     wtemp0	set	94


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     26      26

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_GetADCValue

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0     826
                                              5 BANK0     21    21      0
                        _GetADCValue
 ---------------------------------------------------------------------------------
 (1) _GetADCValue                                          5     3      2      22
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetADCValue

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E     1A      1A       4       41.9%
ABS                  0      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Dec 12 13:39:20 2017

            __CFG_CP$OFF 0000                       l42 01C1                       l47 01DE  
                     l71 03DE                      l801 039F                      l713 0210  
                    l723 0230                      l741 0287                      l807 03BC  
                    l735 026A                      l825 03E9                      l753 02B7  
                    l729 024D                      l771 030E                      l747 02A4  
                    l685 01C3                      l693 01CB                      l765 02F1  
                    l687 01C8                      l695 01D3                      l783 0348  
                    l759 02D4                      l777 032B                      l795 0382  
                    _GP0 0028                      l789 0365                      _GP2 002A  
                    u405 0246                      u415 0257                      u505 02CD  
                    u425 0263             __CFG_CPD$OFF 0000                      u515 02DE  
                    u435 0274                      u605 035E                      u525 02EA  
                    u445 0280                      u615 036F                      u535 02FB  
                    u455 0291                      u705 03F3                      u625 037B  
                    u545 0307                      u465 029D                      u385 0229  
                    u635 038C                      u555 0318                      u395 023A  
                    u717 01D7                      u645 0398                      u565 0324  
                    u485 02B0                      u655 03A9                      u575 0335  
                    u495 02C1                      u665 03B5                      u585 0341  
                    u595 0352                      u685 03CA                     _T0IF 005A  
                   _TMR0 0001                     _main 01E7                     btemp 005E  
          __CFG_BOREN$ON 0000              _GetADCValue 01BA                     start 0000  
                  ?_main 0020            __CFG_WDTE$OFF 0000                    _CMCON 0019  
                  _ANSEL 009F                    _VRCON 0099                    status 0003  
                  wtemp0 005E           __CFG_MCLRE$OFF 0000          __initialization 03FD  
           __end_of_main 03FD                   ??_main 0025                   _ADCON0 001F  
                 _ADRESH 001E                   _ADRESL 009E           __CFG_PWRTE$OFF 0000  
__end_of__initialization 03FD             ?_GetADCValue 0020               __pmaintext 01E7  
                _TRISIO0 0428                  _TRISIO1 0429                  _TRISIO2 042A  
                _TRISIO3 042B                  _TRISIO4 042C                  _TRISIO5 042D  
                __ptext1 01BA                  main@off 002A     end_of_initialization 03FD  
             main@TIMERM 0032               main@TIMERS 0034               main@counts 002E  
   __size_of_GetADCValue 002D       GetADCValue@Channel 0024      start_initialization 03FD  
              ___latbits 0000            __pcstackBANK0 0020                 _GO_nDONE 00F9  
              main@count 002C           main@ADC_value1 0028            __size_of_main 0216  
          ??_GetADCValue 0022                 main@ADC1 0036                 main@ADC2 0038  
               main@ledf 0030            main@ADC_value 0026      __end_of_GetADCValue 01E7  
             _OPTION_REG 0081        __CFG_FOSC$INTRCIO 0000  
