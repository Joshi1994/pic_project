Version 3.2 HI-TECH Software Intermediate Code
"3802 C:\Program Files\Microchip\xc8\v1.44\include\pic16f887.h
[v _INTF `Vb ~T0 @X0 0 e@89 ]
"122 newmain.c
[v _Monitor_Balance `(v ~T0 @X0 0 ef1`ui ]
"3798 C:\Program Files\Microchip\xc8\v1.44\include\pic16f887.h
[v _INTE `Vb ~T0 @X0 0 e@92 ]
"3920
[v _RB1 `Vb ~T0 @X0 0 e@49 ]
[p mainexit ]
[v F1637 `(v ~T0 @X0 1 tf1`ul ]
"153 C:\Program Files\Microchip\xc8\v1.44\include\pic.h
[v __delay `JF1637 ~T0 @X0 0 e ]
[p i __delay ]
"109 newmain.c
[v _PORT_Init `(v ~T0 @X0 0 ef ]
"105
[v _LCD_Init `(v ~T0 @X0 0 ef ]
"3922 C:\Program Files\Microchip\xc8\v1.44\include\pic16f887.h
[v _RB2 `Vb ~T0 @X0 0 e@50 ]
"3924
[v _RB3 `Vb ~T0 @X0 0 e@51 ]
"3926
[v _RB4 `Vb ~T0 @X0 0 e@52 ]
"3928
[v _RB5 `Vb ~T0 @X0 0 e@53 ]
"3988
[v _RE1 `Vb ~T0 @X0 0 e@73 ]
"3986
[v _RE0 `Vb ~T0 @X0 0 e@72 ]
"106 newmain.c
[v _LCD_DisplayString `(v ~T0 @X0 0 ef1`*Cuc ]
"103
[v _LCD_CmdWrite `(v ~T0 @X0 0 ef1`uc ]
"114
[v _buzzer `(v ~T0 @X0 0 ef1`ui ]
"107
[v _LCD_Clear `(v ~T0 @X0 0 ef ]
"117
[v _Write_EEPROM_Price `(v ~T0 @X0 0 ef4`uc`uc`uc`ui ]
"118
[v _Read_EEPROM `(ui ~T0 @X0 0 ef2`uc`uc ]
"119
[v _Read_EEPROM_Price `(ui ~T0 @X0 0 ef3`uc`uc`uc ]
"4118 C:\Program Files\Microchip\xc8\v1.44\include\pic16f887.h
[v _TRISA1 `Vb ~T0 @X0 0 e@1065 ]
"4116
[v _TRISA0 `Vb ~T0 @X0 0 e@1064 ]
"4126
[v _TRISA5 `Vb ~T0 @X0 0 e@1069 ]
"4144
[v _TRISB6 `Vb ~T0 @X0 0 e@1078 ]
"4146
[v _TRISB7 `Vb ~T0 @X0 0 e@1079 ]
"3904
[v _RA1 `Vb ~T0 @X0 0 e@41 ]
"120 newmain.c
[v _STOCK_EMPTY_ROUTINE `(v ~T0 @X0 0 ef ]
"3984 C:\Program Files\Microchip\xc8\v1.44\include\pic16f887.h
[v _RD7 `Vb ~T0 @X0 0 e@71 ]
"121 newmain.c
[v _Set_Channel `(v ~T0 @X0 0 ef1`ui ]
"3906 C:\Program Files\Microchip\xc8\v1.44\include\pic16f887.h
[v _RA2 `Vb ~T0 @X0 0 e@42 ]
"3980
[v _RD5 `Vb ~T0 @X0 0 e@69 ]
"3912
[v _RA5 `Vb ~T0 @X0 0 e@45 ]
"3952
[v _RC7 `Vb ~T0 @X0 0 e@63 ]
"3930
[v _RB6 `Vb ~T0 @X0 0 e@54 ]
"3948
[v _RC5 `Vb ~T0 @X0 0 e@61 ]
"3932
[v _RB7 `Vb ~T0 @X0 0 e@55 ]
"3976
[v _RD3 `Vb ~T0 @X0 0 e@67 ]
"3992
[v _RE3 `Vb ~T0 @X0 0 e@75 ]
"104 newmain.c
[v _LCD_DataWrite `(v ~T0 @X0 0 ef1`uc ]
"111
[v _display `(v ~T0 @X0 0 ef1`i ]
"112
[v _display_price `(v ~T0 @X0 0 ef1`i ]
"3910 C:\Program Files\Microchip\xc8\v1.44\include\pic16f887.h
[v _RA4 `Vb ~T0 @X0 0 e@44 ]
"124 newmain.c
[v _escprocess `(v ~T0 @X0 0 ef ]
"3982 C:\Program Files\Microchip\xc8\v1.44\include\pic16f887.h
[v _RD6 `Vb ~T0 @X0 0 e@70 ]
"3978
[v _RD4 `Vb ~T0 @X0 0 e@68 ]
"3950
[v _RC6 `Vb ~T0 @X0 0 e@62 ]
"3946
[v _RC4 `Vb ~T0 @X0 0 e@60 ]
"3974
[v _RD2 `Vb ~T0 @X0 0 e@66 ]
"116 newmain.c
[v _Write_EEPROM `(v ~T0 @X0 0 ef3`uc`uc`ui ]
"3908 C:\Program Files\Microchip\xc8\v1.44\include\pic16f887.h
[v _RA3 `Vb ~T0 @X0 0 e@43 ]
"3990
[v _RE2 `Vb ~T0 @X0 0 e@74 ]
"110 newmain.c
[v _displaypass `(v ~T0 @X0 0 ef1`i ]
"1414 C:\Program Files\Microchip\xc8\v1.44\include\pic16f887.h
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"1476
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"1538
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"1600
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
"1662
[v _TRISE `Vuc ~T0 @X0 0 e@137 ]
"226
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"288
[v _PORTC `Vuc ~T0 @X0 0 e@7 ]
"164
[v _PORTA `Vuc ~T0 @X0 0 e@5 ]
"350
[v _PORTD `Vuc ~T0 @X0 0 e@8 ]
"412
[v _PORTE `Vuc ~T0 @X0 0 e@9 ]
"1344
[v _OPTION_REG `Vuc ~T0 @X0 0 e@129 ]
"457
[v _INTCON `Vuc ~T0 @X0 0 e@11 ]
"3385
[v _ANSEL `Vuc ~T0 @X0 0 e@392 ]
"3447
[v _ANSELH `Vuc ~T0 @X0 0 e@393 ]
"2344
[v _WPUB `Vuc ~T0 @X0 0 e@149 ]
"2414
[v _IOCB `Vuc ~T0 @X0 0 e@150 ]
"1860
[v _OSCCON `Vuc ~T0 @X0 0 e@143 ]
"3914
[v _RA6 `Vb ~T0 @X0 0 e@46 ]
"3916
[v _RA7 `Vb ~T0 @X0 0 e@47 ]
"3938
[v _RC0 `Vb ~T0 @X0 0 e@56 ]
"3940
[v _RC1 `Vb ~T0 @X0 0 e@57 ]
"3942
[v _RC2 `Vb ~T0 @X0 0 e@58 ]
"3944
[v _RC3 `Vb ~T0 @X0 0 e@59 ]
"4128
[v _TRISA6 `Vb ~T0 @X0 0 e@1070 ]
"4130
[v _TRISA7 `Vb ~T0 @X0 0 e@1071 ]
"4148
[v _TRISC0 `Vb ~T0 @X0 0 e@1080 ]
"4150
[v _TRISC1 `Vb ~T0 @X0 0 e@1081 ]
"4152
[v _TRISC2 `Vb ~T0 @X0 0 e@1082 ]
"4154
[v _TRISC3 `Vb ~T0 @X0 0 e@1083 ]
"115 newmain.c
[v _LCD_BuildChar `(v ~T0 @X0 0 ef2`uc`*uc ]
"194 C:\Program Files\Microchip\xc8\v1.44\include\stdio.h
[v _sprintf `(i ~T0 @X0 0 e1v`*uc`*Cuc ]
"3972 C:\Program Files\Microchip\xc8\v1.44\include\pic16f887.h
[v _RD1 `Vb ~T0 @X0 0 e@65 ]
"114 C:\Program Files\Microchip\xc8\v1.44\include\eeprom_routines.h
[v _eeprom_write `(v ~T0 @X0 0 ef2`uc`uc ]
"115
[v _eeprom_read `(uc ~T0 @X0 0 ef1`uc ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f887.h: 50: extern volatile unsigned char INDF @ 0x000;
"52 C:\Program Files\Microchip\xc8\v1.44\include\pic16f887.h
[; ;pic16f887.h: 52: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f887.h: 57: extern volatile unsigned char TMR0 @ 0x001;
"59
[; ;pic16f887.h: 59: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f887.h: 64: extern volatile unsigned char PCL @ 0x002;
"66
[; ;pic16f887.h: 66: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f887.h: 71: extern volatile unsigned char STATUS @ 0x003;
"73
[; ;pic16f887.h: 73: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f887.h: 76: typedef union {
[; ;pic16f887.h: 77: struct {
[; ;pic16f887.h: 78: unsigned C :1;
[; ;pic16f887.h: 79: unsigned DC :1;
[; ;pic16f887.h: 80: unsigned Z :1;
[; ;pic16f887.h: 81: unsigned nPD :1;
[; ;pic16f887.h: 82: unsigned nTO :1;
[; ;pic16f887.h: 83: unsigned RP :2;
[; ;pic16f887.h: 84: unsigned IRP :1;
[; ;pic16f887.h: 85: };
[; ;pic16f887.h: 86: struct {
[; ;pic16f887.h: 87: unsigned :5;
[; ;pic16f887.h: 88: unsigned RP0 :1;
[; ;pic16f887.h: 89: unsigned RP1 :1;
[; ;pic16f887.h: 90: };
[; ;pic16f887.h: 91: struct {
[; ;pic16f887.h: 92: unsigned CARRY :1;
[; ;pic16f887.h: 93: unsigned :1;
[; ;pic16f887.h: 94: unsigned ZERO :1;
[; ;pic16f887.h: 95: };
[; ;pic16f887.h: 96: } STATUSbits_t;
[; ;pic16f887.h: 97: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f887.h: 157: extern volatile unsigned char FSR @ 0x004;
"159
[; ;pic16f887.h: 159: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f887.h: 164: extern volatile unsigned char PORTA @ 0x005;
"166
[; ;pic16f887.h: 166: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f887.h: 169: typedef union {
[; ;pic16f887.h: 170: struct {
[; ;pic16f887.h: 171: unsigned RA0 :1;
[; ;pic16f887.h: 172: unsigned RA1 :1;
[; ;pic16f887.h: 173: unsigned RA2 :1;
[; ;pic16f887.h: 174: unsigned RA3 :1;
[; ;pic16f887.h: 175: unsigned RA4 :1;
[; ;pic16f887.h: 176: unsigned RA5 :1;
[; ;pic16f887.h: 177: unsigned RA6 :1;
[; ;pic16f887.h: 178: unsigned RA7 :1;
[; ;pic16f887.h: 179: };
[; ;pic16f887.h: 180: } PORTAbits_t;
[; ;pic16f887.h: 181: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f887.h: 226: extern volatile unsigned char PORTB @ 0x006;
"228
[; ;pic16f887.h: 228: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f887.h: 231: typedef union {
[; ;pic16f887.h: 232: struct {
[; ;pic16f887.h: 233: unsigned RB0 :1;
[; ;pic16f887.h: 234: unsigned RB1 :1;
[; ;pic16f887.h: 235: unsigned RB2 :1;
[; ;pic16f887.h: 236: unsigned RB3 :1;
[; ;pic16f887.h: 237: unsigned RB4 :1;
[; ;pic16f887.h: 238: unsigned RB5 :1;
[; ;pic16f887.h: 239: unsigned RB6 :1;
[; ;pic16f887.h: 240: unsigned RB7 :1;
[; ;pic16f887.h: 241: };
[; ;pic16f887.h: 242: } PORTBbits_t;
[; ;pic16f887.h: 243: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f887.h: 288: extern volatile unsigned char PORTC @ 0x007;
"290
[; ;pic16f887.h: 290: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f887.h: 293: typedef union {
[; ;pic16f887.h: 294: struct {
[; ;pic16f887.h: 295: unsigned RC0 :1;
[; ;pic16f887.h: 296: unsigned RC1 :1;
[; ;pic16f887.h: 297: unsigned RC2 :1;
[; ;pic16f887.h: 298: unsigned RC3 :1;
[; ;pic16f887.h: 299: unsigned RC4 :1;
[; ;pic16f887.h: 300: unsigned RC5 :1;
[; ;pic16f887.h: 301: unsigned RC6 :1;
[; ;pic16f887.h: 302: unsigned RC7 :1;
[; ;pic16f887.h: 303: };
[; ;pic16f887.h: 304: } PORTCbits_t;
[; ;pic16f887.h: 305: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f887.h: 350: extern volatile unsigned char PORTD @ 0x008;
"352
[; ;pic16f887.h: 352: asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
[; ;pic16f887.h: 355: typedef union {
[; ;pic16f887.h: 356: struct {
[; ;pic16f887.h: 357: unsigned RD0 :1;
[; ;pic16f887.h: 358: unsigned RD1 :1;
[; ;pic16f887.h: 359: unsigned RD2 :1;
[; ;pic16f887.h: 360: unsigned RD3 :1;
[; ;pic16f887.h: 361: unsigned RD4 :1;
[; ;pic16f887.h: 362: unsigned RD5 :1;
[; ;pic16f887.h: 363: unsigned RD6 :1;
[; ;pic16f887.h: 364: unsigned RD7 :1;
[; ;pic16f887.h: 365: };
[; ;pic16f887.h: 366: } PORTDbits_t;
[; ;pic16f887.h: 367: extern volatile PORTDbits_t PORTDbits @ 0x008;
[; ;pic16f887.h: 412: extern volatile unsigned char PORTE @ 0x009;
"414
[; ;pic16f887.h: 414: asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
[; ;pic16f887.h: 417: typedef union {
[; ;pic16f887.h: 418: struct {
[; ;pic16f887.h: 419: unsigned RE0 :1;
[; ;pic16f887.h: 420: unsigned RE1 :1;
[; ;pic16f887.h: 421: unsigned RE2 :1;
[; ;pic16f887.h: 422: unsigned RE3 :1;
[; ;pic16f887.h: 423: };
[; ;pic16f887.h: 424: } PORTEbits_t;
[; ;pic16f887.h: 425: extern volatile PORTEbits_t PORTEbits @ 0x009;
[; ;pic16f887.h: 450: extern volatile unsigned char PCLATH @ 0x00A;
"452
[; ;pic16f887.h: 452: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f887.h: 457: extern volatile unsigned char INTCON @ 0x00B;
"459
[; ;pic16f887.h: 459: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f887.h: 462: typedef union {
[; ;pic16f887.h: 463: struct {
[; ;pic16f887.h: 464: unsigned RBIF :1;
[; ;pic16f887.h: 465: unsigned INTF :1;
[; ;pic16f887.h: 466: unsigned T0IF :1;
[; ;pic16f887.h: 467: unsigned RBIE :1;
[; ;pic16f887.h: 468: unsigned INTE :1;
[; ;pic16f887.h: 469: unsigned T0IE :1;
[; ;pic16f887.h: 470: unsigned PEIE :1;
[; ;pic16f887.h: 471: unsigned GIE :1;
[; ;pic16f887.h: 472: };
[; ;pic16f887.h: 473: struct {
[; ;pic16f887.h: 474: unsigned :2;
[; ;pic16f887.h: 475: unsigned TMR0IF :1;
[; ;pic16f887.h: 476: unsigned :2;
[; ;pic16f887.h: 477: unsigned TMR0IE :1;
[; ;pic16f887.h: 478: };
[; ;pic16f887.h: 479: } INTCONbits_t;
[; ;pic16f887.h: 480: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f887.h: 535: extern volatile unsigned char PIR1 @ 0x00C;
"537
[; ;pic16f887.h: 537: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f887.h: 540: typedef union {
[; ;pic16f887.h: 541: struct {
[; ;pic16f887.h: 542: unsigned TMR1IF :1;
[; ;pic16f887.h: 543: unsigned TMR2IF :1;
[; ;pic16f887.h: 544: unsigned CCP1IF :1;
[; ;pic16f887.h: 545: unsigned SSPIF :1;
[; ;pic16f887.h: 546: unsigned TXIF :1;
[; ;pic16f887.h: 547: unsigned RCIF :1;
[; ;pic16f887.h: 548: unsigned ADIF :1;
[; ;pic16f887.h: 549: };
[; ;pic16f887.h: 550: } PIR1bits_t;
[; ;pic16f887.h: 551: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f887.h: 591: extern volatile unsigned char PIR2 @ 0x00D;
"593
[; ;pic16f887.h: 593: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f887.h: 596: typedef union {
[; ;pic16f887.h: 597: struct {
[; ;pic16f887.h: 598: unsigned CCP2IF :1;
[; ;pic16f887.h: 599: unsigned :1;
[; ;pic16f887.h: 600: unsigned ULPWUIF :1;
[; ;pic16f887.h: 601: unsigned BCLIF :1;
[; ;pic16f887.h: 602: unsigned EEIF :1;
[; ;pic16f887.h: 603: unsigned C1IF :1;
[; ;pic16f887.h: 604: unsigned C2IF :1;
[; ;pic16f887.h: 605: unsigned OSFIF :1;
[; ;pic16f887.h: 606: };
[; ;pic16f887.h: 607: } PIR2bits_t;
[; ;pic16f887.h: 608: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f887.h: 648: extern volatile unsigned short TMR1 @ 0x00E;
"650
[; ;pic16f887.h: 650: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f887.h: 655: extern volatile unsigned char TMR1L @ 0x00E;
"657
[; ;pic16f887.h: 657: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f887.h: 662: extern volatile unsigned char TMR1H @ 0x00F;
"664
[; ;pic16f887.h: 664: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f887.h: 669: extern volatile unsigned char T1CON @ 0x010;
"671
[; ;pic16f887.h: 671: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f887.h: 674: typedef union {
[; ;pic16f887.h: 675: struct {
[; ;pic16f887.h: 676: unsigned TMR1ON :1;
[; ;pic16f887.h: 677: unsigned TMR1CS :1;
[; ;pic16f887.h: 678: unsigned nT1SYNC :1;
[; ;pic16f887.h: 679: unsigned T1OSCEN :1;
[; ;pic16f887.h: 680: unsigned T1CKPS :2;
[; ;pic16f887.h: 681: unsigned TMR1GE :1;
[; ;pic16f887.h: 682: unsigned T1GINV :1;
[; ;pic16f887.h: 683: };
[; ;pic16f887.h: 684: struct {
[; ;pic16f887.h: 685: unsigned :2;
[; ;pic16f887.h: 686: unsigned T1INSYNC :1;
[; ;pic16f887.h: 687: unsigned :1;
[; ;pic16f887.h: 688: unsigned T1CKPS0 :1;
[; ;pic16f887.h: 689: unsigned T1CKPS1 :1;
[; ;pic16f887.h: 690: unsigned :1;
[; ;pic16f887.h: 691: unsigned T1GIV :1;
[; ;pic16f887.h: 692: };
[; ;pic16f887.h: 693: struct {
[; ;pic16f887.h: 694: unsigned :2;
[; ;pic16f887.h: 695: unsigned T1SYNC :1;
[; ;pic16f887.h: 696: };
[; ;pic16f887.h: 697: } T1CONbits_t;
[; ;pic16f887.h: 698: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f887.h: 763: extern volatile unsigned char TMR2 @ 0x011;
"765
[; ;pic16f887.h: 765: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f887.h: 770: extern volatile unsigned char T2CON @ 0x012;
"772
[; ;pic16f887.h: 772: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f887.h: 775: typedef union {
[; ;pic16f887.h: 776: struct {
[; ;pic16f887.h: 777: unsigned T2CKPS :2;
[; ;pic16f887.h: 778: unsigned TMR2ON :1;
[; ;pic16f887.h: 779: unsigned TOUTPS :4;
[; ;pic16f887.h: 780: };
[; ;pic16f887.h: 781: struct {
[; ;pic16f887.h: 782: unsigned T2CKPS0 :1;
[; ;pic16f887.h: 783: unsigned T2CKPS1 :1;
[; ;pic16f887.h: 784: unsigned :1;
[; ;pic16f887.h: 785: unsigned TOUTPS0 :1;
[; ;pic16f887.h: 786: unsigned TOUTPS1 :1;
[; ;pic16f887.h: 787: unsigned TOUTPS2 :1;
[; ;pic16f887.h: 788: unsigned TOUTPS3 :1;
[; ;pic16f887.h: 789: };
[; ;pic16f887.h: 790: } T2CONbits_t;
[; ;pic16f887.h: 791: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f887.h: 841: extern volatile unsigned char SSPBUF @ 0x013;
"843
[; ;pic16f887.h: 843: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f887.h: 848: extern volatile unsigned char SSPCON @ 0x014;
"850
[; ;pic16f887.h: 850: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f887.h: 853: typedef union {
[; ;pic16f887.h: 854: struct {
[; ;pic16f887.h: 855: unsigned SSPM :4;
[; ;pic16f887.h: 856: unsigned CKP :1;
[; ;pic16f887.h: 857: unsigned SSPEN :1;
[; ;pic16f887.h: 858: unsigned SSPOV :1;
[; ;pic16f887.h: 859: unsigned WCOL :1;
[; ;pic16f887.h: 860: };
[; ;pic16f887.h: 861: struct {
[; ;pic16f887.h: 862: unsigned SSPM0 :1;
[; ;pic16f887.h: 863: unsigned SSPM1 :1;
[; ;pic16f887.h: 864: unsigned SSPM2 :1;
[; ;pic16f887.h: 865: unsigned SSPM3 :1;
[; ;pic16f887.h: 866: };
[; ;pic16f887.h: 867: } SSPCONbits_t;
[; ;pic16f887.h: 868: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f887.h: 918: extern volatile unsigned short CCPR1 @ 0x015;
"920
[; ;pic16f887.h: 920: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f887.h: 925: extern volatile unsigned char CCPR1L @ 0x015;
"927
[; ;pic16f887.h: 927: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f887.h: 932: extern volatile unsigned char CCPR1H @ 0x016;
"934
[; ;pic16f887.h: 934: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f887.h: 939: extern volatile unsigned char CCP1CON @ 0x017;
"941
[; ;pic16f887.h: 941: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f887.h: 944: typedef union {
[; ;pic16f887.h: 945: struct {
[; ;pic16f887.h: 946: unsigned CCP1M :4;
[; ;pic16f887.h: 947: unsigned DC1B :2;
[; ;pic16f887.h: 948: unsigned P1M :2;
[; ;pic16f887.h: 949: };
[; ;pic16f887.h: 950: struct {
[; ;pic16f887.h: 951: unsigned CCP1M0 :1;
[; ;pic16f887.h: 952: unsigned CCP1M1 :1;
[; ;pic16f887.h: 953: unsigned CCP1M2 :1;
[; ;pic16f887.h: 954: unsigned CCP1M3 :1;
[; ;pic16f887.h: 955: unsigned DC1B0 :1;
[; ;pic16f887.h: 956: unsigned DC1B1 :1;
[; ;pic16f887.h: 957: unsigned P1M0 :1;
[; ;pic16f887.h: 958: unsigned P1M1 :1;
[; ;pic16f887.h: 959: };
[; ;pic16f887.h: 960: struct {
[; ;pic16f887.h: 961: unsigned :4;
[; ;pic16f887.h: 962: unsigned CCP1Y :1;
[; ;pic16f887.h: 963: unsigned CCP1X :1;
[; ;pic16f887.h: 964: };
[; ;pic16f887.h: 965: } CCP1CONbits_t;
[; ;pic16f887.h: 966: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f887.h: 1036: extern volatile unsigned char RCSTA @ 0x018;
"1038
[; ;pic16f887.h: 1038: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f887.h: 1041: typedef union {
[; ;pic16f887.h: 1042: struct {
[; ;pic16f887.h: 1043: unsigned RX9D :1;
[; ;pic16f887.h: 1044: unsigned OERR :1;
[; ;pic16f887.h: 1045: unsigned FERR :1;
[; ;pic16f887.h: 1046: unsigned ADDEN :1;
[; ;pic16f887.h: 1047: unsigned CREN :1;
[; ;pic16f887.h: 1048: unsigned SREN :1;
[; ;pic16f887.h: 1049: unsigned RX9 :1;
[; ;pic16f887.h: 1050: unsigned SPEN :1;
[; ;pic16f887.h: 1051: };
[; ;pic16f887.h: 1052: struct {
[; ;pic16f887.h: 1053: unsigned RCD8 :1;
[; ;pic16f887.h: 1054: unsigned :5;
[; ;pic16f887.h: 1055: unsigned RC9 :1;
[; ;pic16f887.h: 1056: };
[; ;pic16f887.h: 1057: struct {
[; ;pic16f887.h: 1058: unsigned :6;
[; ;pic16f887.h: 1059: unsigned nRC8 :1;
[; ;pic16f887.h: 1060: };
[; ;pic16f887.h: 1061: struct {
[; ;pic16f887.h: 1062: unsigned :6;
[; ;pic16f887.h: 1063: unsigned RC8_9 :1;
[; ;pic16f887.h: 1064: };
[; ;pic16f887.h: 1065: } RCSTAbits_t;
[; ;pic16f887.h: 1066: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f887.h: 1131: extern volatile unsigned char TXREG @ 0x019;
"1133
[; ;pic16f887.h: 1133: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f887.h: 1138: extern volatile unsigned char RCREG @ 0x01A;
"1140
[; ;pic16f887.h: 1140: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f887.h: 1145: extern volatile unsigned short CCPR2 @ 0x01B;
"1147
[; ;pic16f887.h: 1147: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f887.h: 1152: extern volatile unsigned char CCPR2L @ 0x01B;
"1154
[; ;pic16f887.h: 1154: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f887.h: 1159: extern volatile unsigned char CCPR2H @ 0x01C;
"1161
[; ;pic16f887.h: 1161: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f887.h: 1166: extern volatile unsigned char CCP2CON @ 0x01D;
"1168
[; ;pic16f887.h: 1168: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f887.h: 1171: typedef union {
[; ;pic16f887.h: 1172: struct {
[; ;pic16f887.h: 1173: unsigned CCP2M :4;
[; ;pic16f887.h: 1174: unsigned DC2B0 :1;
[; ;pic16f887.h: 1175: unsigned DC2B1 :1;
[; ;pic16f887.h: 1176: };
[; ;pic16f887.h: 1177: struct {
[; ;pic16f887.h: 1178: unsigned CCP2M0 :1;
[; ;pic16f887.h: 1179: unsigned CCP2M1 :1;
[; ;pic16f887.h: 1180: unsigned CCP2M2 :1;
[; ;pic16f887.h: 1181: unsigned CCP2M3 :1;
[; ;pic16f887.h: 1182: unsigned CCP2Y :1;
[; ;pic16f887.h: 1183: unsigned CCP2X :1;
[; ;pic16f887.h: 1184: };
[; ;pic16f887.h: 1185: } CCP2CONbits_t;
[; ;pic16f887.h: 1186: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16f887.h: 1236: extern volatile unsigned char ADRESH @ 0x01E;
"1238
[; ;pic16f887.h: 1238: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f887.h: 1243: extern volatile unsigned char ADCON0 @ 0x01F;
"1245
[; ;pic16f887.h: 1245: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f887.h: 1248: typedef union {
[; ;pic16f887.h: 1249: struct {
[; ;pic16f887.h: 1250: unsigned ADON :1;
[; ;pic16f887.h: 1251: unsigned GO_nDONE :1;
[; ;pic16f887.h: 1252: unsigned CHS :4;
[; ;pic16f887.h: 1253: unsigned ADCS :2;
[; ;pic16f887.h: 1254: };
[; ;pic16f887.h: 1255: struct {
[; ;pic16f887.h: 1256: unsigned :1;
[; ;pic16f887.h: 1257: unsigned GO :1;
[; ;pic16f887.h: 1258: unsigned CHS0 :1;
[; ;pic16f887.h: 1259: unsigned CHS1 :1;
[; ;pic16f887.h: 1260: unsigned CHS2 :1;
[; ;pic16f887.h: 1261: unsigned CHS3 :1;
[; ;pic16f887.h: 1262: unsigned ADCS0 :1;
[; ;pic16f887.h: 1263: unsigned ADCS1 :1;
[; ;pic16f887.h: 1264: };
[; ;pic16f887.h: 1265: struct {
[; ;pic16f887.h: 1266: unsigned :1;
[; ;pic16f887.h: 1267: unsigned nDONE :1;
[; ;pic16f887.h: 1268: };
[; ;pic16f887.h: 1269: struct {
[; ;pic16f887.h: 1270: unsigned :1;
[; ;pic16f887.h: 1271: unsigned GO_DONE :1;
[; ;pic16f887.h: 1272: };
[; ;pic16f887.h: 1273: } ADCON0bits_t;
[; ;pic16f887.h: 1274: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f887.h: 1344: extern volatile unsigned char OPTION_REG @ 0x081;
"1346
[; ;pic16f887.h: 1346: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f887.h: 1349: typedef union {
[; ;pic16f887.h: 1350: struct {
[; ;pic16f887.h: 1351: unsigned PS :3;
[; ;pic16f887.h: 1352: unsigned PSA :1;
[; ;pic16f887.h: 1353: unsigned T0SE :1;
[; ;pic16f887.h: 1354: unsigned T0CS :1;
[; ;pic16f887.h: 1355: unsigned INTEDG :1;
[; ;pic16f887.h: 1356: unsigned nRBPU :1;
[; ;pic16f887.h: 1357: };
[; ;pic16f887.h: 1358: struct {
[; ;pic16f887.h: 1359: unsigned PS0 :1;
[; ;pic16f887.h: 1360: unsigned PS1 :1;
[; ;pic16f887.h: 1361: unsigned PS2 :1;
[; ;pic16f887.h: 1362: };
[; ;pic16f887.h: 1363: } OPTION_REGbits_t;
[; ;pic16f887.h: 1364: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f887.h: 1414: extern volatile unsigned char TRISA @ 0x085;
"1416
[; ;pic16f887.h: 1416: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f887.h: 1419: typedef union {
[; ;pic16f887.h: 1420: struct {
[; ;pic16f887.h: 1421: unsigned TRISA0 :1;
[; ;pic16f887.h: 1422: unsigned TRISA1 :1;
[; ;pic16f887.h: 1423: unsigned TRISA2 :1;
[; ;pic16f887.h: 1424: unsigned TRISA3 :1;
[; ;pic16f887.h: 1425: unsigned TRISA4 :1;
[; ;pic16f887.h: 1426: unsigned TRISA5 :1;
[; ;pic16f887.h: 1427: unsigned TRISA6 :1;
[; ;pic16f887.h: 1428: unsigned TRISA7 :1;
[; ;pic16f887.h: 1429: };
[; ;pic16f887.h: 1430: } TRISAbits_t;
[; ;pic16f887.h: 1431: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f887.h: 1476: extern volatile unsigned char TRISB @ 0x086;
"1478
[; ;pic16f887.h: 1478: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f887.h: 1481: typedef union {
[; ;pic16f887.h: 1482: struct {
[; ;pic16f887.h: 1483: unsigned TRISB0 :1;
[; ;pic16f887.h: 1484: unsigned TRISB1 :1;
[; ;pic16f887.h: 1485: unsigned TRISB2 :1;
[; ;pic16f887.h: 1486: unsigned TRISB3 :1;
[; ;pic16f887.h: 1487: unsigned TRISB4 :1;
[; ;pic16f887.h: 1488: unsigned TRISB5 :1;
[; ;pic16f887.h: 1489: unsigned TRISB6 :1;
[; ;pic16f887.h: 1490: unsigned TRISB7 :1;
[; ;pic16f887.h: 1491: };
[; ;pic16f887.h: 1492: } TRISBbits_t;
[; ;pic16f887.h: 1493: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f887.h: 1538: extern volatile unsigned char TRISC @ 0x087;
"1540
[; ;pic16f887.h: 1540: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f887.h: 1543: typedef union {
[; ;pic16f887.h: 1544: struct {
[; ;pic16f887.h: 1545: unsigned TRISC0 :1;
[; ;pic16f887.h: 1546: unsigned TRISC1 :1;
[; ;pic16f887.h: 1547: unsigned TRISC2 :1;
[; ;pic16f887.h: 1548: unsigned TRISC3 :1;
[; ;pic16f887.h: 1549: unsigned TRISC4 :1;
[; ;pic16f887.h: 1550: unsigned TRISC5 :1;
[; ;pic16f887.h: 1551: unsigned TRISC6 :1;
[; ;pic16f887.h: 1552: unsigned TRISC7 :1;
[; ;pic16f887.h: 1553: };
[; ;pic16f887.h: 1554: } TRISCbits_t;
[; ;pic16f887.h: 1555: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f887.h: 1600: extern volatile unsigned char TRISD @ 0x088;
"1602
[; ;pic16f887.h: 1602: asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
[; ;pic16f887.h: 1605: typedef union {
[; ;pic16f887.h: 1606: struct {
[; ;pic16f887.h: 1607: unsigned TRISD0 :1;
[; ;pic16f887.h: 1608: unsigned TRISD1 :1;
[; ;pic16f887.h: 1609: unsigned TRISD2 :1;
[; ;pic16f887.h: 1610: unsigned TRISD3 :1;
[; ;pic16f887.h: 1611: unsigned TRISD4 :1;
[; ;pic16f887.h: 1612: unsigned TRISD5 :1;
[; ;pic16f887.h: 1613: unsigned TRISD6 :1;
[; ;pic16f887.h: 1614: unsigned TRISD7 :1;
[; ;pic16f887.h: 1615: };
[; ;pic16f887.h: 1616: } TRISDbits_t;
[; ;pic16f887.h: 1617: extern volatile TRISDbits_t TRISDbits @ 0x088;
[; ;pic16f887.h: 1662: extern volatile unsigned char TRISE @ 0x089;
"1664
[; ;pic16f887.h: 1664: asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
[; ;pic16f887.h: 1667: typedef union {
[; ;pic16f887.h: 1668: struct {
[; ;pic16f887.h: 1669: unsigned TRISE0 :1;
[; ;pic16f887.h: 1670: unsigned TRISE1 :1;
[; ;pic16f887.h: 1671: unsigned TRISE2 :1;
[; ;pic16f887.h: 1672: unsigned TRISE3 :1;
[; ;pic16f887.h: 1673: };
[; ;pic16f887.h: 1674: } TRISEbits_t;
[; ;pic16f887.h: 1675: extern volatile TRISEbits_t TRISEbits @ 0x089;
[; ;pic16f887.h: 1700: extern volatile unsigned char PIE1 @ 0x08C;
"1702
[; ;pic16f887.h: 1702: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f887.h: 1705: typedef union {
[; ;pic16f887.h: 1706: struct {
[; ;pic16f887.h: 1707: unsigned TMR1IE :1;
[; ;pic16f887.h: 1708: unsigned TMR2IE :1;
[; ;pic16f887.h: 1709: unsigned CCP1IE :1;
[; ;pic16f887.h: 1710: unsigned SSPIE :1;
[; ;pic16f887.h: 1711: unsigned TXIE :1;
[; ;pic16f887.h: 1712: unsigned RCIE :1;
[; ;pic16f887.h: 1713: unsigned ADIE :1;
[; ;pic16f887.h: 1714: };
[; ;pic16f887.h: 1715: } PIE1bits_t;
[; ;pic16f887.h: 1716: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f887.h: 1756: extern volatile unsigned char PIE2 @ 0x08D;
"1758
[; ;pic16f887.h: 1758: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f887.h: 1761: typedef union {
[; ;pic16f887.h: 1762: struct {
[; ;pic16f887.h: 1763: unsigned CCP2IE :1;
[; ;pic16f887.h: 1764: unsigned :1;
[; ;pic16f887.h: 1765: unsigned ULPWUIE :1;
[; ;pic16f887.h: 1766: unsigned BCLIE :1;
[; ;pic16f887.h: 1767: unsigned EEIE :1;
[; ;pic16f887.h: 1768: unsigned C1IE :1;
[; ;pic16f887.h: 1769: unsigned C2IE :1;
[; ;pic16f887.h: 1770: unsigned OSFIE :1;
[; ;pic16f887.h: 1771: };
[; ;pic16f887.h: 1772: } PIE2bits_t;
[; ;pic16f887.h: 1773: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f887.h: 1813: extern volatile unsigned char PCON @ 0x08E;
"1815
[; ;pic16f887.h: 1815: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f887.h: 1818: typedef union {
[; ;pic16f887.h: 1819: struct {
[; ;pic16f887.h: 1820: unsigned nBOR :1;
[; ;pic16f887.h: 1821: unsigned nPOR :1;
[; ;pic16f887.h: 1822: unsigned :2;
[; ;pic16f887.h: 1823: unsigned SBOREN :1;
[; ;pic16f887.h: 1824: unsigned ULPWUE :1;
[; ;pic16f887.h: 1825: };
[; ;pic16f887.h: 1826: struct {
[; ;pic16f887.h: 1827: unsigned nBO :1;
[; ;pic16f887.h: 1828: };
[; ;pic16f887.h: 1829: } PCONbits_t;
[; ;pic16f887.h: 1830: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f887.h: 1860: extern volatile unsigned char OSCCON @ 0x08F;
"1862
[; ;pic16f887.h: 1862: asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
[; ;pic16f887.h: 1865: typedef union {
[; ;pic16f887.h: 1866: struct {
[; ;pic16f887.h: 1867: unsigned SCS :1;
[; ;pic16f887.h: 1868: unsigned LTS :1;
[; ;pic16f887.h: 1869: unsigned HTS :1;
[; ;pic16f887.h: 1870: unsigned OSTS :1;
[; ;pic16f887.h: 1871: unsigned IRCF :3;
[; ;pic16f887.h: 1872: };
[; ;pic16f887.h: 1873: struct {
[; ;pic16f887.h: 1874: unsigned :4;
[; ;pic16f887.h: 1875: unsigned IRCF0 :1;
[; ;pic16f887.h: 1876: unsigned IRCF1 :1;
[; ;pic16f887.h: 1877: unsigned IRCF2 :1;
[; ;pic16f887.h: 1878: };
[; ;pic16f887.h: 1879: } OSCCONbits_t;
[; ;pic16f887.h: 1880: extern volatile OSCCONbits_t OSCCONbits @ 0x08F;
[; ;pic16f887.h: 1925: extern volatile unsigned char OSCTUNE @ 0x090;
"1927
[; ;pic16f887.h: 1927: asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
[; ;pic16f887.h: 1930: typedef union {
[; ;pic16f887.h: 1931: struct {
[; ;pic16f887.h: 1932: unsigned TUN :5;
[; ;pic16f887.h: 1933: };
[; ;pic16f887.h: 1934: struct {
[; ;pic16f887.h: 1935: unsigned TUN0 :1;
[; ;pic16f887.h: 1936: unsigned TUN1 :1;
[; ;pic16f887.h: 1937: unsigned TUN2 :1;
[; ;pic16f887.h: 1938: unsigned TUN3 :1;
[; ;pic16f887.h: 1939: unsigned TUN4 :1;
[; ;pic16f887.h: 1940: };
[; ;pic16f887.h: 1941: } OSCTUNEbits_t;
[; ;pic16f887.h: 1942: extern volatile OSCTUNEbits_t OSCTUNEbits @ 0x090;
[; ;pic16f887.h: 1977: extern volatile unsigned char SSPCON2 @ 0x091;
"1979
[; ;pic16f887.h: 1979: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f887.h: 1982: typedef union {
[; ;pic16f887.h: 1983: struct {
[; ;pic16f887.h: 1984: unsigned SEN :1;
[; ;pic16f887.h: 1985: unsigned RSEN :1;
[; ;pic16f887.h: 1986: unsigned PEN :1;
[; ;pic16f887.h: 1987: unsigned RCEN :1;
[; ;pic16f887.h: 1988: unsigned ACKEN :1;
[; ;pic16f887.h: 1989: unsigned ACKDT :1;
[; ;pic16f887.h: 1990: unsigned ACKSTAT :1;
[; ;pic16f887.h: 1991: unsigned GCEN :1;
[; ;pic16f887.h: 1992: };
[; ;pic16f887.h: 1993: } SSPCON2bits_t;
[; ;pic16f887.h: 1994: extern volatile SSPCON2bits_t SSPCON2bits @ 0x091;
[; ;pic16f887.h: 2039: extern volatile unsigned char PR2 @ 0x092;
"2041
[; ;pic16f887.h: 2041: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f887.h: 2046: extern volatile unsigned char SSPADD @ 0x093;
"2048
[; ;pic16f887.h: 2048: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f887.h: 2053: extern volatile unsigned char SSPMSK @ 0x093;
"2055
[; ;pic16f887.h: 2055: asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
[; ;pic16f887.h: 2058: extern volatile unsigned char MSK @ 0x093;
"2060
[; ;pic16f887.h: 2060: asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
[; ;pic16f887.h: 2063: typedef union {
[; ;pic16f887.h: 2064: struct {
[; ;pic16f887.h: 2065: unsigned MSK0 :1;
[; ;pic16f887.h: 2066: unsigned MSK1 :1;
[; ;pic16f887.h: 2067: unsigned MSK2 :1;
[; ;pic16f887.h: 2068: unsigned MSK3 :1;
[; ;pic16f887.h: 2069: unsigned MSK4 :1;
[; ;pic16f887.h: 2070: unsigned MSK5 :1;
[; ;pic16f887.h: 2071: unsigned MSK6 :1;
[; ;pic16f887.h: 2072: unsigned MSK7 :1;
[; ;pic16f887.h: 2073: };
[; ;pic16f887.h: 2074: } SSPMSKbits_t;
[; ;pic16f887.h: 2075: extern volatile SSPMSKbits_t SSPMSKbits @ 0x093;
[; ;pic16f887.h: 2118: typedef union {
[; ;pic16f887.h: 2119: struct {
[; ;pic16f887.h: 2120: unsigned MSK0 :1;
[; ;pic16f887.h: 2121: unsigned MSK1 :1;
[; ;pic16f887.h: 2122: unsigned MSK2 :1;
[; ;pic16f887.h: 2123: unsigned MSK3 :1;
[; ;pic16f887.h: 2124: unsigned MSK4 :1;
[; ;pic16f887.h: 2125: unsigned MSK5 :1;
[; ;pic16f887.h: 2126: unsigned MSK6 :1;
[; ;pic16f887.h: 2127: unsigned MSK7 :1;
[; ;pic16f887.h: 2128: };
[; ;pic16f887.h: 2129: } MSKbits_t;
[; ;pic16f887.h: 2130: extern volatile MSKbits_t MSKbits @ 0x093;
[; ;pic16f887.h: 2175: extern volatile unsigned char SSPSTAT @ 0x094;
"2177
[; ;pic16f887.h: 2177: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f887.h: 2180: typedef union {
[; ;pic16f887.h: 2181: struct {
[; ;pic16f887.h: 2182: unsigned BF :1;
[; ;pic16f887.h: 2183: unsigned UA :1;
[; ;pic16f887.h: 2184: unsigned R_nW :1;
[; ;pic16f887.h: 2185: unsigned S :1;
[; ;pic16f887.h: 2186: unsigned P :1;
[; ;pic16f887.h: 2187: unsigned D_nA :1;
[; ;pic16f887.h: 2188: unsigned CKE :1;
[; ;pic16f887.h: 2189: unsigned SMP :1;
[; ;pic16f887.h: 2190: };
[; ;pic16f887.h: 2191: struct {
[; ;pic16f887.h: 2192: unsigned :2;
[; ;pic16f887.h: 2193: unsigned R :1;
[; ;pic16f887.h: 2194: unsigned :2;
[; ;pic16f887.h: 2195: unsigned D :1;
[; ;pic16f887.h: 2196: };
[; ;pic16f887.h: 2197: struct {
[; ;pic16f887.h: 2198: unsigned :2;
[; ;pic16f887.h: 2199: unsigned I2C_READ :1;
[; ;pic16f887.h: 2200: unsigned I2C_START :1;
[; ;pic16f887.h: 2201: unsigned I2C_STOP :1;
[; ;pic16f887.h: 2202: unsigned I2C_DATA :1;
[; ;pic16f887.h: 2203: };
[; ;pic16f887.h: 2204: struct {
[; ;pic16f887.h: 2205: unsigned :2;
[; ;pic16f887.h: 2206: unsigned nW :1;
[; ;pic16f887.h: 2207: unsigned :2;
[; ;pic16f887.h: 2208: unsigned nA :1;
[; ;pic16f887.h: 2209: };
[; ;pic16f887.h: 2210: struct {
[; ;pic16f887.h: 2211: unsigned :2;
[; ;pic16f887.h: 2212: unsigned nWRITE :1;
[; ;pic16f887.h: 2213: unsigned :2;
[; ;pic16f887.h: 2214: unsigned nADDRESS :1;
[; ;pic16f887.h: 2215: };
[; ;pic16f887.h: 2216: struct {
[; ;pic16f887.h: 2217: unsigned :2;
[; ;pic16f887.h: 2218: unsigned R_W :1;
[; ;pic16f887.h: 2219: unsigned :2;
[; ;pic16f887.h: 2220: unsigned D_A :1;
[; ;pic16f887.h: 2221: };
[; ;pic16f887.h: 2222: struct {
[; ;pic16f887.h: 2223: unsigned :2;
[; ;pic16f887.h: 2224: unsigned READ_WRITE :1;
[; ;pic16f887.h: 2225: unsigned :2;
[; ;pic16f887.h: 2226: unsigned DATA_ADDRESS :1;
[; ;pic16f887.h: 2227: };
[; ;pic16f887.h: 2228: } SSPSTATbits_t;
[; ;pic16f887.h: 2229: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f887.h: 2344: extern volatile unsigned char WPUB @ 0x095;
"2346
[; ;pic16f887.h: 2346: asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
[; ;pic16f887.h: 2349: typedef union {
[; ;pic16f887.h: 2350: struct {
[; ;pic16f887.h: 2351: unsigned WPUB :8;
[; ;pic16f887.h: 2352: };
[; ;pic16f887.h: 2353: struct {
[; ;pic16f887.h: 2354: unsigned WPUB0 :1;
[; ;pic16f887.h: 2355: unsigned WPUB1 :1;
[; ;pic16f887.h: 2356: unsigned WPUB2 :1;
[; ;pic16f887.h: 2357: unsigned WPUB3 :1;
[; ;pic16f887.h: 2358: unsigned WPUB4 :1;
[; ;pic16f887.h: 2359: unsigned WPUB5 :1;
[; ;pic16f887.h: 2360: unsigned WPUB6 :1;
[; ;pic16f887.h: 2361: unsigned WPUB7 :1;
[; ;pic16f887.h: 2362: };
[; ;pic16f887.h: 2363: } WPUBbits_t;
[; ;pic16f887.h: 2364: extern volatile WPUBbits_t WPUBbits @ 0x095;
[; ;pic16f887.h: 2414: extern volatile unsigned char IOCB @ 0x096;
"2416
[; ;pic16f887.h: 2416: asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
[; ;pic16f887.h: 2419: typedef union {
[; ;pic16f887.h: 2420: struct {
[; ;pic16f887.h: 2421: unsigned IOCB :8;
[; ;pic16f887.h: 2422: };
[; ;pic16f887.h: 2423: struct {
[; ;pic16f887.h: 2424: unsigned IOCB0 :1;
[; ;pic16f887.h: 2425: unsigned IOCB1 :1;
[; ;pic16f887.h: 2426: unsigned IOCB2 :1;
[; ;pic16f887.h: 2427: unsigned IOCB3 :1;
[; ;pic16f887.h: 2428: unsigned IOCB4 :1;
[; ;pic16f887.h: 2429: unsigned IOCB5 :1;
[; ;pic16f887.h: 2430: unsigned IOCB6 :1;
[; ;pic16f887.h: 2431: unsigned IOCB7 :1;
[; ;pic16f887.h: 2432: };
[; ;pic16f887.h: 2433: } IOCBbits_t;
[; ;pic16f887.h: 2434: extern volatile IOCBbits_t IOCBbits @ 0x096;
[; ;pic16f887.h: 2484: extern volatile unsigned char VRCON @ 0x097;
"2486
[; ;pic16f887.h: 2486: asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
[; ;pic16f887.h: 2489: typedef union {
[; ;pic16f887.h: 2490: struct {
[; ;pic16f887.h: 2491: unsigned VR :4;
[; ;pic16f887.h: 2492: unsigned VRSS :1;
[; ;pic16f887.h: 2493: unsigned VRR :1;
[; ;pic16f887.h: 2494: unsigned VROE :1;
[; ;pic16f887.h: 2495: unsigned VREN :1;
[; ;pic16f887.h: 2496: };
[; ;pic16f887.h: 2497: struct {
[; ;pic16f887.h: 2498: unsigned VR0 :1;
[; ;pic16f887.h: 2499: unsigned VR1 :1;
[; ;pic16f887.h: 2500: unsigned VR2 :1;
[; ;pic16f887.h: 2501: unsigned VR3 :1;
[; ;pic16f887.h: 2502: };
[; ;pic16f887.h: 2503: } VRCONbits_t;
[; ;pic16f887.h: 2504: extern volatile VRCONbits_t VRCONbits @ 0x097;
[; ;pic16f887.h: 2554: extern volatile unsigned char TXSTA @ 0x098;
"2556
[; ;pic16f887.h: 2556: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f887.h: 2559: typedef union {
[; ;pic16f887.h: 2560: struct {
[; ;pic16f887.h: 2561: unsigned TX9D :1;
[; ;pic16f887.h: 2562: unsigned TRMT :1;
[; ;pic16f887.h: 2563: unsigned BRGH :1;
[; ;pic16f887.h: 2564: unsigned SENDB :1;
[; ;pic16f887.h: 2565: unsigned SYNC :1;
[; ;pic16f887.h: 2566: unsigned TXEN :1;
[; ;pic16f887.h: 2567: unsigned TX9 :1;
[; ;pic16f887.h: 2568: unsigned CSRC :1;
[; ;pic16f887.h: 2569: };
[; ;pic16f887.h: 2570: struct {
[; ;pic16f887.h: 2571: unsigned TXD8 :1;
[; ;pic16f887.h: 2572: unsigned :5;
[; ;pic16f887.h: 2573: unsigned nTX8 :1;
[; ;pic16f887.h: 2574: };
[; ;pic16f887.h: 2575: struct {
[; ;pic16f887.h: 2576: unsigned :6;
[; ;pic16f887.h: 2577: unsigned TX8_9 :1;
[; ;pic16f887.h: 2578: };
[; ;pic16f887.h: 2579: } TXSTAbits_t;
[; ;pic16f887.h: 2580: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f887.h: 2640: extern volatile unsigned char SPBRG @ 0x099;
"2642
[; ;pic16f887.h: 2642: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f887.h: 2645: typedef union {
[; ;pic16f887.h: 2646: struct {
[; ;pic16f887.h: 2647: unsigned BRG0 :1;
[; ;pic16f887.h: 2648: unsigned BRG1 :1;
[; ;pic16f887.h: 2649: unsigned BRG2 :1;
[; ;pic16f887.h: 2650: unsigned BRG3 :1;
[; ;pic16f887.h: 2651: unsigned BRG4 :1;
[; ;pic16f887.h: 2652: unsigned BRG5 :1;
[; ;pic16f887.h: 2653: unsigned BRG6 :1;
[; ;pic16f887.h: 2654: unsigned BRG7 :1;
[; ;pic16f887.h: 2655: };
[; ;pic16f887.h: 2656: } SPBRGbits_t;
[; ;pic16f887.h: 2657: extern volatile SPBRGbits_t SPBRGbits @ 0x099;
[; ;pic16f887.h: 2702: extern volatile unsigned char SPBRGH @ 0x09A;
"2704
[; ;pic16f887.h: 2704: asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
[; ;pic16f887.h: 2707: typedef union {
[; ;pic16f887.h: 2708: struct {
[; ;pic16f887.h: 2709: unsigned SPBRGH :8;
[; ;pic16f887.h: 2710: };
[; ;pic16f887.h: 2711: struct {
[; ;pic16f887.h: 2712: unsigned BRG8 :1;
[; ;pic16f887.h: 2713: unsigned BRG9 :1;
[; ;pic16f887.h: 2714: unsigned BRG10 :1;
[; ;pic16f887.h: 2715: unsigned BRG11 :1;
[; ;pic16f887.h: 2716: unsigned BRG12 :1;
[; ;pic16f887.h: 2717: unsigned BRG13 :1;
[; ;pic16f887.h: 2718: unsigned BRG14 :1;
[; ;pic16f887.h: 2719: unsigned BRG15 :1;
[; ;pic16f887.h: 2720: };
[; ;pic16f887.h: 2721: } SPBRGHbits_t;
[; ;pic16f887.h: 2722: extern volatile SPBRGHbits_t SPBRGHbits @ 0x09A;
[; ;pic16f887.h: 2772: extern volatile unsigned char PWM1CON @ 0x09B;
"2774
[; ;pic16f887.h: 2774: asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
[; ;pic16f887.h: 2777: typedef union {
[; ;pic16f887.h: 2778: struct {
[; ;pic16f887.h: 2779: unsigned PDC :7;
[; ;pic16f887.h: 2780: unsigned PRSEN :1;
[; ;pic16f887.h: 2781: };
[; ;pic16f887.h: 2782: struct {
[; ;pic16f887.h: 2783: unsigned PDC0 :1;
[; ;pic16f887.h: 2784: unsigned PDC1 :1;
[; ;pic16f887.h: 2785: unsigned PDC2 :1;
[; ;pic16f887.h: 2786: unsigned PDC3 :1;
[; ;pic16f887.h: 2787: unsigned PDC4 :1;
[; ;pic16f887.h: 2788: unsigned PDC5 :1;
[; ;pic16f887.h: 2789: unsigned PDC6 :1;
[; ;pic16f887.h: 2790: };
[; ;pic16f887.h: 2791: } PWM1CONbits_t;
[; ;pic16f887.h: 2792: extern volatile PWM1CONbits_t PWM1CONbits @ 0x09B;
[; ;pic16f887.h: 2842: extern volatile unsigned char ECCPAS @ 0x09C;
"2844
[; ;pic16f887.h: 2844: asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
[; ;pic16f887.h: 2847: typedef union {
[; ;pic16f887.h: 2848: struct {
[; ;pic16f887.h: 2849: unsigned PSSBD :2;
[; ;pic16f887.h: 2850: unsigned PSSAC :2;
[; ;pic16f887.h: 2851: unsigned ECCPAS :3;
[; ;pic16f887.h: 2852: unsigned ECCPASE :1;
[; ;pic16f887.h: 2853: };
[; ;pic16f887.h: 2854: struct {
[; ;pic16f887.h: 2855: unsigned PSSBD0 :1;
[; ;pic16f887.h: 2856: unsigned PSSBD1 :1;
[; ;pic16f887.h: 2857: unsigned PSSAC0 :1;
[; ;pic16f887.h: 2858: unsigned PSSAC1 :1;
[; ;pic16f887.h: 2859: unsigned ECCPAS0 :1;
[; ;pic16f887.h: 2860: unsigned ECCPAS1 :1;
[; ;pic16f887.h: 2861: unsigned ECCPAS2 :1;
[; ;pic16f887.h: 2862: };
[; ;pic16f887.h: 2863: } ECCPASbits_t;
[; ;pic16f887.h: 2864: extern volatile ECCPASbits_t ECCPASbits @ 0x09C;
[; ;pic16f887.h: 2924: extern volatile unsigned char PSTRCON @ 0x09D;
"2926
[; ;pic16f887.h: 2926: asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
[; ;pic16f887.h: 2929: typedef union {
[; ;pic16f887.h: 2930: struct {
[; ;pic16f887.h: 2931: unsigned STRA :1;
[; ;pic16f887.h: 2932: unsigned STRB :1;
[; ;pic16f887.h: 2933: unsigned STRC :1;
[; ;pic16f887.h: 2934: unsigned STRD :1;
[; ;pic16f887.h: 2935: unsigned STRSYNC :1;
[; ;pic16f887.h: 2936: };
[; ;pic16f887.h: 2937: } PSTRCONbits_t;
[; ;pic16f887.h: 2938: extern volatile PSTRCONbits_t PSTRCONbits @ 0x09D;
[; ;pic16f887.h: 2968: extern volatile unsigned char ADRESL @ 0x09E;
"2970
[; ;pic16f887.h: 2970: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f887.h: 2975: extern volatile unsigned char ADCON1 @ 0x09F;
"2977
[; ;pic16f887.h: 2977: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f887.h: 2980: typedef union {
[; ;pic16f887.h: 2981: struct {
[; ;pic16f887.h: 2982: unsigned :4;
[; ;pic16f887.h: 2983: unsigned VCFG0 :1;
[; ;pic16f887.h: 2984: unsigned VCFG1 :1;
[; ;pic16f887.h: 2985: unsigned :1;
[; ;pic16f887.h: 2986: unsigned ADFM :1;
[; ;pic16f887.h: 2987: };
[; ;pic16f887.h: 2988: } ADCON1bits_t;
[; ;pic16f887.h: 2989: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f887.h: 3009: extern volatile unsigned char WDTCON @ 0x105;
"3011
[; ;pic16f887.h: 3011: asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
[; ;pic16f887.h: 3014: typedef union {
[; ;pic16f887.h: 3015: struct {
[; ;pic16f887.h: 3016: unsigned SWDTEN :1;
[; ;pic16f887.h: 3017: unsigned WDTPS :4;
[; ;pic16f887.h: 3018: };
[; ;pic16f887.h: 3019: struct {
[; ;pic16f887.h: 3020: unsigned :1;
[; ;pic16f887.h: 3021: unsigned WDTPS0 :1;
[; ;pic16f887.h: 3022: unsigned WDTPS1 :1;
[; ;pic16f887.h: 3023: unsigned WDTPS2 :1;
[; ;pic16f887.h: 3024: unsigned WDTPS3 :1;
[; ;pic16f887.h: 3025: };
[; ;pic16f887.h: 3026: } WDTCONbits_t;
[; ;pic16f887.h: 3027: extern volatile WDTCONbits_t WDTCONbits @ 0x105;
[; ;pic16f887.h: 3062: extern volatile unsigned char CM1CON0 @ 0x107;
"3064
[; ;pic16f887.h: 3064: asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
[; ;pic16f887.h: 3067: typedef union {
[; ;pic16f887.h: 3068: struct {
[; ;pic16f887.h: 3069: unsigned C1CH :2;
[; ;pic16f887.h: 3070: unsigned C1R :1;
[; ;pic16f887.h: 3071: unsigned :1;
[; ;pic16f887.h: 3072: unsigned C1POL :1;
[; ;pic16f887.h: 3073: unsigned C1OE :1;
[; ;pic16f887.h: 3074: unsigned C1OUT :1;
[; ;pic16f887.h: 3075: unsigned C1ON :1;
[; ;pic16f887.h: 3076: };
[; ;pic16f887.h: 3077: struct {
[; ;pic16f887.h: 3078: unsigned C1CH0 :1;
[; ;pic16f887.h: 3079: unsigned C1CH1 :1;
[; ;pic16f887.h: 3080: };
[; ;pic16f887.h: 3081: } CM1CON0bits_t;
[; ;pic16f887.h: 3082: extern volatile CM1CON0bits_t CM1CON0bits @ 0x107;
[; ;pic16f887.h: 3127: extern volatile unsigned char CM2CON0 @ 0x108;
"3129
[; ;pic16f887.h: 3129: asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
[; ;pic16f887.h: 3132: typedef union {
[; ;pic16f887.h: 3133: struct {
[; ;pic16f887.h: 3134: unsigned C2CH :2;
[; ;pic16f887.h: 3135: unsigned C2R :1;
[; ;pic16f887.h: 3136: unsigned :1;
[; ;pic16f887.h: 3137: unsigned C2POL :1;
[; ;pic16f887.h: 3138: unsigned C2OE :1;
[; ;pic16f887.h: 3139: unsigned C2OUT :1;
[; ;pic16f887.h: 3140: unsigned C2ON :1;
[; ;pic16f887.h: 3141: };
[; ;pic16f887.h: 3142: struct {
[; ;pic16f887.h: 3143: unsigned C2CH0 :1;
[; ;pic16f887.h: 3144: unsigned C2CH1 :1;
[; ;pic16f887.h: 3145: };
[; ;pic16f887.h: 3146: } CM2CON0bits_t;
[; ;pic16f887.h: 3147: extern volatile CM2CON0bits_t CM2CON0bits @ 0x108;
[; ;pic16f887.h: 3192: extern volatile unsigned char CM2CON1 @ 0x109;
"3194
[; ;pic16f887.h: 3194: asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
[; ;pic16f887.h: 3197: typedef union {
[; ;pic16f887.h: 3198: struct {
[; ;pic16f887.h: 3199: unsigned C2SYNC :1;
[; ;pic16f887.h: 3200: unsigned T1GSS :1;
[; ;pic16f887.h: 3201: unsigned :2;
[; ;pic16f887.h: 3202: unsigned C2RSEL :1;
[; ;pic16f887.h: 3203: unsigned C1RSEL :1;
[; ;pic16f887.h: 3204: unsigned MC2OUT :1;
[; ;pic16f887.h: 3205: unsigned MC1OUT :1;
[; ;pic16f887.h: 3206: };
[; ;pic16f887.h: 3207: } CM2CON1bits_t;
[; ;pic16f887.h: 3208: extern volatile CM2CON1bits_t CM2CON1bits @ 0x109;
[; ;pic16f887.h: 3243: extern volatile unsigned char EEDATA @ 0x10C;
"3245
[; ;pic16f887.h: 3245: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f887.h: 3248: extern volatile unsigned char EEDAT @ 0x10C;
"3250
[; ;pic16f887.h: 3250: asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
[; ;pic16f887.h: 3255: extern volatile unsigned char EEADR @ 0x10D;
"3257
[; ;pic16f887.h: 3257: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f887.h: 3262: extern volatile unsigned char EEDATH @ 0x10E;
"3264
[; ;pic16f887.h: 3264: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f887.h: 3269: extern volatile unsigned char EEADRH @ 0x10F;
"3271
[; ;pic16f887.h: 3271: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f887.h: 3276: extern volatile unsigned char SRCON @ 0x185;
"3278
[; ;pic16f887.h: 3278: asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
[; ;pic16f887.h: 3281: typedef union {
[; ;pic16f887.h: 3282: struct {
[; ;pic16f887.h: 3283: unsigned FVREN :1;
[; ;pic16f887.h: 3284: unsigned :1;
[; ;pic16f887.h: 3285: unsigned PULSR :1;
[; ;pic16f887.h: 3286: unsigned PULSS :1;
[; ;pic16f887.h: 3287: unsigned C2REN :1;
[; ;pic16f887.h: 3288: unsigned C1SEN :1;
[; ;pic16f887.h: 3289: unsigned SR0 :1;
[; ;pic16f887.h: 3290: unsigned SR1 :1;
[; ;pic16f887.h: 3291: };
[; ;pic16f887.h: 3292: } SRCONbits_t;
[; ;pic16f887.h: 3293: extern volatile SRCONbits_t SRCONbits @ 0x185;
[; ;pic16f887.h: 3333: extern volatile unsigned char BAUDCTL @ 0x187;
"3335
[; ;pic16f887.h: 3335: asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
[; ;pic16f887.h: 3338: typedef union {
[; ;pic16f887.h: 3339: struct {
[; ;pic16f887.h: 3340: unsigned ABDEN :1;
[; ;pic16f887.h: 3341: unsigned WUE :1;
[; ;pic16f887.h: 3342: unsigned :1;
[; ;pic16f887.h: 3343: unsigned BRG16 :1;
[; ;pic16f887.h: 3344: unsigned SCKP :1;
[; ;pic16f887.h: 3345: unsigned :1;
[; ;pic16f887.h: 3346: unsigned RCIDL :1;
[; ;pic16f887.h: 3347: unsigned ABDOVF :1;
[; ;pic16f887.h: 3348: };
[; ;pic16f887.h: 3349: } BAUDCTLbits_t;
[; ;pic16f887.h: 3350: extern volatile BAUDCTLbits_t BAUDCTLbits @ 0x187;
[; ;pic16f887.h: 3385: extern volatile unsigned char ANSEL @ 0x188;
"3387
[; ;pic16f887.h: 3387: asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
[; ;pic16f887.h: 3390: typedef union {
[; ;pic16f887.h: 3391: struct {
[; ;pic16f887.h: 3392: unsigned ANS0 :1;
[; ;pic16f887.h: 3393: unsigned ANS1 :1;
[; ;pic16f887.h: 3394: unsigned ANS2 :1;
[; ;pic16f887.h: 3395: unsigned ANS3 :1;
[; ;pic16f887.h: 3396: unsigned ANS4 :1;
[; ;pic16f887.h: 3397: unsigned ANS5 :1;
[; ;pic16f887.h: 3398: unsigned ANS6 :1;
[; ;pic16f887.h: 3399: unsigned ANS7 :1;
[; ;pic16f887.h: 3400: };
[; ;pic16f887.h: 3401: } ANSELbits_t;
[; ;pic16f887.h: 3402: extern volatile ANSELbits_t ANSELbits @ 0x188;
[; ;pic16f887.h: 3447: extern volatile unsigned char ANSELH @ 0x189;
"3449
[; ;pic16f887.h: 3449: asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
[; ;pic16f887.h: 3452: typedef union {
[; ;pic16f887.h: 3453: struct {
[; ;pic16f887.h: 3454: unsigned ANS8 :1;
[; ;pic16f887.h: 3455: unsigned ANS9 :1;
[; ;pic16f887.h: 3456: unsigned ANS10 :1;
[; ;pic16f887.h: 3457: unsigned ANS11 :1;
[; ;pic16f887.h: 3458: unsigned ANS12 :1;
[; ;pic16f887.h: 3459: unsigned ANS13 :1;
[; ;pic16f887.h: 3460: };
[; ;pic16f887.h: 3461: } ANSELHbits_t;
[; ;pic16f887.h: 3462: extern volatile ANSELHbits_t ANSELHbits @ 0x189;
[; ;pic16f887.h: 3497: extern volatile unsigned char EECON1 @ 0x18C;
"3499
[; ;pic16f887.h: 3499: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f887.h: 3502: typedef union {
[; ;pic16f887.h: 3503: struct {
[; ;pic16f887.h: 3504: unsigned RD :1;
[; ;pic16f887.h: 3505: unsigned WR :1;
[; ;pic16f887.h: 3506: unsigned WREN :1;
[; ;pic16f887.h: 3507: unsigned WRERR :1;
[; ;pic16f887.h: 3508: unsigned :3;
[; ;pic16f887.h: 3509: unsigned EEPGD :1;
[; ;pic16f887.h: 3510: };
[; ;pic16f887.h: 3511: } EECON1bits_t;
[; ;pic16f887.h: 3512: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;pic16f887.h: 3542: extern volatile unsigned char EECON2 @ 0x18D;
"3544
[; ;pic16f887.h: 3544: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f887.h: 3554: extern volatile __bit ABDEN @ (((unsigned) &BAUDCTL)*8) + 0;
[; ;pic16f887.h: 3556: extern volatile __bit ABDOVF @ (((unsigned) &BAUDCTL)*8) + 7;
[; ;pic16f887.h: 3558: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f887.h: 3560: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f887.h: 3562: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f887.h: 3564: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f887.h: 3566: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f887.h: 3568: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f887.h: 3570: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f887.h: 3572: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f887.h: 3574: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f887.h: 3576: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f887.h: 3578: extern volatile __bit ANS0 @ (((unsigned) &ANSEL)*8) + 0;
[; ;pic16f887.h: 3580: extern volatile __bit ANS1 @ (((unsigned) &ANSEL)*8) + 1;
[; ;pic16f887.h: 3582: extern volatile __bit ANS10 @ (((unsigned) &ANSELH)*8) + 2;
[; ;pic16f887.h: 3584: extern volatile __bit ANS11 @ (((unsigned) &ANSELH)*8) + 3;
[; ;pic16f887.h: 3586: extern volatile __bit ANS12 @ (((unsigned) &ANSELH)*8) + 4;
[; ;pic16f887.h: 3588: extern volatile __bit ANS13 @ (((unsigned) &ANSELH)*8) + 5;
[; ;pic16f887.h: 3590: extern volatile __bit ANS2 @ (((unsigned) &ANSEL)*8) + 2;
[; ;pic16f887.h: 3592: extern volatile __bit ANS3 @ (((unsigned) &ANSEL)*8) + 3;
[; ;pic16f887.h: 3594: extern volatile __bit ANS4 @ (((unsigned) &ANSEL)*8) + 4;
[; ;pic16f887.h: 3596: extern volatile __bit ANS5 @ (((unsigned) &ANSEL)*8) + 5;
[; ;pic16f887.h: 3598: extern volatile __bit ANS6 @ (((unsigned) &ANSEL)*8) + 6;
[; ;pic16f887.h: 3600: extern volatile __bit ANS7 @ (((unsigned) &ANSEL)*8) + 7;
[; ;pic16f887.h: 3602: extern volatile __bit ANS8 @ (((unsigned) &ANSELH)*8) + 0;
[; ;pic16f887.h: 3604: extern volatile __bit ANS9 @ (((unsigned) &ANSELH)*8) + 1;
[; ;pic16f887.h: 3606: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f887.h: 3608: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f887.h: 3610: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f887.h: 3612: extern volatile __bit BRG0 @ (((unsigned) &SPBRG)*8) + 0;
[; ;pic16f887.h: 3614: extern volatile __bit BRG1 @ (((unsigned) &SPBRG)*8) + 1;
[; ;pic16f887.h: 3616: extern volatile __bit BRG10 @ (((unsigned) &SPBRGH)*8) + 2;
[; ;pic16f887.h: 3618: extern volatile __bit BRG11 @ (((unsigned) &SPBRGH)*8) + 3;
[; ;pic16f887.h: 3620: extern volatile __bit BRG12 @ (((unsigned) &SPBRGH)*8) + 4;
[; ;pic16f887.h: 3622: extern volatile __bit BRG13 @ (((unsigned) &SPBRGH)*8) + 5;
[; ;pic16f887.h: 3624: extern volatile __bit BRG14 @ (((unsigned) &SPBRGH)*8) + 6;
[; ;pic16f887.h: 3626: extern volatile __bit BRG15 @ (((unsigned) &SPBRGH)*8) + 7;
[; ;pic16f887.h: 3628: extern volatile __bit BRG16 @ (((unsigned) &BAUDCTL)*8) + 3;
[; ;pic16f887.h: 3630: extern volatile __bit BRG2 @ (((unsigned) &SPBRG)*8) + 2;
[; ;pic16f887.h: 3632: extern volatile __bit BRG3 @ (((unsigned) &SPBRG)*8) + 3;
[; ;pic16f887.h: 3634: extern volatile __bit BRG4 @ (((unsigned) &SPBRG)*8) + 4;
[; ;pic16f887.h: 3636: extern volatile __bit BRG5 @ (((unsigned) &SPBRG)*8) + 5;
[; ;pic16f887.h: 3638: extern volatile __bit BRG6 @ (((unsigned) &SPBRG)*8) + 6;
[; ;pic16f887.h: 3640: extern volatile __bit BRG7 @ (((unsigned) &SPBRG)*8) + 7;
[; ;pic16f887.h: 3642: extern volatile __bit BRG8 @ (((unsigned) &SPBRGH)*8) + 0;
[; ;pic16f887.h: 3644: extern volatile __bit BRG9 @ (((unsigned) &SPBRGH)*8) + 1;
[; ;pic16f887.h: 3646: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f887.h: 3648: extern volatile __bit C1CH0 @ (((unsigned) &CM1CON0)*8) + 0;
[; ;pic16f887.h: 3650: extern volatile __bit C1CH1 @ (((unsigned) &CM1CON0)*8) + 1;
[; ;pic16f887.h: 3652: extern volatile __bit C1IE @ (((unsigned) &PIE2)*8) + 5;
[; ;pic16f887.h: 3654: extern volatile __bit C1IF @ (((unsigned) &PIR2)*8) + 5;
[; ;pic16f887.h: 3656: extern volatile __bit C1OE @ (((unsigned) &CM1CON0)*8) + 5;
[; ;pic16f887.h: 3658: extern volatile __bit C1ON @ (((unsigned) &CM1CON0)*8) + 7;
[; ;pic16f887.h: 3660: extern volatile __bit C1OUT @ (((unsigned) &CM1CON0)*8) + 6;
[; ;pic16f887.h: 3662: extern volatile __bit C1POL @ (((unsigned) &CM1CON0)*8) + 4;
[; ;pic16f887.h: 3664: extern volatile __bit C1R @ (((unsigned) &CM1CON0)*8) + 2;
[; ;pic16f887.h: 3666: extern volatile __bit C1RSEL @ (((unsigned) &CM2CON1)*8) + 5;
[; ;pic16f887.h: 3668: extern volatile __bit C1SEN @ (((unsigned) &SRCON)*8) + 5;
[; ;pic16f887.h: 3670: extern volatile __bit C2CH0 @ (((unsigned) &CM2CON0)*8) + 0;
[; ;pic16f887.h: 3672: extern volatile __bit C2CH1 @ (((unsigned) &CM2CON0)*8) + 1;
[; ;pic16f887.h: 3674: extern volatile __bit C2IE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f887.h: 3676: extern volatile __bit C2IF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f887.h: 3678: extern volatile __bit C2OE @ (((unsigned) &CM2CON0)*8) + 5;
[; ;pic16f887.h: 3680: extern volatile __bit C2ON @ (((unsigned) &CM2CON0)*8) + 7;
[; ;pic16f887.h: 3682: extern volatile __bit C2OUT @ (((unsigned) &CM2CON0)*8) + 6;
[; ;pic16f887.h: 3684: extern volatile __bit C2POL @ (((unsigned) &CM2CON0)*8) + 4;
[; ;pic16f887.h: 3686: extern volatile __bit C2R @ (((unsigned) &CM2CON0)*8) + 2;
[; ;pic16f887.h: 3688: extern volatile __bit C2REN @ (((unsigned) &SRCON)*8) + 4;
[; ;pic16f887.h: 3690: extern volatile __bit C2RSEL @ (((unsigned) &CM2CON1)*8) + 4;
[; ;pic16f887.h: 3692: extern volatile __bit C2SYNC @ (((unsigned) &CM2CON1)*8) + 0;
[; ;pic16f887.h: 3694: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f887.h: 3696: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f887.h: 3698: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f887.h: 3700: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f887.h: 3702: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f887.h: 3704: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f887.h: 3706: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f887.h: 3708: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f887.h: 3710: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f887.h: 3712: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f887.h: 3714: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f887.h: 3716: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f887.h: 3718: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f887.h: 3720: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f887.h: 3722: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f887.h: 3724: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f887.h: 3726: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f887.h: 3728: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f887.h: 3730: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f887.h: 3732: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f887.h: 3734: extern volatile __bit CHS3 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f887.h: 3736: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f887.h: 3738: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f887.h: 3740: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f887.h: 3742: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f887.h: 3744: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3746: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f887.h: 3748: extern volatile __bit DC1B0 @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f887.h: 3750: extern volatile __bit DC1B1 @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f887.h: 3752: extern volatile __bit DC2B0 @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f887.h: 3754: extern volatile __bit DC2B1 @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f887.h: 3756: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3758: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3760: extern volatile __bit ECCPAS0 @ (((unsigned) &ECCPAS)*8) + 4;
[; ;pic16f887.h: 3762: extern volatile __bit ECCPAS1 @ (((unsigned) &ECCPAS)*8) + 5;
[; ;pic16f887.h: 3764: extern volatile __bit ECCPAS2 @ (((unsigned) &ECCPAS)*8) + 6;
[; ;pic16f887.h: 3766: extern volatile __bit ECCPASE @ (((unsigned) &ECCPAS)*8) + 7;
[; ;pic16f887.h: 3768: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f887.h: 3770: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f887.h: 3772: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f887.h: 3774: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f887.h: 3776: extern volatile __bit FVREN @ (((unsigned) &SRCON)*8) + 0;
[; ;pic16f887.h: 3778: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f887.h: 3780: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f887.h: 3782: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 3784: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 3786: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 3788: extern volatile __bit HTS @ (((unsigned) &OSCCON)*8) + 2;
[; ;pic16f887.h: 3790: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3792: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3794: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f887.h: 3796: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f887.h: 3798: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f887.h: 3800: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f887.h: 3802: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f887.h: 3804: extern volatile __bit IOCB0 @ (((unsigned) &IOCB)*8) + 0;
[; ;pic16f887.h: 3806: extern volatile __bit IOCB1 @ (((unsigned) &IOCB)*8) + 1;
[; ;pic16f887.h: 3808: extern volatile __bit IOCB2 @ (((unsigned) &IOCB)*8) + 2;
[; ;pic16f887.h: 3810: extern volatile __bit IOCB3 @ (((unsigned) &IOCB)*8) + 3;
[; ;pic16f887.h: 3812: extern volatile __bit IOCB4 @ (((unsigned) &IOCB)*8) + 4;
[; ;pic16f887.h: 3814: extern volatile __bit IOCB5 @ (((unsigned) &IOCB)*8) + 5;
[; ;pic16f887.h: 3816: extern volatile __bit IOCB6 @ (((unsigned) &IOCB)*8) + 6;
[; ;pic16f887.h: 3818: extern volatile __bit IOCB7 @ (((unsigned) &IOCB)*8) + 7;
[; ;pic16f887.h: 3820: extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 4;
[; ;pic16f887.h: 3822: extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 5;
[; ;pic16f887.h: 3824: extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 6;
[; ;pic16f887.h: 3826: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f887.h: 3828: extern volatile __bit LTS @ (((unsigned) &OSCCON)*8) + 1;
[; ;pic16f887.h: 3830: extern volatile __bit MC1OUT @ (((unsigned) &CM2CON1)*8) + 7;
[; ;pic16f887.h: 3832: extern volatile __bit MC2OUT @ (((unsigned) &CM2CON1)*8) + 6;
[; ;pic16f887.h: 3834: extern volatile __bit MSK0 @ (((unsigned) &SSPMSK)*8) + 0;
[; ;pic16f887.h: 3836: extern volatile __bit MSK1 @ (((unsigned) &SSPMSK)*8) + 1;
[; ;pic16f887.h: 3838: extern volatile __bit MSK2 @ (((unsigned) &SSPMSK)*8) + 2;
[; ;pic16f887.h: 3840: extern volatile __bit MSK3 @ (((unsigned) &SSPMSK)*8) + 3;
[; ;pic16f887.h: 3842: extern volatile __bit MSK4 @ (((unsigned) &SSPMSK)*8) + 4;
[; ;pic16f887.h: 3844: extern volatile __bit MSK5 @ (((unsigned) &SSPMSK)*8) + 5;
[; ;pic16f887.h: 3846: extern volatile __bit MSK6 @ (((unsigned) &SSPMSK)*8) + 6;
[; ;pic16f887.h: 3848: extern volatile __bit MSK7 @ (((unsigned) &SSPMSK)*8) + 7;
[; ;pic16f887.h: 3850: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f887.h: 3852: extern volatile __bit OSFIE @ (((unsigned) &PIE2)*8) + 7;
[; ;pic16f887.h: 3854: extern volatile __bit OSFIF @ (((unsigned) &PIR2)*8) + 7;
[; ;pic16f887.h: 3856: extern volatile __bit OSTS @ (((unsigned) &OSCCON)*8) + 3;
[; ;pic16f887.h: 3858: extern volatile __bit P1M0 @ (((unsigned) &CCP1CON)*8) + 6;
[; ;pic16f887.h: 3860: extern volatile __bit P1M1 @ (((unsigned) &CCP1CON)*8) + 7;
[; ;pic16f887.h: 3862: extern volatile __bit PDC0 @ (((unsigned) &PWM1CON)*8) + 0;
[; ;pic16f887.h: 3864: extern volatile __bit PDC1 @ (((unsigned) &PWM1CON)*8) + 1;
[; ;pic16f887.h: 3866: extern volatile __bit PDC2 @ (((unsigned) &PWM1CON)*8) + 2;
[; ;pic16f887.h: 3868: extern volatile __bit PDC3 @ (((unsigned) &PWM1CON)*8) + 3;
[; ;pic16f887.h: 3870: extern volatile __bit PDC4 @ (((unsigned) &PWM1CON)*8) + 4;
[; ;pic16f887.h: 3872: extern volatile __bit PDC5 @ (((unsigned) &PWM1CON)*8) + 5;
[; ;pic16f887.h: 3874: extern volatile __bit PDC6 @ (((unsigned) &PWM1CON)*8) + 6;
[; ;pic16f887.h: 3876: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f887.h: 3878: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f887.h: 3880: extern volatile __bit PRSEN @ (((unsigned) &PWM1CON)*8) + 7;
[; ;pic16f887.h: 3882: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f887.h: 3884: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f887.h: 3886: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f887.h: 3888: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f887.h: 3890: extern volatile __bit PSSAC0 @ (((unsigned) &ECCPAS)*8) + 2;
[; ;pic16f887.h: 3892: extern volatile __bit PSSAC1 @ (((unsigned) &ECCPAS)*8) + 3;
[; ;pic16f887.h: 3894: extern volatile __bit PSSBD0 @ (((unsigned) &ECCPAS)*8) + 0;
[; ;pic16f887.h: 3896: extern volatile __bit PSSBD1 @ (((unsigned) &ECCPAS)*8) + 1;
[; ;pic16f887.h: 3898: extern volatile __bit PULSR @ (((unsigned) &SRCON)*8) + 2;
[; ;pic16f887.h: 3900: extern volatile __bit PULSS @ (((unsigned) &SRCON)*8) + 3;
[; ;pic16f887.h: 3902: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f887.h: 3904: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f887.h: 3906: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f887.h: 3908: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f887.h: 3910: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f887.h: 3912: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f887.h: 3914: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic16f887.h: 3916: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic16f887.h: 3918: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f887.h: 3920: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f887.h: 3922: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f887.h: 3924: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f887.h: 3926: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f887.h: 3928: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f887.h: 3930: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f887.h: 3932: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f887.h: 3934: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f887.h: 3936: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f887.h: 3938: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f887.h: 3940: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f887.h: 3942: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f887.h: 3944: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f887.h: 3946: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f887.h: 3948: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f887.h: 3950: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f887.h: 3952: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f887.h: 3954: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 3956: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 3958: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f887.h: 3960: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f887.h: 3962: extern volatile __bit RCIDL @ (((unsigned) &BAUDCTL)*8) + 6;
[; ;pic16f887.h: 3964: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f887.h: 3966: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f887.h: 3968: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f887.h: 3970: extern volatile __bit RD0 @ (((unsigned) &PORTD)*8) + 0;
[; ;pic16f887.h: 3972: extern volatile __bit RD1 @ (((unsigned) &PORTD)*8) + 1;
[; ;pic16f887.h: 3974: extern volatile __bit RD2 @ (((unsigned) &PORTD)*8) + 2;
[; ;pic16f887.h: 3976: extern volatile __bit RD3 @ (((unsigned) &PORTD)*8) + 3;
[; ;pic16f887.h: 3978: extern volatile __bit RD4 @ (((unsigned) &PORTD)*8) + 4;
[; ;pic16f887.h: 3980: extern volatile __bit RD5 @ (((unsigned) &PORTD)*8) + 5;
[; ;pic16f887.h: 3982: extern volatile __bit RD6 @ (((unsigned) &PORTD)*8) + 6;
[; ;pic16f887.h: 3984: extern volatile __bit RD7 @ (((unsigned) &PORTD)*8) + 7;
[; ;pic16f887.h: 3986: extern volatile __bit RE0 @ (((unsigned) &PORTE)*8) + 0;
[; ;pic16f887.h: 3988: extern volatile __bit RE1 @ (((unsigned) &PORTE)*8) + 1;
[; ;pic16f887.h: 3990: extern volatile __bit RE2 @ (((unsigned) &PORTE)*8) + 2;
[; ;pic16f887.h: 3992: extern volatile __bit RE3 @ (((unsigned) &PORTE)*8) + 3;
[; ;pic16f887.h: 3994: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3996: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f887.h: 3998: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f887.h: 4000: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f887.h: 4002: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 4004: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f887.h: 4006: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 4008: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 4010: extern volatile __bit SBOREN @ (((unsigned) &PCON)*8) + 4;
[; ;pic16f887.h: 4012: extern volatile __bit SCKP @ (((unsigned) &BAUDCTL)*8) + 4;
[; ;pic16f887.h: 4014: extern volatile __bit SCS @ (((unsigned) &OSCCON)*8) + 0;
[; ;pic16f887.h: 4016: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f887.h: 4018: extern volatile __bit SENDB @ (((unsigned) &TXSTA)*8) + 3;
[; ;pic16f887.h: 4020: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f887.h: 4022: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f887.h: 4024: extern volatile __bit SR0 @ (((unsigned) &SRCON)*8) + 6;
[; ;pic16f887.h: 4026: extern volatile __bit SR1 @ (((unsigned) &SRCON)*8) + 7;
[; ;pic16f887.h: 4028: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f887.h: 4030: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f887.h: 4032: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f887.h: 4034: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f887.h: 4036: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f887.h: 4038: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f887.h: 4040: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f887.h: 4042: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f887.h: 4044: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f887.h: 4046: extern volatile __bit STRA @ (((unsigned) &PSTRCON)*8) + 0;
[; ;pic16f887.h: 4048: extern volatile __bit STRB @ (((unsigned) &PSTRCON)*8) + 1;
[; ;pic16f887.h: 4050: extern volatile __bit STRC @ (((unsigned) &PSTRCON)*8) + 2;
[; ;pic16f887.h: 4052: extern volatile __bit STRD @ (((unsigned) &PSTRCON)*8) + 3;
[; ;pic16f887.h: 4054: extern volatile __bit STRSYNC @ (((unsigned) &PSTRCON)*8) + 4;
[; ;pic16f887.h: 4056: extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;
[; ;pic16f887.h: 4058: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f887.h: 4060: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f887.h: 4062: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f887.h: 4064: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f887.h: 4066: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f887.h: 4068: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f887.h: 4070: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f887.h: 4072: extern volatile __bit T1GINV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f887.h: 4074: extern volatile __bit T1GIV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f887.h: 4076: extern volatile __bit T1GSS @ (((unsigned) &CM2CON1)*8) + 1;
[; ;pic16f887.h: 4078: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f887.h: 4080: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f887.h: 4082: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f887.h: 4084: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f887.h: 4086: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f887.h: 4088: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f887.h: 4090: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f887.h: 4092: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f887.h: 4094: extern volatile __bit TMR1GE @ (((unsigned) &T1CON)*8) + 6;
[; ;pic16f887.h: 4096: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f887.h: 4098: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f887.h: 4100: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f887.h: 4102: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f887.h: 4104: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f887.h: 4106: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f887.h: 4108: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f887.h: 4110: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f887.h: 4112: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f887.h: 4114: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f887.h: 4116: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f887.h: 4118: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f887.h: 4120: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f887.h: 4122: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f887.h: 4124: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f887.h: 4126: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f887.h: 4128: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic16f887.h: 4130: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic16f887.h: 4132: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f887.h: 4134: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f887.h: 4136: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f887.h: 4138: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f887.h: 4140: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f887.h: 4142: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f887.h: 4144: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f887.h: 4146: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f887.h: 4148: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f887.h: 4150: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f887.h: 4152: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f887.h: 4154: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f887.h: 4156: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f887.h: 4158: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f887.h: 4160: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f887.h: 4162: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f887.h: 4164: extern volatile __bit TRISD0 @ (((unsigned) &TRISD)*8) + 0;
[; ;pic16f887.h: 4166: extern volatile __bit TRISD1 @ (((unsigned) &TRISD)*8) + 1;
[; ;pic16f887.h: 4168: extern volatile __bit TRISD2 @ (((unsigned) &TRISD)*8) + 2;
[; ;pic16f887.h: 4170: extern volatile __bit TRISD3 @ (((unsigned) &TRISD)*8) + 3;
[; ;pic16f887.h: 4172: extern volatile __bit TRISD4 @ (((unsigned) &TRISD)*8) + 4;
[; ;pic16f887.h: 4174: extern volatile __bit TRISD5 @ (((unsigned) &TRISD)*8) + 5;
[; ;pic16f887.h: 4176: extern volatile __bit TRISD6 @ (((unsigned) &TRISD)*8) + 6;
[; ;pic16f887.h: 4178: extern volatile __bit TRISD7 @ (((unsigned) &TRISD)*8) + 7;
[; ;pic16f887.h: 4180: extern volatile __bit TRISE0 @ (((unsigned) &TRISE)*8) + 0;
[; ;pic16f887.h: 4182: extern volatile __bit TRISE1 @ (((unsigned) &TRISE)*8) + 1;
[; ;pic16f887.h: 4184: extern volatile __bit TRISE2 @ (((unsigned) &TRISE)*8) + 2;
[; ;pic16f887.h: 4186: extern volatile __bit TRISE3 @ (((unsigned) &TRISE)*8) + 3;
[; ;pic16f887.h: 4188: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f887.h: 4190: extern volatile __bit TUN0 @ (((unsigned) &OSCTUNE)*8) + 0;
[; ;pic16f887.h: 4192: extern volatile __bit TUN1 @ (((unsigned) &OSCTUNE)*8) + 1;
[; ;pic16f887.h: 4194: extern volatile __bit TUN2 @ (((unsigned) &OSCTUNE)*8) + 2;
[; ;pic16f887.h: 4196: extern volatile __bit TUN3 @ (((unsigned) &OSCTUNE)*8) + 3;
[; ;pic16f887.h: 4198: extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;
[; ;pic16f887.h: 4200: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f887.h: 4202: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f887.h: 4204: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f887.h: 4206: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f887.h: 4208: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f887.h: 4210: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f887.h: 4212: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f887.h: 4214: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f887.h: 4216: extern volatile __bit ULPWUE @ (((unsigned) &PCON)*8) + 5;
[; ;pic16f887.h: 4218: extern volatile __bit ULPWUIE @ (((unsigned) &PIE2)*8) + 2;
[; ;pic16f887.h: 4220: extern volatile __bit ULPWUIF @ (((unsigned) &PIR2)*8) + 2;
[; ;pic16f887.h: 4222: extern volatile __bit VCFG0 @ (((unsigned) &ADCON1)*8) + 4;
[; ;pic16f887.h: 4224: extern volatile __bit VCFG1 @ (((unsigned) &ADCON1)*8) + 5;
[; ;pic16f887.h: 4226: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic16f887.h: 4228: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic16f887.h: 4230: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic16f887.h: 4232: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic16f887.h: 4234: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic16f887.h: 4236: extern volatile __bit VROE @ (((unsigned) &VRCON)*8) + 6;
[; ;pic16f887.h: 4238: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic16f887.h: 4240: extern volatile __bit VRSS @ (((unsigned) &VRCON)*8) + 4;
[; ;pic16f887.h: 4242: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f887.h: 4244: extern volatile __bit WDTPS0 @ (((unsigned) &WDTCON)*8) + 1;
[; ;pic16f887.h: 4246: extern volatile __bit WDTPS1 @ (((unsigned) &WDTCON)*8) + 2;
[; ;pic16f887.h: 4248: extern volatile __bit WDTPS2 @ (((unsigned) &WDTCON)*8) + 3;
[; ;pic16f887.h: 4250: extern volatile __bit WDTPS3 @ (((unsigned) &WDTCON)*8) + 4;
[; ;pic16f887.h: 4252: extern volatile __bit WPUB0 @ (((unsigned) &WPUB)*8) + 0;
[; ;pic16f887.h: 4254: extern volatile __bit WPUB1 @ (((unsigned) &WPUB)*8) + 1;
[; ;pic16f887.h: 4256: extern volatile __bit WPUB2 @ (((unsigned) &WPUB)*8) + 2;
[; ;pic16f887.h: 4258: extern volatile __bit WPUB3 @ (((unsigned) &WPUB)*8) + 3;
[; ;pic16f887.h: 4260: extern volatile __bit WPUB4 @ (((unsigned) &WPUB)*8) + 4;
[; ;pic16f887.h: 4262: extern volatile __bit WPUB5 @ (((unsigned) &WPUB)*8) + 5;
[; ;pic16f887.h: 4264: extern volatile __bit WPUB6 @ (((unsigned) &WPUB)*8) + 6;
[; ;pic16f887.h: 4266: extern volatile __bit WPUB7 @ (((unsigned) &WPUB)*8) + 7;
[; ;pic16f887.h: 4268: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f887.h: 4270: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f887.h: 4272: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f887.h: 4274: extern volatile __bit WUE @ (((unsigned) &BAUDCTL)*8) + 1;
[; ;pic16f887.h: 4276: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f887.h: 4278: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 4280: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 4282: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f887.h: 4284: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f887.h: 4286: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 4288: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f887.h: 4290: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f887.h: 4292: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f887.h: 4294: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 4296: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f887.h: 4298: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f887.h: 4300: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f887.h: 4302: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 4304: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 29: extern void __nop(void);
[; ;pic.h: 78: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 153: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 155: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 193: extern __bank0 unsigned char __resetbits;
[; ;pic.h: 194: extern __bank0 __bit __powerdown;
[; ;pic.h: 195: extern __bank0 __bit __timeout;
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
"7 newmain.c
[p x FOSC=INTRC_NOCLKOUT ]
"8
[p x WDTE=OFF ]
"9
[p x PWRTE=OFF ]
"10
[p x MCLRE=OFF ]
"11
[p x CP=OFF ]
"12
[p x CPD=OFF ]
"13
[p x BOREN=ON ]
"14
[p x IESO=OFF ]
"15
[p x FCMEN=OFF ]
"16
[p x LVP=OFF ]
"19
[p x BOR4V=BOR40V ]
"20
[p x WRT=OFF ]
"96
[; ;newmain.c: 96: asm("\tpsect eeprom_data,class=EEDATA,delta=2,space=3,noexec"); asm("\tdb\t" "0X03" "," "0X00" "," "0X03" "," "0X00" "," "0X03" "," "0X00" "," "0X03" "," "0X00");
[; <" 	psect eeprom_data,class=EEDATA,delta=2,space=3,noexec ;# ">
[; <" 	db	0X03,0X00,0X03,0X00,0X03,0X00,0X03,0X00 ;# ">
"97
[; ;newmain.c: 97: asm("\tpsect eeprom_data,class=EEDATA,delta=2,space=3,noexec"); asm("\tdb\t" "0X03" "," "0X00" "," "0X03" "," "0X00" "," "0X03" "," "0X00" "," "0X03" "," "0X00");
[; <" 	psect eeprom_data,class=EEDATA,delta=2,space=3,noexec ;# ">
[; <" 	db	0X03,0X00,0X03,0X00,0X03,0X00,0X03,0X00 ;# ">
"98
[; ;newmain.c: 98: asm("\tpsect eeprom_data,class=EEDATA,delta=2,space=3,noexec"); asm("\tdb\t" "0X03" "," "0X00" "," "0X03" "," "0X00" "," "0X00" "," "0X01" "," "0X00" "," "0X00");
[; <" 	psect eeprom_data,class=EEDATA,delta=2,space=3,noexec ;# ">
[; <" 	db	0X03,0X00,0X03,0X00,0X00,0X01,0X00,0X00 ;# ">
"99
[; ;newmain.c: 99: asm("\tpsect eeprom_data,class=EEDATA,delta=2,space=3,noexec"); asm("\tdb\t" "0X02" "," "0X00" "," "0X00" "," "0X03" "," "0X00" "," "0X00" "," "0X05" "," "0X00");
[; <" 	psect eeprom_data,class=EEDATA,delta=2,space=3,noexec ;# ">
[; <" 	db	0X02,0X00,0X00,0X03,0X00,0X00,0X05,0X00 ;# ">
"100
[; ;newmain.c: 100: asm("\tpsect eeprom_data,class=EEDATA,delta=2,space=3,noexec"); asm("\tdb\t" "0X01" "," "0X00" "," "0X00" "," "0X00" "," "0X00" "," "0X00" "," "0X00" "," "0X00");
[; <" 	psect eeprom_data,class=EEDATA,delta=2,space=3,noexec ;# ">
[; <" 	db	0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00 ;# ">
[; ;newmain.c: 102: void ToggleEpinOfLCD(void);
[; ;newmain.c: 103: void LCD_CmdWrite(unsigned char Command) ;
[; ;newmain.c: 104: void LCD_DataWrite(char LCDChar);
[; ;newmain.c: 105: void LCD_Init(void);
[; ;newmain.c: 106: void LCD_DisplayString(const char *s);
[; ;newmain.c: 107: void LCD_Clear(void) ;
[; ;newmain.c: 109: void PORT_Init();
[; ;newmain.c: 110: void displaypass(int data);
[; ;newmain.c: 111: void display(int data);
[; ;newmain.c: 112: void display_price(int data);
[; ;newmain.c: 114: void buzzer(unsigned int a);
[; ;newmain.c: 115: void LCD_BuildChar(unsigned char loc,unsigned char *p);
[; ;newmain.c: 116: void Write_EEPROM(unsigned char a1,unsigned char a2,unsigned int data_value);
[; ;newmain.c: 117: void Write_EEPROM_Price(unsigned char a1,unsigned char a2,unsigned char a3,unsigned int data_value);
[; ;newmain.c: 118: unsigned int Read_EEPROM(unsigned char b1,unsigned char b2);
[; ;newmain.c: 119: unsigned int Read_EEPROM_Price(unsigned char b1,unsigned char b2,unsigned char b3);
[; ;newmain.c: 120: void STOCK_EMPTY_ROUTINE();
[; ;newmain.c: 121: void Set_Channel(unsigned int data);
[; ;newmain.c: 122: void Monitor_Balance(unsigned int amount);
[; ;newmain.c: 124: void escprocess();
"126
[v _padcount1 `ui ~T0 @X0 1 e ]
[i _padcount1
-> -> 0 `i `ui
]
[v _rupee1 `ui ~T0 @X0 1 e ]
[i _rupee1
-> -> 0 `i `ui
]
[v _padcount2 `ui ~T0 @X0 1 e ]
[i _padcount2
-> -> 0 `i `ui
]
[v _rupee2 `ui ~T0 @X0 1 e ]
[i _rupee2
-> -> 0 `i `ui
]
[v _balance `ui ~T0 @X0 1 e ]
[i _balance
-> -> 0 `i `ui
]
[v _padcount `ui ~T0 @X0 1 e ]
[i _padcount
-> -> 0 `i `ui
]
[v _rupee `ui ~T0 @X0 1 e ]
[i _rupee
-> -> 0 `i `ui
]
[; ;newmain.c: 126: unsigned int padcount1=0,rupee1=0,padcount2=0,rupee2=0,balance=0,padcount=0,rupee=0;
"127
[v _padcount3 `ui ~T0 @X0 1 e ]
[i _padcount3
-> -> 0 `i `ui
]
[v _rupee3 `ui ~T0 @X0 1 e ]
[i _rupee3
-> -> 0 `i `ui
]
[v _padcount4 `ui ~T0 @X0 1 e ]
[i _padcount4
-> -> 0 `i `ui
]
[v _rupee4 `ui ~T0 @X0 1 e ]
[i _rupee4
-> -> 0 `i `ui
]
[v _padcount5 `ui ~T0 @X0 1 e ]
[i _padcount5
-> -> 0 `i `ui
]
[v _rupee5 `ui ~T0 @X0 1 e ]
[i _rupee5
-> -> 0 `i `ui
]
[; ;newmain.c: 127: unsigned int padcount3=0,rupee3=0,padcount4=0,rupee4=0,padcount5=0,rupee5=0;
"128
[v _value `ui ~T0 @X0 1 e ]
[i _value
-> -> 0 `i `ui
]
[v _error_count `ui ~T0 @X0 1 e ]
[i _error_count
-> -> 0 `i `ui
]
[v _count `ui ~T0 @X0 1 e ]
[i _count
-> -> 0 `i `ui
]
[v _num `ui ~T0 @X0 1 e ]
[i _num
-> -> 0 `i `ui
]
[; ;newmain.c: 128: unsigned int value=0,error_count=0,count=0,num=0;
"129
[v _stock `ui ~T0 @X0 1 e ]
[i _stock
-> -> 0 `i `ui
]
[; ;newmain.c: 129: unsigned int stock=0;
"130
[v _stock_data `uc ~T0 @X0 1 e ]
[i _stock_data
-> -> 0 `i `uc
]
[; ;newmain.c: 130: unsigned char stock_data=0;
"131
[v _status `b ~T0 @X0 1 e ]
[i _status
-> 0 `i
]
[v _menu `b ~T0 @X0 1 e ]
[i _menu
-> 0 `i
]
[v _set `b ~T0 @X0 1 e ]
[i _set
-> 0 `i
]
[v _check `b ~T0 @X0 1 e ]
[i _check
-> 0 `i
]
[v _pad `b ~T0 @X0 1 e ]
[i _pad
-> 0 `i
]
[v _coin `b ~T0 @X0 1 e ]
[i _coin
-> 0 `i
]
[v _run `b ~T0 @X0 1 e ]
[i _run
-> 0 `i
]
[v _coin_input `b ~T0 @X0 1 e ]
[i _coin_input
-> 0 `i
]
[v _motor `b ~T0 @X0 1 e ]
[i _motor
-> 0 `i
]
[v _Qflag `b ~T0 @X0 1 e ]
[i _Qflag
-> 0 `i
]
[; ;newmain.c: 131: bit status=0,menu=0,set=0,check=0,pad=0,coin=0,run=0,coin_input=0,motor=0,Qflag=0;
"132
[v _RupeeSymbol `uc ~T0 @X0 -> 8 `i e ]
[i _RupeeSymbol
:U ..
-> -> 31 `i `uc
-> -> 2 `i `uc
-> -> 15 `i `uc
-> -> 2 `i `uc
-> -> 28 `i `uc
-> -> 8 `i `uc
-> -> 4 `i `uc
-> -> 2 `i `uc
..
]
[; ;newmain.c: 132: unsigned char RupeeSymbol[8]={0X1F,0X02,0X0F,0X02,0X1C,0X08,0X04,0X02};
[v $root$_COINCOUNTER `(v ~T0 @X0 0 e ]
[v F1783 `(v ~T0 @X0 1 tf ]
"134
[v _COINCOUNTER `IF1783 ~T0 @X0 1 e ]
"135
{
[; ;newmain.c: 134: void interrupt COINCOUNTER()
[; ;newmain.c: 135: {
[e :U _COINCOUNTER ]
[f ]
[; ;newmain.c: 136: if(INTF==1)
"136
[e $ ! == -> _INTF `i -> 1 `i 140  ]
[; ;newmain.c: 137: {
"137
{
[; ;newmain.c: 138: INTF=0;
"138
[e = _INTF -> -> 0 `i `b ]
[; ;newmain.c: 139: coin_input=1;
"139
[e = _coin_input -> -> 1 `i `b ]
[; ;newmain.c: 140: count=count+10;
"140
[e = _count + _count -> -> 10 `i `ui ]
[; ;newmain.c: 141: balance=rupee-count;
"141
[e = _balance - _rupee _count ]
[; ;newmain.c: 142: Monitor_Balance(balance);
"142
[e ( _Monitor_Balance (1 _balance ]
[; ;newmain.c: 144: if(count==rupee)
"144
[e $ ! == _count _rupee 141  ]
[; ;newmain.c: 145: {
"145
{
[; ;newmain.c: 146: INTE=0;
"146
[e = _INTE -> -> 0 `i `b ]
[; ;newmain.c: 147: count=0;
"147
[e = _count -> -> 0 `i `ui ]
[; ;newmain.c: 148: balance=0;
"148
[e = _balance -> -> 0 `i `ui ]
[; ;newmain.c: 149: coin_input=0;
"149
[e = _coin_input -> -> 0 `i `b ]
[; ;newmain.c: 150: RB1=1;
"150
[e = _RB1 -> -> 1 `i `b ]
[; ;newmain.c: 151: motor=1;
"151
[e = _motor -> -> 1 `i `b ]
"152
}
[e :U 141 ]
"153
}
[e :U 140 ]
[; ;newmain.c: 152: }
[; ;newmain.c: 153: }
[; ;newmain.c: 154: }
"154
[e :UE 139 ]
}
"155
[v _start `i ~T0 @X0 1 e ]
[i _start
-> 0 `i
]
[; ;newmain.c: 155: int start = 0;
"156
[v _dispvalue `uc ~T0 @X0 -> 10 `i e ]
[; ;newmain.c: 156: char dispvalue[10];
[v $root$_main `(v ~T0 @X0 0 e ]
"157
[v _main `(v ~T0 @X0 1 ef ]
"159
{
[; ;newmain.c: 157: void main()
[; ;newmain.c: 159: {
[e :U _main ]
[f ]
[; ;newmain.c: 160: _delay((unsigned long)((50)*(4000000/4000.0)));
"160
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 161: PORT_Init();
"161
[e ( _PORT_Init ..  ]
[; ;newmain.c: 162: LCD_Init();
"162
[e ( _LCD_Init ..  ]
[; ;newmain.c: 163: RB2=0;RB3=0;RB4=0;RB5=0;
"163
[e = _RB2 -> -> 0 `i `b ]
[e = _RB3 -> -> 0 `i `b ]
[e = _RB4 -> -> 0 `i `b ]
[e = _RB5 -> -> 0 `i `b ]
[; ;newmain.c: 165: if((!RE1)&&(!RE0))
"165
[e $ ! && ! _RE1 ! _RE0 143  ]
[; ;newmain.c: 166: {
"166
{
[; ;newmain.c: 167: LCD_DisplayString(" FACTORY RESET  ");
"167
[e ( _LCD_DisplayString (1 :s 1C ]
[; ;newmain.c: 168: LCD_CmdWrite(0XC0);
"168
[e ( _LCD_CmdWrite (1 -> -> 192 `i `uc ]
[; ;newmain.c: 169: LCD_DisplayString(" INITIALIZING... ");
"169
[e ( _LCD_DisplayString (1 :s 2C ]
[; ;newmain.c: 170: buzzer(1000);
"170
[e ( _buzzer (1 -> -> 1000 `i `ui ]
[; ;newmain.c: 171: _delay((unsigned long)((500)*(4000000/4000.0)));
"171
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 172: LCD_Clear();
"172
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 173: LCD_DisplayString("  FLASHING....  ");
"173
[e ( _LCD_DisplayString (1 :s 3C ]
[; ;newmain.c: 174: buzzer(100);
"174
[e ( _buzzer (1 -> -> 100 `i `ui ]
[; ;newmain.c: 175: _delay((unsigned long)((2500)*(4000000/4000.0)));
"175
[e ( __delay (1 -> * -> -> 2500 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 177: asm("\tpsect eeprom_data,class=EEDATA,delta=2,space=3,noexec"); asm("\tdb\t" "0X00" "," "0X00" "," "0X00" "," "0X00" "," "0X00" "," "0X00" "," "0X00" "," "0X00");
"177
[; <" 	psect eeprom_data,class=EEDATA,delta=2,space=3,noexec ;# ">
[; <" 	db	0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00 ;# ">
[; ;newmain.c: 178: asm("\tpsect eeprom_data,class=EEDATA,delta=2,space=3,noexec"); asm("\tdb\t" "0X00" "," "0X00" "," "0X00" "," "0X00" "," "0X00" "," "0X00" "," "0X00" "," "0X00");
"178
[; <" 	psect eeprom_data,class=EEDATA,delta=2,space=3,noexec ;# ">
[; <" 	db	0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00 ;# ">
[; ;newmain.c: 179: asm("\tpsect eeprom_data,class=EEDATA,delta=2,space=3,noexec"); asm("\tdb\t" "0X00" "," "0X00" "," "0X00" "," "0X00" "," "0X00" "," "0X00" "," "0X00" "," "0X00");
"179
[; <" 	psect eeprom_data,class=EEDATA,delta=2,space=3,noexec ;# ">
[; <" 	db	0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00 ;# ">
[; ;newmain.c: 180: asm("\tpsect eeprom_data,class=EEDATA,delta=2,space=3,noexec"); asm("\tdb\t" "0X00" "," "0X00" "," "0X00" "," "0X00" "," "0X00" "," "0X00" "," "0X00" "," "0X00");
"180
[; <" 	psect eeprom_data,class=EEDATA,delta=2,space=3,noexec ;# ">
[; <" 	db	0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00 ;# ">
[; ;newmain.c: 182: padcount1=0;padcount2=0;padcount3=0;padcount4=0;padcount5=0;
"182
[e = _padcount1 -> -> 0 `i `ui ]
[e = _padcount2 -> -> 0 `i `ui ]
[e = _padcount3 -> -> 0 `i `ui ]
[e = _padcount4 -> -> 0 `i `ui ]
[e = _padcount5 -> -> 0 `i `ui ]
[; ;newmain.c: 183: rupee1=10;rupee2=10;rupee3=10;rupee4=10;rupee5=10;
"183
[e = _rupee1 -> -> 10 `i `ui ]
[e = _rupee2 -> -> 10 `i `ui ]
[e = _rupee3 -> -> 10 `i `ui ]
[e = _rupee4 -> -> 10 `i `ui ]
[e = _rupee5 -> -> 10 `i `ui ]
[; ;newmain.c: 184: balance=0;padcount=0;rupee=0;
"184
[e = _balance -> -> 0 `i `ui ]
[e = _padcount -> -> 0 `i `ui ]
[e = _rupee -> -> 0 `i `ui ]
[; ;newmain.c: 185: value=0;error_count=0;count=0;num=0;stock=0;stock_data=0;
"185
[e = _value -> -> 0 `i `ui ]
[e = _error_count -> -> 0 `i `ui ]
[e = _count -> -> 0 `i `ui ]
[e = _num -> -> 0 `i `ui ]
[e = _stock -> -> 0 `i `ui ]
[e = _stock_data -> -> 0 `i `uc ]
[; ;newmain.c: 186: status=0;menu=0;set=0;check=0;pad=0;coin=0;run=0;coin_input=0;motor=0;Qflag=0;
"186
[e = _status -> -> 0 `i `b ]
[e = _menu -> -> 0 `i `b ]
[e = _set -> -> 0 `i `b ]
[e = _check -> -> 0 `i `b ]
[e = _pad -> -> 0 `i `b ]
[e = _coin -> -> 0 `i `b ]
[e = _run -> -> 0 `i `b ]
[e = _coin_input -> -> 0 `i `b ]
[e = _motor -> -> 0 `i `b ]
[e = _Qflag -> -> 0 `i `b ]
[; ;newmain.c: 188: Write_EEPROM_Price(0X14,0X15,0X16,rupee1);
"188
[e ( _Write_EEPROM_Price (4 , , , -> -> 20 `i `uc -> -> 21 `i `uc -> -> 22 `i `uc _rupee1 ]
[; ;newmain.c: 189: Write_EEPROM_Price(0X17,0X18,0X19,rupee2);
"189
[e ( _Write_EEPROM_Price (4 , , , -> -> 23 `i `uc -> -> 24 `i `uc -> -> 25 `i `uc _rupee2 ]
[; ;newmain.c: 190: Write_EEPROM_Price(0X1A,0X1B,0X1C,rupee3);
"190
[e ( _Write_EEPROM_Price (4 , , , -> -> 26 `i `uc -> -> 27 `i `uc -> -> 28 `i `uc _rupee3 ]
[; ;newmain.c: 191: Write_EEPROM_Price(0X1D,0X1E,0X1F,rupee4);
"191
[e ( _Write_EEPROM_Price (4 , , , -> -> 29 `i `uc -> -> 30 `i `uc -> -> 31 `i `uc _rupee4 ]
[; ;newmain.c: 192: Write_EEPROM_Price(0X20,0X21,0X22,rupee5);
"192
[e ( _Write_EEPROM_Price (4 , , , -> -> 32 `i `uc -> -> 33 `i `uc -> -> 34 `i `uc _rupee5 ]
[; ;newmain.c: 194: LCD_Clear();
"194
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 195: LCD_DisplayString(" MEMORY FLASHED! ");
"195
[e ( _LCD_DisplayString (1 :s 4C ]
[; ;newmain.c: 196: buzzer(1000);
"196
[e ( _buzzer (1 -> -> 1000 `i `ui ]
[; ;newmain.c: 197: _delay((unsigned long)((1000)*(4000000/4000.0)));
"197
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 198: menu=1;run=1;
"198
[e = _menu -> -> 1 `i `b ]
[e = _run -> -> 1 `i `b ]
[; ;newmain.c: 199: buzzer(70);
"199
[e ( _buzzer (1 -> -> 70 `i `ui ]
[; ;newmain.c: 200: LCD_Clear();
"200
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 201: goto flash;
"201
[e $U 144  ]
"202
}
[e :U 143 ]
[; ;newmain.c: 202: }
[; ;newmain.c: 205: RB1=1;INTE=0;
"205
[e = _RB1 -> -> 1 `i `b ]
[e = _INTE -> -> 0 `i `b ]
[; ;newmain.c: 207: padcount1=Read_EEPROM(0,1);
"207
[e = _padcount1 ( _Read_EEPROM (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 208: padcount2=Read_EEPROM(4,5);
"208
[e = _padcount2 ( _Read_EEPROM (2 , -> -> 4 `i `uc -> -> 5 `i `uc ]
[; ;newmain.c: 209: padcount3=Read_EEPROM(8,9);
"209
[e = _padcount3 ( _Read_EEPROM (2 , -> -> 8 `i `uc -> -> 9 `i `uc ]
[; ;newmain.c: 210: padcount4=Read_EEPROM(0X0C,0X0D);
"210
[e = _padcount4 ( _Read_EEPROM (2 , -> -> 12 `i `uc -> -> 13 `i `uc ]
[; ;newmain.c: 211: padcount5=Read_EEPROM(0X10,0X11);
"211
[e = _padcount5 ( _Read_EEPROM (2 , -> -> 16 `i `uc -> -> 17 `i `uc ]
[; ;newmain.c: 213: rupee1=Read_EEPROM_Price(0x14,0x15,0X16);
"213
[e = _rupee1 ( _Read_EEPROM_Price (3 , , -> -> 20 `i `uc -> -> 21 `i `uc -> -> 22 `i `uc ]
[; ;newmain.c: 214: rupee2=Read_EEPROM_Price(0X17,0X18,0X19);
"214
[e = _rupee2 ( _Read_EEPROM_Price (3 , , -> -> 23 `i `uc -> -> 24 `i `uc -> -> 25 `i `uc ]
[; ;newmain.c: 215: rupee3=Read_EEPROM_Price(0X1A,0X1B,0X1C);
"215
[e = _rupee3 ( _Read_EEPROM_Price (3 , , -> -> 26 `i `uc -> -> 27 `i `uc -> -> 28 `i `uc ]
[; ;newmain.c: 216: rupee4=Read_EEPROM_Price(0X1D,0X1E,0X1F);
"216
[e = _rupee4 ( _Read_EEPROM_Price (3 , , -> -> 29 `i `uc -> -> 30 `i `uc -> -> 31 `i `uc ]
[; ;newmain.c: 217: rupee5=Read_EEPROM_Price(0X20,0X21,0X22);
"217
[e = _rupee5 ( _Read_EEPROM_Price (3 , , -> -> 32 `i `uc -> -> 33 `i `uc -> -> 34 `i `uc ]
[; ;newmain.c: 221: LCD_DisplayString("   WELCOME TO   ");
"221
[e ( _LCD_DisplayString (1 :s 5C ]
[; ;newmain.c: 222: LCD_CmdWrite(0XC0);
"222
[e ( _LCD_CmdWrite (1 -> -> 192 `i `uc ]
[; ;newmain.c: 223: LCD_DisplayString("DHARSAN MACHINES");
"223
[e ( _LCD_DisplayString (1 :s 6C ]
[; ;newmain.c: 224: buzzer(2000);
"224
[e ( _buzzer (1 -> -> 2000 `i `ui ]
[; ;newmain.c: 225: _delay((unsigned long)((1000)*(4000000/4000.0)));
"225
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 226: buzzer(50);
"226
[e ( _buzzer (1 -> -> 50 `i `ui ]
[; ;newmain.c: 227: LCD_Clear();
"227
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 228: run=1;
"228
[e = _run -> -> 1 `i `b ]
[; ;newmain.c: 230: while(run)
"230
[e $U 145  ]
[e :U 146 ]
[; ;newmain.c: 231: {
"231
{
[; ;newmain.c: 232: TRISA1 = 1;
"232
[e = _TRISA1 -> -> 1 `i `b ]
[; ;newmain.c: 233: TRISA0 = 1;
"233
[e = _TRISA0 -> -> 1 `i `b ]
[; ;newmain.c: 234: TRISA5 = 1;
"234
[e = _TRISA5 -> -> 1 `i `b ]
[; ;newmain.c: 235: TRISB6 = 1;
"235
[e = _TRISB6 -> -> 1 `i `b ]
[; ;newmain.c: 236: TRISB7 = 1;
"236
[e = _TRISB7 -> -> 1 `i `b ]
[; ;newmain.c: 237: while(!status)
"237
[e $U 148  ]
[e :U 149 ]
[; ;newmain.c: 238: {
"238
{
[; ;newmain.c: 239: LCD_CmdWrite(0X80);
"239
[e ( _LCD_CmdWrite (1 -> -> 128 `i `uc ]
[; ;newmain.c: 240: LCD_DisplayString("   SELECT ROW  ");
"240
[e ( _LCD_DisplayString (1 :s 7C ]
[; ;newmain.c: 241: LCD_CmdWrite(0XC0);
"241
[e ( _LCD_CmdWrite (1 -> -> 192 `i `uc ]
[; ;newmain.c: 242: LCD_DisplayString("_1__2__3__4__5__");
"242
[e ( _LCD_DisplayString (1 :s 8C ]
[; ;newmain.c: 244: if(!RA1)
"244
[e $ ! ! _RA1 151  ]
[; ;newmain.c: 245: {
"245
{
[; ;newmain.c: 246: while(!RA1);
"246
[e $U 152  ]
[e :U 153 ]
[e :U 152 ]
[e $ ! _RA1 153  ]
[e :U 154 ]
[; ;newmain.c: 247: M1:
"247
[e :U 155 ]
[; ;newmain.c: 248: if(padcount1==0)
"248
[e $ ! == _padcount1 -> -> 0 `i `ui 156  ]
[; ;newmain.c: 249: {
"249
{
[; ;newmain.c: 250: STOCK_EMPTY_ROUTINE();
"250
[e ( _STOCK_EMPTY_ROUTINE ..  ]
[; ;newmain.c: 251: break;
"251
[e $U 150  ]
"252
}
[e :U 156 ]
[; ;newmain.c: 252: }
[; ;newmain.c: 253: INTE=1;status=1;
"253
[e = _INTE -> -> 1 `i `b ]
[e = _status -> -> 1 `i `b ]
[; ;newmain.c: 254: stock=1;
"254
[e = _stock -> -> 1 `i `ui ]
[; ;newmain.c: 255: padcount=padcount1;
"255
[e = _padcount _padcount1 ]
[; ;newmain.c: 256: rupee=rupee1;
"256
[e = _rupee _rupee1 ]
[; ;newmain.c: 257: if(RD7==0)
"257
[e $ ! == -> _RD7 `i -> 0 `i 157  ]
[; ;newmain.c: 258: RB1=0;
"258
[e = _RB1 -> -> 0 `i `b ]
[e :U 157 ]
[; ;newmain.c: 259: TRISA1 = 0;
"259
[e = _TRISA1 -> -> 0 `i `b ]
[; ;newmain.c: 260: RA1=0;
"260
[e = _RA1 -> -> 0 `i `b ]
[; ;newmain.c: 261: TRISA0 = 1;
"261
[e = _TRISA0 -> -> 1 `i `b ]
[; ;newmain.c: 262: TRISA5 = 1;
"262
[e = _TRISA5 -> -> 1 `i `b ]
[; ;newmain.c: 263: TRISB6 = 1;
"263
[e = _TRISB6 -> -> 1 `i `b ]
[; ;newmain.c: 264: TRISB7 = 1;
"264
[e = _TRISB7 -> -> 1 `i `b ]
[; ;newmain.c: 265: Set_Channel(rupee);
"265
[e ( _Set_Channel (1 _rupee ]
[; ;newmain.c: 266: buzzer(50);count=0;coin_input=0;balance=0;
"266
[e ( _buzzer (1 -> -> 50 `i `ui ]
[e = _count -> -> 0 `i `ui ]
[e = _coin_input -> -> 0 `i `b ]
[e = _balance -> -> 0 `i `ui ]
[; ;newmain.c: 267: LCD_Clear();
"267
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 268: start = 1;
"268
[e = _start -> 1 `i ]
"269
}
[e :U 151 ]
[; ;newmain.c: 269: }
[; ;newmain.c: 271: if(!RA2)
"271
[e $ ! ! _RA2 158  ]
[; ;newmain.c: 272: {
"272
{
[; ;newmain.c: 273: while(!RA2);
"273
[e $U 159  ]
[e :U 160 ]
[e :U 159 ]
[e $ ! _RA2 160  ]
[e :U 161 ]
[; ;newmain.c: 274: M2:
"274
[e :U 162 ]
[; ;newmain.c: 275: if(padcount2==0)
"275
[e $ ! == _padcount2 -> -> 0 `i `ui 163  ]
[; ;newmain.c: 276: {
"276
{
[; ;newmain.c: 277: STOCK_EMPTY_ROUTINE();
"277
[e ( _STOCK_EMPTY_ROUTINE ..  ]
[; ;newmain.c: 278: break;
"278
[e $U 150  ]
"279
}
[e :U 163 ]
[; ;newmain.c: 279: }
[; ;newmain.c: 280: INTE=1;
"280
[e = _INTE -> -> 1 `i `b ]
[; ;newmain.c: 281: status=1;
"281
[e = _status -> -> 1 `i `b ]
[; ;newmain.c: 282: stock=2;
"282
[e = _stock -> -> 2 `i `ui ]
[; ;newmain.c: 283: padcount=padcount2;
"283
[e = _padcount _padcount2 ]
[; ;newmain.c: 284: rupee=rupee2;
"284
[e = _rupee _rupee2 ]
[; ;newmain.c: 285: if(RD5==0)
"285
[e $ ! == -> _RD5 `i -> 0 `i 164  ]
[; ;newmain.c: 286: RB1=0;
"286
[e = _RB1 -> -> 0 `i `b ]
[e :U 164 ]
[; ;newmain.c: 287: TRISA0 = 0;
"287
[e = _TRISA0 -> -> 0 `i `b ]
[; ;newmain.c: 288: RA2=0;
"288
[e = _RA2 -> -> 0 `i `b ]
[; ;newmain.c: 289: TRISA1 = 1;
"289
[e = _TRISA1 -> -> 1 `i `b ]
[; ;newmain.c: 290: TRISA5 = 1;
"290
[e = _TRISA5 -> -> 1 `i `b ]
[; ;newmain.c: 291: TRISB6 = 1;
"291
[e = _TRISB6 -> -> 1 `i `b ]
[; ;newmain.c: 292: TRISB7 = 1;
"292
[e = _TRISB7 -> -> 1 `i `b ]
[; ;newmain.c: 293: Set_Channel(rupee);
"293
[e ( _Set_Channel (1 _rupee ]
[; ;newmain.c: 294: buzzer(50);count=0;coin_input=0;balance=0;
"294
[e ( _buzzer (1 -> -> 50 `i `ui ]
[e = _count -> -> 0 `i `ui ]
[e = _coin_input -> -> 0 `i `b ]
[e = _balance -> -> 0 `i `ui ]
[; ;newmain.c: 295: LCD_Clear();
"295
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 296: start = 2;
"296
[e = _start -> 2 `i ]
"297
}
[e :U 158 ]
[; ;newmain.c: 297: }
[; ;newmain.c: 299: if(!RA5)
"299
[e $ ! ! _RA5 165  ]
[; ;newmain.c: 300: {
"300
{
[; ;newmain.c: 301: while(!RA5);
"301
[e $U 166  ]
[e :U 167 ]
[e :U 166 ]
[e $ ! _RA5 167  ]
[e :U 168 ]
[; ;newmain.c: 302: M3:
"302
[e :U 169 ]
[; ;newmain.c: 303: if(padcount3==0)
"303
[e $ ! == _padcount3 -> -> 0 `i `ui 170  ]
[; ;newmain.c: 304: {
"304
{
[; ;newmain.c: 305: STOCK_EMPTY_ROUTINE();break;
"305
[e ( _STOCK_EMPTY_ROUTINE ..  ]
[e $U 150  ]
"306
}
[e :U 170 ]
[; ;newmain.c: 306: }
[; ;newmain.c: 307: INTE=1;status=1;
"307
[e = _INTE -> -> 1 `i `b ]
[e = _status -> -> 1 `i `b ]
[; ;newmain.c: 308: stock=3;
"308
[e = _stock -> -> 3 `i `ui ]
[; ;newmain.c: 309: padcount=padcount3;
"309
[e = _padcount _padcount3 ]
[; ;newmain.c: 310: rupee=rupee3;
"310
[e = _rupee _rupee3 ]
[; ;newmain.c: 311: if(RC7==0)
"311
[e $ ! == -> _RC7 `i -> 0 `i 171  ]
[; ;newmain.c: 312: RB1=0;
"312
[e = _RB1 -> -> 0 `i `b ]
[e :U 171 ]
[; ;newmain.c: 313: TRISA5 = 0;
"313
[e = _TRISA5 -> -> 0 `i `b ]
[; ;newmain.c: 314: RA5=0;
"314
[e = _RA5 -> -> 0 `i `b ]
[; ;newmain.c: 315: TRISA1 = 1;
"315
[e = _TRISA1 -> -> 1 `i `b ]
[; ;newmain.c: 316: TRISA0 = 1;
"316
[e = _TRISA0 -> -> 1 `i `b ]
[; ;newmain.c: 317: TRISB6 = 1;
"317
[e = _TRISB6 -> -> 1 `i `b ]
[; ;newmain.c: 318: TRISB7 = 1;
"318
[e = _TRISB7 -> -> 1 `i `b ]
[; ;newmain.c: 319: Set_Channel(rupee);
"319
[e ( _Set_Channel (1 _rupee ]
[; ;newmain.c: 320: buzzer(50);count=0;coin_input=0;balance=0;
"320
[e ( _buzzer (1 -> -> 50 `i `ui ]
[e = _count -> -> 0 `i `ui ]
[e = _coin_input -> -> 0 `i `b ]
[e = _balance -> -> 0 `i `ui ]
[; ;newmain.c: 321: LCD_Clear();
"321
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 322: start = 3;
"322
[e = _start -> 3 `i ]
"323
}
[e :U 165 ]
[; ;newmain.c: 323: }
[; ;newmain.c: 324: if(!RB6)
"324
[e $ ! ! _RB6 172  ]
[; ;newmain.c: 325: {
"325
{
[; ;newmain.c: 326: while(!RB6);
"326
[e $U 173  ]
[e :U 174 ]
[e :U 173 ]
[e $ ! _RB6 174  ]
[e :U 175 ]
[; ;newmain.c: 327: M4:
"327
[e :U 176 ]
[; ;newmain.c: 328: if(padcount4==0)
"328
[e $ ! == _padcount4 -> -> 0 `i `ui 177  ]
[; ;newmain.c: 329: {
"329
{
[; ;newmain.c: 330: STOCK_EMPTY_ROUTINE();break;
"330
[e ( _STOCK_EMPTY_ROUTINE ..  ]
[e $U 150  ]
"331
}
[e :U 177 ]
[; ;newmain.c: 331: }
[; ;newmain.c: 332: INTE=1;status=1;
"332
[e = _INTE -> -> 1 `i `b ]
[e = _status -> -> 1 `i `b ]
[; ;newmain.c: 333: stock=4;
"333
[e = _stock -> -> 4 `i `ui ]
[; ;newmain.c: 334: padcount=padcount4;
"334
[e = _padcount _padcount4 ]
[; ;newmain.c: 335: rupee=rupee4;
"335
[e = _rupee _rupee4 ]
[; ;newmain.c: 336: if(RC5==0)
"336
[e $ ! == -> _RC5 `i -> 0 `i 178  ]
[; ;newmain.c: 337: RB1=0;
"337
[e = _RB1 -> -> 0 `i `b ]
[e :U 178 ]
[; ;newmain.c: 338: TRISB6 = 0;
"338
[e = _TRISB6 -> -> 0 `i `b ]
[; ;newmain.c: 339: RB6=0;
"339
[e = _RB6 -> -> 0 `i `b ]
[; ;newmain.c: 341: TRISA1 = 1;
"341
[e = _TRISA1 -> -> 1 `i `b ]
[; ;newmain.c: 342: TRISA0 = 1;
"342
[e = _TRISA0 -> -> 1 `i `b ]
[; ;newmain.c: 343: TRISA5 = 1;
"343
[e = _TRISA5 -> -> 1 `i `b ]
[; ;newmain.c: 344: TRISB7 = 1;
"344
[e = _TRISB7 -> -> 1 `i `b ]
[; ;newmain.c: 345: Set_Channel(rupee);
"345
[e ( _Set_Channel (1 _rupee ]
[; ;newmain.c: 346: buzzer(50);count=0;coin_input=0;balance=0;
"346
[e ( _buzzer (1 -> -> 50 `i `ui ]
[e = _count -> -> 0 `i `ui ]
[e = _coin_input -> -> 0 `i `b ]
[e = _balance -> -> 0 `i `ui ]
[; ;newmain.c: 347: LCD_Clear();
"347
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 348: start = 4;
"348
[e = _start -> 4 `i ]
"349
}
[e :U 172 ]
[; ;newmain.c: 349: }
[; ;newmain.c: 350: if(!RB7)
"350
[e $ ! ! _RB7 179  ]
[; ;newmain.c: 351: {
"351
{
[; ;newmain.c: 352: while(!RB7);
"352
[e $U 180  ]
[e :U 181 ]
[e :U 180 ]
[e $ ! _RB7 181  ]
[e :U 182 ]
[; ;newmain.c: 353: M5:
"353
[e :U 183 ]
[; ;newmain.c: 354: if(padcount5==0)
"354
[e $ ! == _padcount5 -> -> 0 `i `ui 184  ]
[; ;newmain.c: 355: {
"355
{
[; ;newmain.c: 356: STOCK_EMPTY_ROUTINE();break;
"356
[e ( _STOCK_EMPTY_ROUTINE ..  ]
[e $U 150  ]
"357
}
[e :U 184 ]
[; ;newmain.c: 357: }
[; ;newmain.c: 360: INTE=1;status=1;
"360
[e = _INTE -> -> 1 `i `b ]
[e = _status -> -> 1 `i `b ]
[; ;newmain.c: 361: stock=5;
"361
[e = _stock -> -> 5 `i `ui ]
[; ;newmain.c: 362: padcount=padcount5;
"362
[e = _padcount _padcount5 ]
[; ;newmain.c: 363: rupee=rupee5;
"363
[e = _rupee _rupee5 ]
[; ;newmain.c: 364: if(RD3==0)
"364
[e $ ! == -> _RD3 `i -> 0 `i 185  ]
[; ;newmain.c: 365: RB1=0;
"365
[e = _RB1 -> -> 0 `i `b ]
[e :U 185 ]
[; ;newmain.c: 366: TRISB7 = 0;
"366
[e = _TRISB7 -> -> 0 `i `b ]
[; ;newmain.c: 367: RB7=0;
"367
[e = _RB7 -> -> 0 `i `b ]
[; ;newmain.c: 368: TRISA1 = 1;
"368
[e = _TRISA1 -> -> 1 `i `b ]
[; ;newmain.c: 369: TRISA0 = 1;
"369
[e = _TRISA0 -> -> 1 `i `b ]
[; ;newmain.c: 370: TRISA5 = 1;
"370
[e = _TRISA5 -> -> 1 `i `b ]
[; ;newmain.c: 371: TRISB6 = 1;
"371
[e = _TRISB6 -> -> 1 `i `b ]
[; ;newmain.c: 372: Set_Channel(rupee);
"372
[e ( _Set_Channel (1 _rupee ]
[; ;newmain.c: 373: buzzer(50);count=0;coin_input=0;balance=0;
"373
[e ( _buzzer (1 -> -> 50 `i `ui ]
[e = _count -> -> 0 `i `ui ]
[e = _coin_input -> -> 0 `i `b ]
[e = _balance -> -> 0 `i `ui ]
[; ;newmain.c: 374: LCD_Clear();
"374
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 375: start = 5;
"375
[e = _start -> 5 `i ]
"376
}
[e :U 179 ]
[; ;newmain.c: 376: }
[; ;newmain.c: 377: if(RE3==0)
"377
[e $ ! == -> _RE3 `i -> 0 `i 186  ]
[; ;newmain.c: 378: {
"378
{
[; ;newmain.c: 379: while(RE3==0);
"379
[e $U 187  ]
[e :U 188 ]
[e :U 187 ]
[e $ == -> _RE3 `i -> 0 `i 188  ]
[e :U 189 ]
[; ;newmain.c: 380: status=0;
"380
[e = _status -> -> 0 `i `b ]
[; ;newmain.c: 381: menu=1;
"381
[e = _menu -> -> 1 `i `b ]
[; ;newmain.c: 382: buzzer(50);
"382
[e ( _buzzer (1 -> -> 50 `i `ui ]
[; ;newmain.c: 383: LCD_Clear();
"383
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 384: start = 0;
"384
[e = _start -> 0 `i ]
[; ;newmain.c: 385: break;
"385
[e $U 150  ]
"386
}
[e :U 186 ]
"387
}
[e :U 148 ]
"237
[e $ ! _status 149  ]
[e :U 150 ]
[; ;newmain.c: 386: }
[; ;newmain.c: 387: }
[; ;newmain.c: 389: while(status)
"389
[e $U 190  ]
[e :U 191 ]
[; ;newmain.c: 390: {
"390
{
[; ;newmain.c: 392: LCD_CmdWrite(0X80);
"392
[e ( _LCD_CmdWrite (1 -> -> 128 `i `uc ]
[; ;newmain.c: 393: LCD_DisplayString(" ROW_");
"393
[e ( _LCD_DisplayString (1 :s 9C ]
[; ;newmain.c: 394: switch(stock)
"394
[e $U 194  ]
[; ;newmain.c: 395: {
"395
{
[; ;newmain.c: 396: case 1: stock_data='1';break;
"396
[e :U 195 ]
[e = _stock_data -> -> 49 `ui `uc ]
[e $U 193  ]
[; ;newmain.c: 397: case 2: stock_data='2';break;
"397
[e :U 196 ]
[e = _stock_data -> -> 50 `ui `uc ]
[e $U 193  ]
[; ;newmain.c: 398: case 3: stock_data='3';break;
"398
[e :U 197 ]
[e = _stock_data -> -> 51 `ui `uc ]
[e $U 193  ]
[; ;newmain.c: 399: case 4: stock_data='4';break;
"399
[e :U 198 ]
[e = _stock_data -> -> 52 `ui `uc ]
[e $U 193  ]
[; ;newmain.c: 400: case 5: stock_data='5';break;
"400
[e :U 199 ]
[e = _stock_data -> -> 53 `ui `uc ]
[e $U 193  ]
"401
}
[; ;newmain.c: 401: }
[e $U 193  ]
"394
[e :U 194 ]
[e [\ _stock , $ -> -> 1 `i `ui 195
 , $ -> -> 2 `i `ui 196
 , $ -> -> 3 `i `ui 197
 , $ -> -> 4 `i `ui 198
 , $ -> -> 5 `i `ui 199
 193 ]
"401
[e :U 193 ]
[; ;newmain.c: 402: LCD_DataWrite(stock_data);
"402
[e ( _LCD_DataWrite (1 _stock_data ]
[; ;newmain.c: 403: LCD_DataWrite(':');
"403
[e ( _LCD_DataWrite (1 -> -> 58 `ui `uc ]
[; ;newmain.c: 404: display(padcount);
"404
[e ( _display (1 -> _padcount `i ]
[; ;newmain.c: 405: LCD_DisplayString(" / ");
"405
[e ( _LCD_DisplayString (1 :s 10C ]
[; ;newmain.c: 406: LCD_DataWrite(0x00);
"406
[e ( _LCD_DataWrite (1 -> -> 0 `i `uc ]
[; ;newmain.c: 407: display_price(rupee);
"407
[e ( _display_price (1 -> _rupee `i ]
[; ;newmain.c: 408: LCD_CmdWrite(0XC0);
"408
[e ( _LCD_CmdWrite (1 -> -> 192 `i `uc ]
[; ;newmain.c: 409: LCD_DisplayString(" INSERT NOTES...");
"409
[e ( _LCD_DisplayString (1 :s 11C ]
[; ;newmain.c: 412: if(!RA4)
"412
[e $ ! ! _RA4 200  ]
[; ;newmain.c: 413: {
"413
{
[; ;newmain.c: 414: while(!RA4);
"414
[e $U 201  ]
[e :U 202 ]
[e :U 201 ]
[e $ ! _RA4 202  ]
[e :U 203 ]
[; ;newmain.c: 415: padcount=0;rupee=0;stock=0;
"415
[e = _padcount -> -> 0 `i `ui ]
[e = _rupee -> -> 0 `i `ui ]
[e = _stock -> -> 0 `i `ui ]
[; ;newmain.c: 416: INTE=0;RB1=1;
"416
[e = _INTE -> -> 0 `i `b ]
[e = _RB1 -> -> 1 `i `b ]
[; ;newmain.c: 417: status=0;
"417
[e = _status -> -> 0 `i `b ]
[; ;newmain.c: 418: TRISA1 = 1;
"418
[e = _TRISA1 -> -> 1 `i `b ]
[; ;newmain.c: 419: TRISA0 = 1;
"419
[e = _TRISA0 -> -> 1 `i `b ]
[; ;newmain.c: 420: TRISA5 = 1;
"420
[e = _TRISA5 -> -> 1 `i `b ]
[; ;newmain.c: 421: TRISB6 = 1;
"421
[e = _TRISB6 -> -> 1 `i `b ]
[; ;newmain.c: 422: TRISB7 = 1;
"422
[e = _TRISB7 -> -> 1 `i `b ]
[; ;newmain.c: 423: LCD_Clear();
"423
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 424: buzzer(50);
"424
[e ( _buzzer (1 -> -> 50 `i `ui ]
[; ;newmain.c: 425: start = 0;
"425
[e = _start -> 0 `i ]
"426
}
[e :U 200 ]
[; ;newmain.c: 426: }
[; ;newmain.c: 430: if(start == 1)
"430
[e $ ! == _start -> 1 `i 204  ]
[; ;newmain.c: 431: {
"431
{
[; ;newmain.c: 432: if(RE3==0)
"432
[e $ ! == -> _RE3 `i -> 0 `i 205  ]
[; ;newmain.c: 433: {
"433
{
[; ;newmain.c: 434: while(RE3==0);
"434
[e $U 206  ]
[e :U 207 ]
[e :U 206 ]
[e $ == -> _RE3 `i -> 0 `i 207  ]
[e :U 208 ]
[; ;newmain.c: 435: status=0;
"435
[e = _status -> -> 0 `i `b ]
[; ;newmain.c: 436: menu=1;
"436
[e = _menu -> -> 1 `i `b ]
[; ;newmain.c: 437: buzzer(50);
"437
[e ( _buzzer (1 -> -> 50 `i `ui ]
[; ;newmain.c: 438: LCD_Clear();
"438
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 439: start = 0;
"439
[e = _start -> 0 `i ]
[; ;newmain.c: 440: break;
"440
[e $U 192  ]
"441
}
[e :U 205 ]
[; ;newmain.c: 441: }
[; ;newmain.c: 442: if(!RA2)
"442
[e $ ! ! _RA2 209  ]
[; ;newmain.c: 443: {
"443
{
[; ;newmain.c: 444: while(!RA2);
"444
[e $U 210  ]
[e :U 211 ]
[e :U 210 ]
[e $ ! _RA2 211  ]
[e :U 212 ]
[; ;newmain.c: 445: escprocess();
"445
[e ( _escprocess ..  ]
[; ;newmain.c: 446: goto M2;
"446
[e $U 162  ]
"447
}
[e :U 209 ]
[; ;newmain.c: 447: }
[; ;newmain.c: 448: if(!RA5)
"448
[e $ ! ! _RA5 213  ]
[; ;newmain.c: 449: {
"449
{
[; ;newmain.c: 450: while(!RA5);
"450
[e $U 214  ]
[e :U 215 ]
[e :U 214 ]
[e $ ! _RA5 215  ]
[e :U 216 ]
[; ;newmain.c: 451: escprocess();
"451
[e ( _escprocess ..  ]
[; ;newmain.c: 452: goto M3;
"452
[e $U 169  ]
"453
}
[e :U 213 ]
[; ;newmain.c: 453: }
[; ;newmain.c: 454: if(!RB6)
"454
[e $ ! ! _RB6 217  ]
[; ;newmain.c: 455: {
"455
{
[; ;newmain.c: 456: while(!RB6);
"456
[e $U 218  ]
[e :U 219 ]
[e :U 218 ]
[e $ ! _RB6 219  ]
[e :U 220 ]
[; ;newmain.c: 457: escprocess();
"457
[e ( _escprocess ..  ]
[; ;newmain.c: 458: goto M4;
"458
[e $U 176  ]
"459
}
[e :U 217 ]
[; ;newmain.c: 459: }
[; ;newmain.c: 460: if(!RB7)
"460
[e $ ! ! _RB7 221  ]
[; ;newmain.c: 461: {
"461
{
[; ;newmain.c: 462: while(!RB7);
"462
[e $U 222  ]
[e :U 223 ]
[e :U 222 ]
[e $ ! _RB7 223  ]
[e :U 224 ]
[; ;newmain.c: 463: escprocess();
"463
[e ( _escprocess ..  ]
[; ;newmain.c: 464: goto M5;
"464
[e $U 183  ]
"465
}
[e :U 221 ]
"466
}
[e :U 204 ]
[; ;newmain.c: 465: }
[; ;newmain.c: 466: }
[; ;newmain.c: 467: if(start == 2)
"467
[e $ ! == _start -> 2 `i 225  ]
[; ;newmain.c: 468: {
"468
{
[; ;newmain.c: 469: if(RE3==0)
"469
[e $ ! == -> _RE3 `i -> 0 `i 226  ]
[; ;newmain.c: 470: {
"470
{
[; ;newmain.c: 471: while(RE3==0);
"471
[e $U 227  ]
[e :U 228 ]
[e :U 227 ]
[e $ == -> _RE3 `i -> 0 `i 228  ]
[e :U 229 ]
[; ;newmain.c: 472: status=0;
"472
[e = _status -> -> 0 `i `b ]
[; ;newmain.c: 473: menu=1;
"473
[e = _menu -> -> 1 `i `b ]
[; ;newmain.c: 474: buzzer(50);
"474
[e ( _buzzer (1 -> -> 50 `i `ui ]
[; ;newmain.c: 475: start = 0;
"475
[e = _start -> 0 `i ]
[; ;newmain.c: 476: LCD_Clear();
"476
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 477: break;
"477
[e $U 192  ]
"478
}
[e :U 226 ]
[; ;newmain.c: 478: }
[; ;newmain.c: 480: if(!RA1)
"480
[e $ ! ! _RA1 230  ]
[; ;newmain.c: 481: {
"481
{
[; ;newmain.c: 482: while(!RA1);
"482
[e $U 231  ]
[e :U 232 ]
[e :U 231 ]
[e $ ! _RA1 232  ]
[e :U 233 ]
[; ;newmain.c: 483: escprocess();
"483
[e ( _escprocess ..  ]
[; ;newmain.c: 484: goto M1;
"484
[e $U 155  ]
"485
}
[e :U 230 ]
[; ;newmain.c: 485: }
[; ;newmain.c: 486: if(!RA5)
"486
[e $ ! ! _RA5 234  ]
[; ;newmain.c: 487: {
"487
{
[; ;newmain.c: 488: while(!RA5);
"488
[e $U 235  ]
[e :U 236 ]
[e :U 235 ]
[e $ ! _RA5 236  ]
[e :U 237 ]
[; ;newmain.c: 489: escprocess();
"489
[e ( _escprocess ..  ]
[; ;newmain.c: 490: goto M3;
"490
[e $U 169  ]
"491
}
[e :U 234 ]
[; ;newmain.c: 491: }
[; ;newmain.c: 492: if(!RB6)
"492
[e $ ! ! _RB6 238  ]
[; ;newmain.c: 493: {
"493
{
[; ;newmain.c: 494: while(!RB6);
"494
[e $U 239  ]
[e :U 240 ]
[e :U 239 ]
[e $ ! _RB6 240  ]
[e :U 241 ]
[; ;newmain.c: 495: escprocess();
"495
[e ( _escprocess ..  ]
[; ;newmain.c: 496: goto M4;
"496
[e $U 176  ]
"497
}
[e :U 238 ]
[; ;newmain.c: 497: }
[; ;newmain.c: 498: if(!RB7)
"498
[e $ ! ! _RB7 242  ]
[; ;newmain.c: 499: {
"499
{
[; ;newmain.c: 500: while(!RB7);
"500
[e $U 243  ]
[e :U 244 ]
[e :U 243 ]
[e $ ! _RB7 244  ]
[e :U 245 ]
[; ;newmain.c: 501: escprocess();
"501
[e ( _escprocess ..  ]
[; ;newmain.c: 502: goto M5;
"502
[e $U 183  ]
"503
}
[e :U 242 ]
"506
}
[e :U 225 ]
[; ;newmain.c: 503: }
[; ;newmain.c: 506: }
[; ;newmain.c: 507: if(start == 3)
"507
[e $ ! == _start -> 3 `i 246  ]
[; ;newmain.c: 508: {
"508
{
[; ;newmain.c: 509: if(RE3==0)
"509
[e $ ! == -> _RE3 `i -> 0 `i 247  ]
[; ;newmain.c: 510: {
"510
{
[; ;newmain.c: 511: while(RE3==0);
"511
[e $U 248  ]
[e :U 249 ]
[e :U 248 ]
[e $ == -> _RE3 `i -> 0 `i 249  ]
[e :U 250 ]
[; ;newmain.c: 512: status=0;
"512
[e = _status -> -> 0 `i `b ]
[; ;newmain.c: 513: menu=1;
"513
[e = _menu -> -> 1 `i `b ]
[; ;newmain.c: 514: buzzer(50);
"514
[e ( _buzzer (1 -> -> 50 `i `ui ]
[; ;newmain.c: 515: LCD_Clear();
"515
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 516: start = 0;
"516
[e = _start -> 0 `i ]
[; ;newmain.c: 517: break;
"517
[e $U 192  ]
"518
}
[e :U 247 ]
[; ;newmain.c: 518: }
[; ;newmain.c: 519: if(!RA1)
"519
[e $ ! ! _RA1 251  ]
[; ;newmain.c: 520: {
"520
{
[; ;newmain.c: 521: while(!RA1);
"521
[e $U 252  ]
[e :U 253 ]
[e :U 252 ]
[e $ ! _RA1 253  ]
[e :U 254 ]
[; ;newmain.c: 522: escprocess();
"522
[e ( _escprocess ..  ]
[; ;newmain.c: 523: goto M1;
"523
[e $U 155  ]
"524
}
[e :U 251 ]
[; ;newmain.c: 524: }
[; ;newmain.c: 525: if(!RA2)
"525
[e $ ! ! _RA2 255  ]
[; ;newmain.c: 526: {
"526
{
[; ;newmain.c: 527: while(!RA2);
"527
[e $U 256  ]
[e :U 257 ]
[e :U 256 ]
[e $ ! _RA2 257  ]
[e :U 258 ]
[; ;newmain.c: 528: escprocess();
"528
[e ( _escprocess ..  ]
[; ;newmain.c: 529: goto M2;
"529
[e $U 162  ]
"530
}
[e :U 255 ]
[; ;newmain.c: 530: }
[; ;newmain.c: 531: if(!RB6)
"531
[e $ ! ! _RB6 259  ]
[; ;newmain.c: 532: {
"532
{
[; ;newmain.c: 533: while(!RB6);
"533
[e $U 260  ]
[e :U 261 ]
[e :U 260 ]
[e $ ! _RB6 261  ]
[e :U 262 ]
[; ;newmain.c: 534: escprocess();
"534
[e ( _escprocess ..  ]
[; ;newmain.c: 535: goto M4;
"535
[e $U 176  ]
"536
}
[e :U 259 ]
[; ;newmain.c: 536: }
[; ;newmain.c: 537: if(!RB7)
"537
[e $ ! ! _RB7 263  ]
[; ;newmain.c: 538: {
"538
{
[; ;newmain.c: 539: while(!RB7);
"539
[e $U 264  ]
[e :U 265 ]
[e :U 264 ]
[e $ ! _RB7 265  ]
[e :U 266 ]
[; ;newmain.c: 540: escprocess();
"540
[e ( _escprocess ..  ]
[; ;newmain.c: 541: goto M5;
"541
[e $U 183  ]
"542
}
[e :U 263 ]
"543
}
[e :U 246 ]
[; ;newmain.c: 542: }
[; ;newmain.c: 543: }
[; ;newmain.c: 544: if(start == 4)
"544
[e $ ! == _start -> 4 `i 267  ]
[; ;newmain.c: 545: {
"545
{
[; ;newmain.c: 546: if(RE3==0)
"546
[e $ ! == -> _RE3 `i -> 0 `i 268  ]
[; ;newmain.c: 547: {
"547
{
[; ;newmain.c: 548: while(RE3==0);
"548
[e $U 269  ]
[e :U 270 ]
[e :U 269 ]
[e $ == -> _RE3 `i -> 0 `i 270  ]
[e :U 271 ]
[; ;newmain.c: 549: status=0;
"549
[e = _status -> -> 0 `i `b ]
[; ;newmain.c: 550: menu=1;
"550
[e = _menu -> -> 1 `i `b ]
[; ;newmain.c: 551: buzzer(50);
"551
[e ( _buzzer (1 -> -> 50 `i `ui ]
[; ;newmain.c: 552: LCD_Clear();
"552
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 553: start = 0;
"553
[e = _start -> 0 `i ]
[; ;newmain.c: 554: break;
"554
[e $U 192  ]
"555
}
[e :U 268 ]
[; ;newmain.c: 555: }
[; ;newmain.c: 556: if(!RA1)
"556
[e $ ! ! _RA1 272  ]
[; ;newmain.c: 557: {
"557
{
[; ;newmain.c: 558: while(!RA1);
"558
[e $U 273  ]
[e :U 274 ]
[e :U 273 ]
[e $ ! _RA1 274  ]
[e :U 275 ]
[; ;newmain.c: 559: escprocess();
"559
[e ( _escprocess ..  ]
[; ;newmain.c: 560: goto M1;
"560
[e $U 155  ]
"561
}
[e :U 272 ]
[; ;newmain.c: 561: }
[; ;newmain.c: 562: if(!RA2)
"562
[e $ ! ! _RA2 276  ]
[; ;newmain.c: 563: {
"563
{
[; ;newmain.c: 564: while(!RA2);
"564
[e $U 277  ]
[e :U 278 ]
[e :U 277 ]
[e $ ! _RA2 278  ]
[e :U 279 ]
[; ;newmain.c: 565: escprocess();
"565
[e ( _escprocess ..  ]
[; ;newmain.c: 566: goto M2;
"566
[e $U 162  ]
"567
}
[e :U 276 ]
[; ;newmain.c: 567: }
[; ;newmain.c: 568: if(!RA5)
"568
[e $ ! ! _RA5 280  ]
[; ;newmain.c: 569: {
"569
{
[; ;newmain.c: 570: while(!RA5);
"570
[e $U 281  ]
[e :U 282 ]
[e :U 281 ]
[e $ ! _RA5 282  ]
[e :U 283 ]
[; ;newmain.c: 571: escprocess();
"571
[e ( _escprocess ..  ]
[; ;newmain.c: 572: goto M3;
"572
[e $U 169  ]
"573
}
[e :U 280 ]
[; ;newmain.c: 573: }
[; ;newmain.c: 574: if(!RB7)
"574
[e $ ! ! _RB7 284  ]
[; ;newmain.c: 575: {
"575
{
[; ;newmain.c: 576: while(!RB7);
"576
[e $U 285  ]
[e :U 286 ]
[e :U 285 ]
[e $ ! _RB7 286  ]
[e :U 287 ]
[; ;newmain.c: 577: escprocess();
"577
[e ( _escprocess ..  ]
[; ;newmain.c: 578: goto M5;
"578
[e $U 183  ]
"579
}
[e :U 284 ]
"581
}
[e :U 267 ]
[; ;newmain.c: 579: }
[; ;newmain.c: 581: }
[; ;newmain.c: 582: if(start == 5)
"582
[e $ ! == _start -> 5 `i 288  ]
[; ;newmain.c: 583: {
"583
{
[; ;newmain.c: 584: if(RE3==0)
"584
[e $ ! == -> _RE3 `i -> 0 `i 289  ]
[; ;newmain.c: 585: {
"585
{
[; ;newmain.c: 586: while(RE3==0);
"586
[e $U 290  ]
[e :U 291 ]
[e :U 290 ]
[e $ == -> _RE3 `i -> 0 `i 291  ]
[e :U 292 ]
[; ;newmain.c: 587: status=0;
"587
[e = _status -> -> 0 `i `b ]
[; ;newmain.c: 588: menu=1;
"588
[e = _menu -> -> 1 `i `b ]
[; ;newmain.c: 589: buzzer(50);
"589
[e ( _buzzer (1 -> -> 50 `i `ui ]
[; ;newmain.c: 590: LCD_Clear();
"590
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 591: start = 0;
"591
[e = _start -> 0 `i ]
[; ;newmain.c: 592: break;
"592
[e $U 192  ]
"593
}
[e :U 289 ]
[; ;newmain.c: 593: }
[; ;newmain.c: 594: if(!RA1)
"594
[e $ ! ! _RA1 293  ]
[; ;newmain.c: 595: {
"595
{
[; ;newmain.c: 596: while(!RA1);
"596
[e $U 294  ]
[e :U 295 ]
[e :U 294 ]
[e $ ! _RA1 295  ]
[e :U 296 ]
[; ;newmain.c: 597: escprocess();
"597
[e ( _escprocess ..  ]
[; ;newmain.c: 598: goto M1;
"598
[e $U 155  ]
"599
}
[e :U 293 ]
[; ;newmain.c: 599: }
[; ;newmain.c: 600: if(!RA2)
"600
[e $ ! ! _RA2 297  ]
[; ;newmain.c: 601: {
"601
{
[; ;newmain.c: 602: while(!RA2);
"602
[e $U 298  ]
[e :U 299 ]
[e :U 298 ]
[e $ ! _RA2 299  ]
[e :U 300 ]
[; ;newmain.c: 603: escprocess();
"603
[e ( _escprocess ..  ]
[; ;newmain.c: 604: goto M2;
"604
[e $U 162  ]
"605
}
[e :U 297 ]
[; ;newmain.c: 605: }
[; ;newmain.c: 606: if(!RA5)
"606
[e $ ! ! _RA5 301  ]
[; ;newmain.c: 607: {
"607
{
[; ;newmain.c: 608: while(!RA5);
"608
[e $U 302  ]
[e :U 303 ]
[e :U 302 ]
[e $ ! _RA5 303  ]
[e :U 304 ]
[; ;newmain.c: 609: escprocess();
"609
[e ( _escprocess ..  ]
[; ;newmain.c: 610: goto M3;
"610
[e $U 169  ]
"611
}
[e :U 301 ]
[; ;newmain.c: 611: }
[; ;newmain.c: 612: if(!RB6)
"612
[e $ ! ! _RB6 305  ]
[; ;newmain.c: 613: {
"613
{
[; ;newmain.c: 614: while(!RB6);
"614
[e $U 306  ]
[e :U 307 ]
[e :U 306 ]
[e $ ! _RB6 307  ]
[e :U 308 ]
[; ;newmain.c: 615: escprocess();
"615
[e ( _escprocess ..  ]
[; ;newmain.c: 616: goto M4;
"616
[e $U 176  ]
"617
}
[e :U 305 ]
"619
}
[e :U 288 ]
[; ;newmain.c: 617: }
[; ;newmain.c: 619: }
[; ;newmain.c: 620: while(coin_input)
"620
[e $U 309  ]
[e :U 310 ]
[; ;newmain.c: 621: {
"621
{
[; ;newmain.c: 622: LCD_CmdWrite(0X80);
"622
[e ( _LCD_CmdWrite (1 -> -> 128 `i `uc ]
[; ;newmain.c: 623: LCD_DisplayString("  BALANCE: ");
"623
[e ( _LCD_DisplayString (1 :s 12C ]
[; ;newmain.c: 624: LCD_DataWrite(0x00);
"624
[e ( _LCD_DataWrite (1 -> -> 0 `i `uc ]
[; ;newmain.c: 625: display(balance);
"625
[e ( _display (1 -> _balance `i ]
[; ;newmain.c: 626: LCD_DisplayString("  ");
"626
[e ( _LCD_DisplayString (1 :s 13C ]
[; ;newmain.c: 627: LCD_CmdWrite(0XC0);
"627
[e ( _LCD_CmdWrite (1 -> -> 192 `i `uc ]
[; ;newmain.c: 628: LCD_DisplayString(" INSERT NOTES.. ");
"628
[e ( _LCD_DisplayString (1 :s 14C ]
"629
}
[e :U 309 ]
"620
[e $ _coin_input 310  ]
[e :U 311 ]
[; ;newmain.c: 629: }
[; ;newmain.c: 631: if((motor)&&(!coin_input))
"631
[e $ ! && _motor ! _coin_input 312  ]
[; ;newmain.c: 632: {
"632
{
[; ;newmain.c: 633: motor=0;
"633
[e = _motor -> -> 0 `i `b ]
[; ;newmain.c: 634: switch(stock)
"634
[e $U 314  ]
[; ;newmain.c: 635: {
"635
{
[; ;newmain.c: 636: case 1: while(RD7==1);break;
"636
[e :U 315 ]
[e $U 316  ]
[e :U 317 ]
[e :U 316 ]
[e $ == -> _RD7 `i -> 1 `i 317  ]
[e :U 318 ]
[e $U 313  ]
[; ;newmain.c: 637: case 2: while(RD5==1);break;
"637
[e :U 319 ]
[e $U 320  ]
[e :U 321 ]
[e :U 320 ]
[e $ == -> _RD5 `i -> 1 `i 321  ]
[e :U 322 ]
[e $U 313  ]
[; ;newmain.c: 638: case 3: while(RC7==1);break;
"638
[e :U 323 ]
[e $U 324  ]
[e :U 325 ]
[e :U 324 ]
[e $ == -> _RC7 `i -> 1 `i 325  ]
[e :U 326 ]
[e $U 313  ]
[; ;newmain.c: 639: case 4: while(RC5==1);break;
"639
[e :U 327 ]
[e $U 328  ]
[e :U 329 ]
[e :U 328 ]
[e $ == -> _RC5 `i -> 1 `i 329  ]
[e :U 330 ]
[e $U 313  ]
[; ;newmain.c: 640: case 5: while(RD3==1);break;
"640
[e :U 331 ]
[e $U 332  ]
[e :U 333 ]
[e :U 332 ]
[e $ == -> _RD3 `i -> 1 `i 333  ]
[e :U 334 ]
[e $U 313  ]
"641
}
[; ;newmain.c: 641: }
[e $U 313  ]
"634
[e :U 314 ]
[e [\ _stock , $ -> -> 1 `i `ui 315
 , $ -> -> 2 `i `ui 319
 , $ -> -> 3 `i `ui 323
 , $ -> -> 4 `i `ui 327
 , $ -> -> 5 `i `ui 331
 313 ]
"641
[e :U 313 ]
[; ;newmain.c: 643: LCD_Clear();
"643
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 644: LCD_CmdWrite(0X80);
"644
[e ( _LCD_CmdWrite (1 -> -> 128 `i `uc ]
[; ;newmain.c: 645: LCD_DisplayString("  PROCESSING...");
"645
[e ( _LCD_DisplayString (1 :s 15C ]
[; ;newmain.c: 646: LCD_CmdWrite(0XC0);
"646
[e ( _LCD_CmdWrite (1 -> -> 192 `i `uc ]
[; ;newmain.c: 647: LCD_DisplayString(" PLEASE WAIT...");
"647
[e ( _LCD_DisplayString (1 :s 16C ]
[; ;newmain.c: 648: buzzer(50);
"648
[e ( _buzzer (1 -> -> 50 `i `ui ]
[; ;newmain.c: 650: switch(stock)
"650
[e $U 336  ]
[; ;newmain.c: 651: {
"651
{
[; ;newmain.c: 652: case 1: RD6=1;break;
"652
[e :U 337 ]
[e = _RD6 -> -> 1 `i `b ]
[e $U 335  ]
[; ;newmain.c: 653: case 2: RD4=1;break;
"653
[e :U 338 ]
[e = _RD4 -> -> 1 `i `b ]
[e $U 335  ]
[; ;newmain.c: 654: case 3: RC6=1;break;
"654
[e :U 339 ]
[e = _RC6 -> -> 1 `i `b ]
[e $U 335  ]
[; ;newmain.c: 655: case 4: RC4=1;break;
"655
[e :U 340 ]
[e = _RC4 -> -> 1 `i `b ]
[e $U 335  ]
[; ;newmain.c: 656: case 5: RD2=1;break;
"656
[e :U 341 ]
[e = _RD2 -> -> 1 `i `b ]
[e $U 335  ]
"657
}
[; ;newmain.c: 657: }
[e $U 335  ]
"650
[e :U 336 ]
[e [\ _stock , $ -> -> 1 `i `ui 337
 , $ -> -> 2 `i `ui 338
 , $ -> -> 3 `i `ui 339
 , $ -> -> 4 `i `ui 340
 , $ -> -> 5 `i `ui 341
 335 ]
"657
[e :U 335 ]
[; ;newmain.c: 659: _delay((unsigned long)((2000)*(4000000/4000.0)));
"659
[e ( __delay (1 -> * -> -> 2000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 661: switch(stock)
"661
[e $U 343  ]
[; ;newmain.c: 662: {
"662
{
[; ;newmain.c: 663: case 1: while(RD7==0);break;
"663
[e :U 344 ]
[e $U 345  ]
[e :U 346 ]
[e :U 345 ]
[e $ == -> _RD7 `i -> 0 `i 346  ]
[e :U 347 ]
[e $U 342  ]
[; ;newmain.c: 664: case 2: while(RD5==0);break;
"664
[e :U 348 ]
[e $U 349  ]
[e :U 350 ]
[e :U 349 ]
[e $ == -> _RD5 `i -> 0 `i 350  ]
[e :U 351 ]
[e $U 342  ]
[; ;newmain.c: 665: case 3: while(RC7==0);break;
"665
[e :U 352 ]
[e $U 353  ]
[e :U 354 ]
[e :U 353 ]
[e $ == -> _RC7 `i -> 0 `i 354  ]
[e :U 355 ]
[e $U 342  ]
[; ;newmain.c: 666: case 4: while(RC5==0);break;
"666
[e :U 356 ]
[e $U 357  ]
[e :U 358 ]
[e :U 357 ]
[e $ == -> _RC5 `i -> 0 `i 358  ]
[e :U 359 ]
[e $U 342  ]
[; ;newmain.c: 667: case 5: while(RD3==0);break;
"667
[e :U 360 ]
[e $U 361  ]
[e :U 362 ]
[e :U 361 ]
[e $ == -> _RD3 `i -> 0 `i 362  ]
[e :U 363 ]
[e $U 342  ]
"668
}
[; ;newmain.c: 668: }
[e $U 342  ]
"661
[e :U 343 ]
[e [\ _stock , $ -> -> 1 `i `ui 344
 , $ -> -> 2 `i `ui 348
 , $ -> -> 3 `i `ui 352
 , $ -> -> 4 `i `ui 356
 , $ -> -> 5 `i `ui 360
 342 ]
"668
[e :U 342 ]
[; ;newmain.c: 670: switch(stock)
"670
[e $U 365  ]
[; ;newmain.c: 671: {
"671
{
[; ;newmain.c: 672: case 1: RD6=0;break;
"672
[e :U 366 ]
[e = _RD6 -> -> 0 `i `b ]
[e $U 364  ]
[; ;newmain.c: 673: case 2: RD4=0;break;
"673
[e :U 367 ]
[e = _RD4 -> -> 0 `i `b ]
[e $U 364  ]
[; ;newmain.c: 674: case 3: RC6=0;break;
"674
[e :U 368 ]
[e = _RC6 -> -> 0 `i `b ]
[e $U 364  ]
[; ;newmain.c: 675: case 4: RC4=0;break;
"675
[e :U 369 ]
[e = _RC4 -> -> 0 `i `b ]
[e $U 364  ]
[; ;newmain.c: 676: case 5: RD2=0;break;
"676
[e :U 370 ]
[e = _RD2 -> -> 0 `i `b ]
[e $U 364  ]
"677
}
[; ;newmain.c: 677: }
[e $U 364  ]
"670
[e :U 365 ]
[e [\ _stock , $ -> -> 1 `i `ui 366
 , $ -> -> 2 `i `ui 367
 , $ -> -> 3 `i `ui 368
 , $ -> -> 4 `i `ui 369
 , $ -> -> 5 `i `ui 370
 364 ]
"677
[e :U 364 ]
[; ;newmain.c: 679: switch(stock)
"679
[e $U 372  ]
[; ;newmain.c: 680: {
"680
{
[; ;newmain.c: 681: case 1: while(RD7==1);break;
"681
[e :U 373 ]
[e $U 374  ]
[e :U 375 ]
[e :U 374 ]
[e $ == -> _RD7 `i -> 1 `i 375  ]
[e :U 376 ]
[e $U 371  ]
[; ;newmain.c: 682: case 2: while(RD5==1);break;
"682
[e :U 377 ]
[e $U 378  ]
[e :U 379 ]
[e :U 378 ]
[e $ == -> _RD5 `i -> 1 `i 379  ]
[e :U 380 ]
[e $U 371  ]
[; ;newmain.c: 683: case 3: while(RC7==1);break;
"683
[e :U 381 ]
[e $U 382  ]
[e :U 383 ]
[e :U 382 ]
[e $ == -> _RC7 `i -> 1 `i 383  ]
[e :U 384 ]
[e $U 371  ]
[; ;newmain.c: 684: case 4: while(RC5==1);break;
"684
[e :U 385 ]
[e $U 386  ]
[e :U 387 ]
[e :U 386 ]
[e $ == -> _RC5 `i -> 1 `i 387  ]
[e :U 388 ]
[e $U 371  ]
[; ;newmain.c: 685: case 5: while(RD3==1);break;
"685
[e :U 389 ]
[e $U 390  ]
[e :U 391 ]
[e :U 390 ]
[e $ == -> _RD3 `i -> 1 `i 391  ]
[e :U 392 ]
[e $U 371  ]
"686
}
[; ;newmain.c: 686: }
[e $U 371  ]
"679
[e :U 372 ]
[e [\ _stock , $ -> -> 1 `i `ui 373
 , $ -> -> 2 `i `ui 377
 , $ -> -> 3 `i `ui 381
 , $ -> -> 4 `i `ui 385
 , $ -> -> 5 `i `ui 389
 371 ]
"686
[e :U 371 ]
[; ;newmain.c: 688: padcount--;
"688
[e -- _padcount -> -> 1 `i `ui ]
[; ;newmain.c: 690: switch(stock)
"690
[e $U 394  ]
[; ;newmain.c: 691: {
"691
{
[; ;newmain.c: 692: case 1: padcount1=padcount; Write_EEPROM(2,3,padcount1);break;
"692
[e :U 395 ]
[e = _padcount1 _padcount ]
[e ( _Write_EEPROM (3 , , -> -> 2 `i `uc -> -> 3 `i `uc _padcount1 ]
[e $U 393  ]
[; ;newmain.c: 693: case 2: padcount2=padcount; Write_EEPROM(6,7,padcount2);break;
"693
[e :U 396 ]
[e = _padcount2 _padcount ]
[e ( _Write_EEPROM (3 , , -> -> 6 `i `uc -> -> 7 `i `uc _padcount2 ]
[e $U 393  ]
[; ;newmain.c: 694: case 3: padcount3=padcount; Write_EEPROM(0X0A,0X0B,padcount3);break;
"694
[e :U 397 ]
[e = _padcount3 _padcount ]
[e ( _Write_EEPROM (3 , , -> -> 10 `i `uc -> -> 11 `i `uc _padcount3 ]
[e $U 393  ]
[; ;newmain.c: 695: case 4: padcount4=padcount; Write_EEPROM(0X0E,0X0F,padcount4);break;
"695
[e :U 398 ]
[e = _padcount4 _padcount ]
[e ( _Write_EEPROM (3 , , -> -> 14 `i `uc -> -> 15 `i `uc _padcount4 ]
[e $U 393  ]
[; ;newmain.c: 696: case 5: padcount5=padcount; Write_EEPROM(0X12,0X13,padcount5);break;
"696
[e :U 399 ]
[e = _padcount5 _padcount ]
[e ( _Write_EEPROM (3 , , -> -> 18 `i `uc -> -> 19 `i `uc _padcount5 ]
[e $U 393  ]
"698
}
[; ;newmain.c: 698: }
[e $U 393  ]
"690
[e :U 394 ]
[e [\ _stock , $ -> -> 1 `i `ui 395
 , $ -> -> 2 `i `ui 396
 , $ -> -> 3 `i `ui 397
 , $ -> -> 4 `i `ui 398
 , $ -> -> 5 `i `ui 399
 393 ]
"698
[e :U 393 ]
[; ;newmain.c: 700: LCD_CmdWrite(0X80);
"700
[e ( _LCD_CmdWrite (1 -> -> 128 `i `uc ]
[; ;newmain.c: 701: LCD_DisplayString(" PLEASE COLLECT ");
"701
[e ( _LCD_DisplayString (1 :s 17C ]
[; ;newmain.c: 702: LCD_CmdWrite(0XC0);
"702
[e ( _LCD_CmdWrite (1 -> -> 192 `i `uc ]
[; ;newmain.c: 703: LCD_DisplayString("   THANK YOU !   ");
"703
[e ( _LCD_DisplayString (1 :s 18C ]
[; ;newmain.c: 706: buzzer(2000);
"706
[e ( _buzzer (1 -> -> 2000 `i `ui ]
[; ;newmain.c: 707: _delay((unsigned long)((700)*(4000000/4000.0)));
"707
[e ( __delay (1 -> * -> -> 700 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 710: if(padcount1==0 && padcount2==0 && padcount3==0 && padcount4==0 && padcount5==0 )
"710
[e $ ! && && && && == _padcount1 -> -> 0 `i `ui == _padcount2 -> -> 0 `i `ui == _padcount3 -> -> 0 `i `ui == _padcount4 -> -> 0 `i `ui == _padcount5 -> -> 0 `i `ui 400  ]
[; ;newmain.c: 711: {
"711
{
[; ;newmain.c: 712: LCD_Clear();
"712
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 713: LCD_CmdWrite(0X80);
"713
[e ( _LCD_CmdWrite (1 -> -> 128 `i `uc ]
[; ;newmain.c: 714: LCD_DisplayString(" STOCK EMPTY !!! ");
"714
[e ( _LCD_DisplayString (1 :s 19C ]
[; ;newmain.c: 715: LCD_CmdWrite(0XC0);
"715
[e ( _LCD_CmdWrite (1 -> -> 192 `i `uc ]
[; ;newmain.c: 716: LCD_DisplayString("  PLEASE LOAD.. ");
"716
[e ( _LCD_DisplayString (1 :s 20C ]
[; ;newmain.c: 717: buzzer(3000);
"717
[e ( _buzzer (1 -> -> 3000 `i `ui ]
[; ;newmain.c: 718: while(RE2==1)
"718
[e $U 401  ]
[e :U 402 ]
[; ;newmain.c: 719: {
"719
{
[; ;newmain.c: 720: RA3=~RA3;
"720
[e = _RA3 -> ~ -> _RA3 `ui `b ]
[; ;newmain.c: 721: _delay((unsigned long)((75)*(4000000/4000.0)));
"721
[e ( __delay (1 -> * -> -> 75 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"723
}
[e :U 401 ]
"718
[e $ == -> _RE2 `i -> 1 `i 402  ]
[e :U 403 ]
[; ;newmain.c: 723: }
[; ;newmain.c: 724: while(!RE2);
"724
[e $U 404  ]
[e :U 405 ]
[e :U 404 ]
[e $ ! _RE2 405  ]
[e :U 406 ]
[; ;newmain.c: 725: RA3=0;
"725
[e = _RA3 -> -> 0 `i `b ]
[; ;newmain.c: 727: padcount1=Read_EEPROM(0,1);
"727
[e = _padcount1 ( _Read_EEPROM (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 728: padcount2=Read_EEPROM(4,5);
"728
[e = _padcount2 ( _Read_EEPROM (2 , -> -> 4 `i `uc -> -> 5 `i `uc ]
[; ;newmain.c: 729: padcount3=Read_EEPROM(8,9);
"729
[e = _padcount3 ( _Read_EEPROM (2 , -> -> 8 `i `uc -> -> 9 `i `uc ]
[; ;newmain.c: 730: padcount4=Read_EEPROM(0X0C,0X0D);
"730
[e = _padcount4 ( _Read_EEPROM (2 , -> -> 12 `i `uc -> -> 13 `i `uc ]
[; ;newmain.c: 731: padcount5=Read_EEPROM(0X10,0X11);
"731
[e = _padcount5 ( _Read_EEPROM (2 , -> -> 16 `i `uc -> -> 17 `i `uc ]
[; ;newmain.c: 732: Write_EEPROM(2,3,padcount1);
"732
[e ( _Write_EEPROM (3 , , -> -> 2 `i `uc -> -> 3 `i `uc _padcount1 ]
[; ;newmain.c: 733: Write_EEPROM(6,7,padcount2);
"733
[e ( _Write_EEPROM (3 , , -> -> 6 `i `uc -> -> 7 `i `uc _padcount2 ]
[; ;newmain.c: 734: Write_EEPROM(0X0A,0X0B,padcount3);
"734
[e ( _Write_EEPROM (3 , , -> -> 10 `i `uc -> -> 11 `i `uc _padcount3 ]
[; ;newmain.c: 735: Write_EEPROM(0X0E,0X0F,padcount4);
"735
[e ( _Write_EEPROM (3 , , -> -> 14 `i `uc -> -> 15 `i `uc _padcount4 ]
[; ;newmain.c: 736: Write_EEPROM(0X12,0X13,padcount5);
"736
[e ( _Write_EEPROM (3 , , -> -> 18 `i `uc -> -> 19 `i `uc _padcount5 ]
[; ;newmain.c: 738: LCD_Clear();
"738
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 739: LCD_DisplayString("     STOCKS     ");
"739
[e ( _LCD_DisplayString (1 :s 21C ]
[; ;newmain.c: 740: LCD_CmdWrite(0XC0);
"740
[e ( _LCD_CmdWrite (1 -> -> 192 `i `uc ]
[; ;newmain.c: 741: LCD_DisplayString("    RELOADED..  ");
"741
[e ( _LCD_DisplayString (1 :s 22C ]
[; ;newmain.c: 742: buzzer(2000);
"742
[e ( _buzzer (1 -> -> 2000 `i `ui ]
[; ;newmain.c: 743: _delay((unsigned long)((700)*(4000000/4000.0)));
"743
[e ( __delay (1 -> * -> -> 700 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"745
}
[e :U 400 ]
[; ;newmain.c: 745: }
[; ;newmain.c: 746: status=0;
"746
[e = _status -> -> 0 `i `b ]
[; ;newmain.c: 747: TRISA1 = 1;
"747
[e = _TRISA1 -> -> 1 `i `b ]
[; ;newmain.c: 748: TRISA0 = 1;
"748
[e = _TRISA0 -> -> 1 `i `b ]
[; ;newmain.c: 749: TRISA5 = 1;
"749
[e = _TRISA5 -> -> 1 `i `b ]
[; ;newmain.c: 750: TRISB6 = 1;
"750
[e = _TRISB6 -> -> 1 `i `b ]
[; ;newmain.c: 751: TRISB7 = 1;
"751
[e = _TRISB7 -> -> 1 `i `b ]
[; ;newmain.c: 752: buzzer(70);
"752
[e ( _buzzer (1 -> -> 70 `i `ui ]
[; ;newmain.c: 753: LCD_Clear();
"753
[e ( _LCD_Clear ..  ]
"754
}
[e :U 312 ]
"756
}
[e :U 190 ]
"389
[e $ _status 191  ]
[e :U 192 ]
[; ;newmain.c: 754: }
[; ;newmain.c: 756: }
[; ;newmain.c: 758: flash:
"758
[e :U 144 ]
[; ;newmain.c: 759: while(menu)
"759
[e $U 407  ]
[e :U 408 ]
[; ;newmain.c: 760: {
"760
{
[; ;newmain.c: 761: LCD_CmdWrite(0X02);
"761
[e ( _LCD_CmdWrite (1 -> -> 2 `i `uc ]
[; ;newmain.c: 762: LCD_DisplayString("ENTER PASSWORD ?");
"762
[e ( _LCD_DisplayString (1 :s 23C ]
[; ;newmain.c: 763: LCD_CmdWrite(0XC7);
"763
[e ( _LCD_CmdWrite (1 -> -> 199 `i `uc ]
[; ;newmain.c: 764: if(check==0)
"764
[e $ ! == -> _check `i -> 0 `i 410  ]
[; ;newmain.c: 765: LCD_DisplayString("**");
"765
[e ( _LCD_DisplayString (1 :s 24C ]
[e :U 410 ]
[; ;newmain.c: 767: if(check==1)
"767
[e $ ! == -> _check `i -> 1 `i 411  ]
[; ;newmain.c: 768: displaypass(value);
"768
[e ( _displaypass (1 -> _value `i ]
[e :U 411 ]
[; ;newmain.c: 770: if(!RE1)
"770
[e $ ! ! _RE1 412  ]
[; ;newmain.c: 771: {
"771
{
[; ;newmain.c: 773: check=1;
"773
[e = _check -> -> 1 `i `b ]
[; ;newmain.c: 774: if(value==99)
"774
[e $ ! == _value -> -> 99 `i `ui 413  ]
[; ;newmain.c: 775: {
"775
{
[; ;newmain.c: 776: value=0;
"776
[e = _value -> -> 0 `i `ui ]
[; ;newmain.c: 777: goto loop;
"777
[e $U 414  ]
"778
}
[e :U 413 ]
[; ;newmain.c: 778: }
[; ;newmain.c: 779: value++;
"779
[e ++ _value -> -> 1 `i `ui ]
[; ;newmain.c: 780: loop:
"780
[e :U 414 ]
[; ;newmain.c: 781: value=value;
"781
[e = _value _value ]
[; ;newmain.c: 782: while(!RE1);
"782
[e $U 415  ]
[e :U 416 ]
[e :U 415 ]
[e $ ! _RE1 416  ]
[e :U 417 ]
"783
}
[e :U 412 ]
[; ;newmain.c: 783: }
[; ;newmain.c: 785: if(!RE0)
"785
[e $ ! ! _RE0 418  ]
[; ;newmain.c: 786: {
"786
{
[; ;newmain.c: 788: check=1;
"788
[e = _check -> -> 1 `i `b ]
[; ;newmain.c: 789: if(value==0)
"789
[e $ ! == _value -> -> 0 `i `ui 419  ]
[; ;newmain.c: 790: {
"790
{
[; ;newmain.c: 791: value=99;
"791
[e = _value -> -> 99 `i `ui ]
[; ;newmain.c: 792: goto jump;
"792
[e $U 420  ]
"793
}
[e :U 419 ]
[; ;newmain.c: 793: }
[; ;newmain.c: 794: value--;
"794
[e -- _value -> -> 1 `i `ui ]
[; ;newmain.c: 795: jump:
"795
[e :U 420 ]
[; ;newmain.c: 796: value=value;
"796
[e = _value _value ]
[; ;newmain.c: 797: while(!RE0);
"797
[e $U 421  ]
[e :U 422 ]
[e :U 421 ]
[e $ ! _RE0 422  ]
[e :U 423 ]
"798
}
[e :U 418 ]
[; ;newmain.c: 798: }
[; ;newmain.c: 800: if(!RE3)
"800
[e $ ! ! _RE3 424  ]
[; ;newmain.c: 801: {
"801
{
[; ;newmain.c: 802: while(!RE3);
"802
[e $U 425  ]
[e :U 426 ]
[e :U 425 ]
[e $ ! _RE3 426  ]
[e :U 427 ]
[; ;newmain.c: 803: if(value==05)
"803
[e $ ! == _value -> -> 5 `i `ui 428  ]
[; ;newmain.c: 804: {
"804
{
[; ;newmain.c: 805: LCD_Clear();
"805
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 806: value=0;
"806
[e = _value -> -> 0 `i `ui ]
[; ;newmain.c: 807: check=0;menu=0;set=1;pad=0;coin=0;
"807
[e = _check -> -> 0 `i `b ]
[e = _menu -> -> 0 `i `b ]
[e = _set -> -> 1 `i `b ]
[e = _pad -> -> 0 `i `b ]
[e = _coin -> -> 0 `i `b ]
[; ;newmain.c: 809: padcount1=Read_EEPROM(0,1);
"809
[e = _padcount1 ( _Read_EEPROM (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;newmain.c: 810: padcount2=Read_EEPROM(4,5);
"810
[e = _padcount2 ( _Read_EEPROM (2 , -> -> 4 `i `uc -> -> 5 `i `uc ]
[; ;newmain.c: 811: padcount3=Read_EEPROM(8,9);
"811
[e = _padcount3 ( _Read_EEPROM (2 , -> -> 8 `i `uc -> -> 9 `i `uc ]
[; ;newmain.c: 812: padcount4=Read_EEPROM(0X0C,0X0D);
"812
[e = _padcount4 ( _Read_EEPROM (2 , -> -> 12 `i `uc -> -> 13 `i `uc ]
[; ;newmain.c: 813: padcount5=Read_EEPROM(0X10,0X11);
"813
[e = _padcount5 ( _Read_EEPROM (2 , -> -> 16 `i `uc -> -> 17 `i `uc ]
[; ;newmain.c: 815: rupee1=Read_EEPROM_Price(0x14,0x15,0X16);
"815
[e = _rupee1 ( _Read_EEPROM_Price (3 , , -> -> 20 `i `uc -> -> 21 `i `uc -> -> 22 `i `uc ]
[; ;newmain.c: 816: rupee2=Read_EEPROM_Price(0X17,0X18,0X19);
"816
[e = _rupee2 ( _Read_EEPROM_Price (3 , , -> -> 23 `i `uc -> -> 24 `i `uc -> -> 25 `i `uc ]
[; ;newmain.c: 817: rupee3=Read_EEPROM_Price(0X1A,0X1B,0X1C);
"817
[e = _rupee3 ( _Read_EEPROM_Price (3 , , -> -> 26 `i `uc -> -> 27 `i `uc -> -> 28 `i `uc ]
[; ;newmain.c: 818: rupee4=Read_EEPROM_Price(0X1D,0X1E,0X1F);
"818
[e = _rupee4 ( _Read_EEPROM_Price (3 , , -> -> 29 `i `uc -> -> 30 `i `uc -> -> 31 `i `uc ]
[; ;newmain.c: 819: rupee5=Read_EEPROM_Price(0X20,0X21,0X22);
"819
[e = _rupee5 ( _Read_EEPROM_Price (3 , , -> -> 32 `i `uc -> -> 33 `i `uc -> -> 34 `i `uc ]
[; ;newmain.c: 821: buzzer(50);
"821
[e ( _buzzer (1 -> -> 50 `i `ui ]
[; ;newmain.c: 822: break;
"822
[e $U 409  ]
"823
}
[; ;newmain.c: 823: }
[e $U 429  ]
"824
[e :U 428 ]
[; ;newmain.c: 824: else
[; ;newmain.c: 825: {
"825
{
[; ;newmain.c: 826: LCD_Clear();
"826
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 827: LCD_CmdWrite(0X02);
"827
[e ( _LCD_CmdWrite (1 -> -> 2 `i `uc ]
[; ;newmain.c: 828: LCD_DisplayString("    WRONG !!    ");
"828
[e ( _LCD_DisplayString (1 :s 25C ]
[; ;newmain.c: 829: LCD_CmdWrite(0XC0);
"829
[e ( _LCD_CmdWrite (1 -> -> 192 `i `uc ]
[; ;newmain.c: 830: LCD_DisplayString("  TRY AGAIN....  ");
"830
[e ( _LCD_DisplayString (1 :s 26C ]
[; ;newmain.c: 831: buzzer(50);
"831
[e ( _buzzer (1 -> -> 50 `i `ui ]
[; ;newmain.c: 832: _delay((unsigned long)((50)*(4000000/4000.0)));
"832
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 833: buzzer(50);
"833
[e ( _buzzer (1 -> -> 50 `i `ui ]
[; ;newmain.c: 834: _delay((unsigned long)((750)*(4000000/4000.0)));
"834
[e ( __delay (1 -> * -> -> 750 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 835: LCD_Clear();
"835
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 836: value=0;check=0;
"836
[e = _value -> -> 0 `i `ui ]
[e = _check -> -> 0 `i `b ]
[; ;newmain.c: 837: error_count++;
"837
[e ++ _error_count -> -> 1 `i `ui ]
[; ;newmain.c: 838: if(error_count==3)
"838
[e $ ! == _error_count -> -> 3 `i `ui 430  ]
[; ;newmain.c: 839: {
"839
{
[; ;newmain.c: 840: LCD_Clear();
"840
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 841: LCD_CmdWrite(0X02);
"841
[e ( _LCD_CmdWrite (1 -> -> 2 `i `uc ]
[; ;newmain.c: 842: LCD_DisplayString("Processor RESET");
"842
[e ( _LCD_DisplayString (1 :s 27C ]
[; ;newmain.c: 843: buzzer(1000);
"843
[e ( _buzzer (1 -> -> 1000 `i `ui ]
[; ;newmain.c: 844: _delay((unsigned long)((650)*(4000000/4000.0)));
"844
[e ( __delay (1 -> * -> -> 650 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 845: value=0;
"845
[e = _value -> -> 0 `i `ui ]
[; ;newmain.c: 846: error_count=0;
"846
[e = _error_count -> -> 0 `i `ui ]
[; ;newmain.c: 847: check=0;status=0;menu=0,run=0;
"847
[e = _check -> -> 0 `i `b ]
[e = _status -> -> 0 `i `b ]
[e ; -> = _menu -> -> 0 `i `b `i -> = _run -> -> 0 `i `b `i ]
[; ;newmain.c: 848: LCD_Clear();
"848
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 849: break;
"849
[e $U 409  ]
"851
}
[e :U 430 ]
"852
}
[e :U 429 ]
"854
}
[e :U 424 ]
"856
}
[e :U 407 ]
"759
[e $ _menu 408  ]
[e :U 409 ]
[; ;newmain.c: 851: }
[; ;newmain.c: 852: }
[; ;newmain.c: 854: }
[; ;newmain.c: 856: }
[; ;newmain.c: 858: while(set)
"858
[e $U 431  ]
[e :U 432 ]
[; ;newmain.c: 859: {
"859
{
[; ;newmain.c: 861: if((!pad)&&(!coin))
"861
[e $ ! && ! _pad ! _coin 434  ]
[; ;newmain.c: 862: {
"862
{
[; ;newmain.c: 863: LCD_CmdWrite(0X02);
"863
[e ( _LCD_CmdWrite (1 -> -> 2 `i `uc ]
[; ;newmain.c: 864: LCD_DisplayString("ENTER PARAMETERS");
"864
[e ( _LCD_DisplayString (1 :s 28C ]
[; ;newmain.c: 865: _delay((unsigned long)((1500)*(4000000/4000.0)));
"865
[e ( __delay (1 -> * -> -> 1500 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 866: stock=1;pad=1;coin=0;num=padcount1;
"866
[e = _stock -> -> 1 `i `ui ]
[e = _pad -> -> 1 `i `b ]
[e = _coin -> -> 0 `i `b ]
[e = _num _padcount1 ]
[; ;newmain.c: 867: LCD_Clear();
"867
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 868: LCD_CmdWrite(0X02);
"868
[e ( _LCD_CmdWrite (1 -> -> 2 `i `uc ]
[; ;newmain.c: 869: LCD_DisplayString("  ROW_");
"869
[e ( _LCD_DisplayString (1 :s 29C ]
"870
}
[e :U 434 ]
[; ;newmain.c: 870: }
[; ;newmain.c: 872: switch(stock)
"872
[e $U 436  ]
[; ;newmain.c: 873: {
"873
{
[; ;newmain.c: 874: case 1: stock_data='1';break;
"874
[e :U 437 ]
[e = _stock_data -> -> 49 `ui `uc ]
[e $U 435  ]
[; ;newmain.c: 875: case 2: stock_data='2';break;
"875
[e :U 438 ]
[e = _stock_data -> -> 50 `ui `uc ]
[e $U 435  ]
[; ;newmain.c: 876: case 3: stock_data='3';break;
"876
[e :U 439 ]
[e = _stock_data -> -> 51 `ui `uc ]
[e $U 435  ]
[; ;newmain.c: 877: case 4: stock_data='4';break;
"877
[e :U 440 ]
[e = _stock_data -> -> 52 `ui `uc ]
[e $U 435  ]
[; ;newmain.c: 878: case 5: stock_data='5';break;
"878
[e :U 441 ]
[e = _stock_data -> -> 53 `ui `uc ]
[e $U 435  ]
"879
}
[; ;newmain.c: 879: }
[e $U 435  ]
"872
[e :U 436 ]
[e [\ _stock , $ -> -> 1 `i `ui 437
 , $ -> -> 2 `i `ui 438
 , $ -> -> 3 `i `ui 439
 , $ -> -> 4 `i `ui 440
 , $ -> -> 5 `i `ui 441
 435 ]
"879
[e :U 435 ]
[; ;newmain.c: 880: LCD_CmdWrite(0X86);
"880
[e ( _LCD_CmdWrite (1 -> -> 134 `i `uc ]
[; ;newmain.c: 881: LCD_DataWrite(stock_data);
"881
[e ( _LCD_DataWrite (1 _stock_data ]
[; ;newmain.c: 882: LCD_DisplayString("  STOCK  ");
"882
[e ( _LCD_DisplayString (1 :s 30C ]
[; ;newmain.c: 883: if(pad && !coin)
"883
[e $ ! && _pad ! _coin 442  ]
[; ;newmain.c: 884: {
"884
{
[; ;newmain.c: 885: LCD_CmdWrite(0XC0);
"885
[e ( _LCD_CmdWrite (1 -> -> 192 `i `uc ]
[; ;newmain.c: 886: LCD_DisplayString("   QTY: ");
"886
[e ( _LCD_DisplayString (1 :s 31C ]
[; ;newmain.c: 887: switch(stock)
"887
[e $U 444  ]
[; ;newmain.c: 888: {
"888
{
[; ;newmain.c: 889: case 1: padcount=padcount1;Qflag=1;break;
"889
[e :U 445 ]
[e = _padcount _padcount1 ]
[e = _Qflag -> -> 1 `i `b ]
[e $U 443  ]
[; ;newmain.c: 890: case 2: padcount=padcount2;Qflag=1;break;
"890
[e :U 446 ]
[e = _padcount _padcount2 ]
[e = _Qflag -> -> 1 `i `b ]
[e $U 443  ]
[; ;newmain.c: 891: case 3: padcount=padcount3;Qflag=1;break;
"891
[e :U 447 ]
[e = _padcount _padcount3 ]
[e = _Qflag -> -> 1 `i `b ]
[e $U 443  ]
[; ;newmain.c: 892: case 4: padcount=padcount4;Qflag=1;break;
"892
[e :U 448 ]
[e = _padcount _padcount4 ]
[e = _Qflag -> -> 1 `i `b ]
[e $U 443  ]
[; ;newmain.c: 893: case 5: padcount=padcount5;Qflag=1;break;
"893
[e :U 449 ]
[e = _padcount _padcount5 ]
[e = _Qflag -> -> 1 `i `b ]
[e $U 443  ]
"894
}
[; ;newmain.c: 894: }
[e $U 443  ]
"887
[e :U 444 ]
[e [\ _stock , $ -> -> 1 `i `ui 445
 , $ -> -> 2 `i `ui 446
 , $ -> -> 3 `i `ui 447
 , $ -> -> 4 `i `ui 448
 , $ -> -> 5 `i `ui 449
 443 ]
"894
[e :U 443 ]
[; ;newmain.c: 895: display(padcount);
"895
[e ( _display (1 -> _padcount `i ]
[; ;newmain.c: 896: LCD_DisplayString(" Nos");
"896
[e ( _LCD_DisplayString (1 :s 32C ]
"897
}
[e :U 442 ]
[; ;newmain.c: 897: }
[; ;newmain.c: 898: if(coin && !pad)
"898
[e $ ! && _coin ! _pad 450  ]
[; ;newmain.c: 899: {
"899
{
[; ;newmain.c: 900: LCD_CmdWrite(0XC0);
"900
[e ( _LCD_CmdWrite (1 -> -> 192 `i `uc ]
[; ;newmain.c: 901: LCD_DisplayString("   PRICE: ");
"901
[e ( _LCD_DisplayString (1 :s 33C ]
[; ;newmain.c: 902: LCD_DataWrite(0x00);
"902
[e ( _LCD_DataWrite (1 -> -> 0 `i `uc ]
[; ;newmain.c: 903: switch(stock)
"903
[e $U 452  ]
[; ;newmain.c: 904: {
"904
{
[; ;newmain.c: 905: case 1: rupee=rupee1;break;
"905
[e :U 453 ]
[e = _rupee _rupee1 ]
[e $U 451  ]
[; ;newmain.c: 906: case 2: rupee=rupee2;break;
"906
[e :U 454 ]
[e = _rupee _rupee2 ]
[e $U 451  ]
[; ;newmain.c: 907: case 3: rupee=rupee3;break;
"907
[e :U 455 ]
[e = _rupee _rupee3 ]
[e $U 451  ]
[; ;newmain.c: 908: case 4: rupee=rupee4;break;
"908
[e :U 456 ]
[e = _rupee _rupee4 ]
[e $U 451  ]
[; ;newmain.c: 909: case 5: rupee=rupee5;break;
"909
[e :U 457 ]
[e = _rupee _rupee5 ]
[e $U 451  ]
"910
}
[; ;newmain.c: 910: }
[e $U 451  ]
"903
[e :U 452 ]
[e [\ _stock , $ -> -> 1 `i `ui 453
 , $ -> -> 2 `i `ui 454
 , $ -> -> 3 `i `ui 455
 , $ -> -> 4 `i `ui 456
 , $ -> -> 5 `i `ui 457
 451 ]
"910
[e :U 451 ]
[; ;newmain.c: 911: LCD_CmdWrite(0XCB);
"911
[e ( _LCD_CmdWrite (1 -> -> 203 `i `uc ]
[; ;newmain.c: 912: display_price(rupee);
"912
[e ( _display_price (1 -> _rupee `i ]
[; ;newmain.c: 913: LCD_DataWrite(' ');
"913
[e ( _LCD_DataWrite (1 -> -> 32 `ui `uc ]
"914
}
[e :U 450 ]
[; ;newmain.c: 914: }
[; ;newmain.c: 916: if(!RE1)
"916
[e $ ! ! _RE1 458  ]
[; ;newmain.c: 917: {
"917
{
[; ;newmain.c: 918: _delay((unsigned long)((100)*(4000000/4000.0)));
"918
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 920: if(num==99 && pad)
"920
[e $ ! && == _num -> -> 99 `i `ui _pad 459  ]
[; ;newmain.c: 921: {
"921
{
[; ;newmain.c: 922: num=0;
"922
[e = _num -> -> 0 `i `ui ]
[; ;newmain.c: 923: if(pad)
"923
[e $ ! _pad 460  ]
[; ;newmain.c: 924: goto label1;
"924
[e $U 461  ]
[e :U 460 ]
"925
}
[e :U 459 ]
[; ;newmain.c: 925: }
[; ;newmain.c: 926: if(num==990 && coin)
"926
[e $ ! && == _num -> -> 990 `i `ui _coin 462  ]
[; ;newmain.c: 927: num=0;
"927
[e = _num -> -> 0 `i `ui ]
[e :U 462 ]
[; ;newmain.c: 929: if(coin)num=num+10;
"929
[e $ ! _coin 463  ]
[e = _num + _num -> -> 10 `i `ui ]
[e :U 463 ]
[; ;newmain.c: 930: if(pad) num++;
"930
[e $ ! _pad 464  ]
[e ++ _num -> -> 1 `i `ui ]
[e :U 464 ]
[; ;newmain.c: 932: label1:
"932
[e :U 461 ]
[; ;newmain.c: 933: if(pad && !coin)
"933
[e $ ! && _pad ! _coin 465  ]
[; ;newmain.c: 934: {
"934
{
[; ;newmain.c: 935: switch(stock)
"935
[e $U 467  ]
[; ;newmain.c: 936: {
"936
{
[; ;newmain.c: 937: case 1: padcount1=num;break;
"937
[e :U 468 ]
[e = _padcount1 _num ]
[e $U 466  ]
[; ;newmain.c: 938: case 2: padcount2=num;break;
"938
[e :U 469 ]
[e = _padcount2 _num ]
[e $U 466  ]
[; ;newmain.c: 939: case 3: padcount3=num;break;
"939
[e :U 470 ]
[e = _padcount3 _num ]
[e $U 466  ]
[; ;newmain.c: 940: case 4: padcount4=num;break;
"940
[e :U 471 ]
[e = _padcount4 _num ]
[e $U 466  ]
[; ;newmain.c: 941: case 5: padcount5=num;break;
"941
[e :U 472 ]
[e = _padcount5 _num ]
[e $U 466  ]
"942
}
[; ;newmain.c: 942: }
[e $U 466  ]
"935
[e :U 467 ]
[e [\ _stock , $ -> -> 1 `i `ui 468
 , $ -> -> 2 `i `ui 469
 , $ -> -> 3 `i `ui 470
 , $ -> -> 4 `i `ui 471
 , $ -> -> 5 `i `ui 472
 466 ]
"942
[e :U 466 ]
"943
}
[e :U 465 ]
[; ;newmain.c: 943: }
[; ;newmain.c: 944: if(!pad && coin)
"944
[e $ ! && ! _pad _coin 473  ]
[; ;newmain.c: 945: {
"945
{
[; ;newmain.c: 946: switch(stock)
"946
[e $U 475  ]
[; ;newmain.c: 947: {
"947
{
[; ;newmain.c: 948: case 1: rupee1=num;break;
"948
[e :U 476 ]
[e = _rupee1 _num ]
[e $U 474  ]
[; ;newmain.c: 949: case 2: rupee2=num;break;
"949
[e :U 477 ]
[e = _rupee2 _num ]
[e $U 474  ]
[; ;newmain.c: 950: case 3: rupee3=num;break;
"950
[e :U 478 ]
[e = _rupee3 _num ]
[e $U 474  ]
[; ;newmain.c: 951: case 4: rupee4=num;break;
"951
[e :U 479 ]
[e = _rupee4 _num ]
[e $U 474  ]
[; ;newmain.c: 952: case 5: rupee5=num;break;
"952
[e :U 480 ]
[e = _rupee5 _num ]
[e $U 474  ]
"953
}
[; ;newmain.c: 953: }
[e $U 474  ]
"946
[e :U 475 ]
[e [\ _stock , $ -> -> 1 `i `ui 476
 , $ -> -> 2 `i `ui 477
 , $ -> -> 3 `i `ui 478
 , $ -> -> 4 `i `ui 479
 , $ -> -> 5 `i `ui 480
 474 ]
"953
[e :U 474 ]
"954
}
[e :U 473 ]
"955
}
[e :U 458 ]
[; ;newmain.c: 954: }
[; ;newmain.c: 955: }
[; ;newmain.c: 957: if(RE0==0)
"957
[e $ ! == -> _RE0 `i -> 0 `i 481  ]
[; ;newmain.c: 958: {
"958
{
[; ;newmain.c: 959: _delay((unsigned long)((100)*(4000000/4000.0)));
"959
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 961: if(num==0 && pad)
"961
[e $ ! && == _num -> -> 0 `i `ui _pad 482  ]
[; ;newmain.c: 962: {
"962
{
[; ;newmain.c: 963: num=99;
"963
[e = _num -> -> 99 `i `ui ]
[; ;newmain.c: 964: goto label2;
"964
[e $U 483  ]
"965
}
[e :U 482 ]
[; ;newmain.c: 965: }
[; ;newmain.c: 966: if(num==10 && coin)
"966
[e $ ! && == _num -> -> 10 `i `ui _coin 484  ]
[; ;newmain.c: 967: {
"967
{
[; ;newmain.c: 968: num=990;
"968
[e = _num -> -> 990 `i `ui ]
[; ;newmain.c: 969: goto label2;
"969
[e $U 483  ]
"970
}
[e :U 484 ]
[; ;newmain.c: 970: }
[; ;newmain.c: 972: if(coin)num=num-10;
"972
[e $ ! _coin 485  ]
[e = _num - _num -> -> 10 `i `ui ]
[e :U 485 ]
[; ;newmain.c: 973: if(pad) num--;
"973
[e $ ! _pad 486  ]
[e -- _num -> -> 1 `i `ui ]
[e :U 486 ]
[; ;newmain.c: 975: label2:
"975
[e :U 483 ]
[; ;newmain.c: 976: if(pad && !coin)
"976
[e $ ! && _pad ! _coin 487  ]
[; ;newmain.c: 977: {
"977
{
[; ;newmain.c: 978: switch(stock)
"978
[e $U 489  ]
[; ;newmain.c: 979: {
"979
{
[; ;newmain.c: 980: case 1: padcount1=num;break;
"980
[e :U 490 ]
[e = _padcount1 _num ]
[e $U 488  ]
[; ;newmain.c: 981: case 2: padcount2=num;break;
"981
[e :U 491 ]
[e = _padcount2 _num ]
[e $U 488  ]
[; ;newmain.c: 982: case 3: padcount3=num;break;
"982
[e :U 492 ]
[e = _padcount3 _num ]
[e $U 488  ]
[; ;newmain.c: 983: case 4: padcount4=num;break;
"983
[e :U 493 ]
[e = _padcount4 _num ]
[e $U 488  ]
[; ;newmain.c: 984: case 5: padcount5=num;break;
"984
[e :U 494 ]
[e = _padcount5 _num ]
[e $U 488  ]
"986
}
[; ;newmain.c: 986: }
[e $U 488  ]
"978
[e :U 489 ]
[e [\ _stock , $ -> -> 1 `i `ui 490
 , $ -> -> 2 `i `ui 491
 , $ -> -> 3 `i `ui 492
 , $ -> -> 4 `i `ui 493
 , $ -> -> 5 `i `ui 494
 488 ]
"986
[e :U 488 ]
"987
}
[e :U 487 ]
[; ;newmain.c: 987: }
[; ;newmain.c: 988: if(!pad && coin)
"988
[e $ ! && ! _pad _coin 495  ]
[; ;newmain.c: 989: {
"989
{
[; ;newmain.c: 990: switch(stock)
"990
[e $U 497  ]
[; ;newmain.c: 991: {
"991
{
[; ;newmain.c: 992: case 1: rupee1=num;break;
"992
[e :U 498 ]
[e = _rupee1 _num ]
[e $U 496  ]
[; ;newmain.c: 993: case 2: rupee2=num;break;
"993
[e :U 499 ]
[e = _rupee2 _num ]
[e $U 496  ]
[; ;newmain.c: 994: case 3: rupee3=num;break;
"994
[e :U 500 ]
[e = _rupee3 _num ]
[e $U 496  ]
[; ;newmain.c: 995: case 4: rupee4=num;break;
"995
[e :U 501 ]
[e = _rupee4 _num ]
[e $U 496  ]
[; ;newmain.c: 996: case 5: rupee5=num;break;
"996
[e :U 502 ]
[e = _rupee5 _num ]
[e $U 496  ]
"997
}
[; ;newmain.c: 997: }
[e $U 496  ]
"990
[e :U 497 ]
[e [\ _stock , $ -> -> 1 `i `ui 498
 , $ -> -> 2 `i `ui 499
 , $ -> -> 3 `i `ui 500
 , $ -> -> 4 `i `ui 501
 , $ -> -> 5 `i `ui 502
 496 ]
"997
[e :U 496 ]
"998
}
[e :U 495 ]
"999
}
[e :U 481 ]
[; ;newmain.c: 998: }
[; ;newmain.c: 999: }
[; ;newmain.c: 1001: if(!RE3)
"1001
[e $ ! ! _RE3 503  ]
[; ;newmain.c: 1002: {
"1002
{
[; ;newmain.c: 1003: while(!RE3);
"1003
[e $U 504  ]
[e :U 505 ]
[e :U 504 ]
[e $ ! _RE3 505  ]
[e :U 506 ]
[; ;newmain.c: 1004: if(!pad && coin)
"1004
[e $ ! && ! _pad _coin 507  ]
[; ;newmain.c: 1005: {
"1005
{
[; ;newmain.c: 1006: switch(stock)
"1006
[e $U 509  ]
[; ;newmain.c: 1007: {
"1007
{
[; ;newmain.c: 1008: case 1: Write_EEPROM_Price(0X14,0X15,0X16,rupee1);pad=1;coin=0;stock=2;num=padcount2;Qflag=0;buzzer(50);break;
"1008
[e :U 510 ]
[e ( _Write_EEPROM_Price (4 , , , -> -> 20 `i `uc -> -> 21 `i `uc -> -> 22 `i `uc _rupee1 ]
[e = _pad -> -> 1 `i `b ]
[e = _coin -> -> 0 `i `b ]
[e = _stock -> -> 2 `i `ui ]
[e = _num _padcount2 ]
[e = _Qflag -> -> 0 `i `b ]
[e ( _buzzer (1 -> -> 50 `i `ui ]
[e $U 508  ]
[; ;newmain.c: 1009: case 2: Write_EEPROM_Price(0X17,0X18,0X19,rupee2);pad=1;coin=0;stock=3;num=padcount3;Qflag=0;buzzer(50);break;
"1009
[e :U 511 ]
[e ( _Write_EEPROM_Price (4 , , , -> -> 23 `i `uc -> -> 24 `i `uc -> -> 25 `i `uc _rupee2 ]
[e = _pad -> -> 1 `i `b ]
[e = _coin -> -> 0 `i `b ]
[e = _stock -> -> 3 `i `ui ]
[e = _num _padcount3 ]
[e = _Qflag -> -> 0 `i `b ]
[e ( _buzzer (1 -> -> 50 `i `ui ]
[e $U 508  ]
[; ;newmain.c: 1010: case 3: Write_EEPROM_Price(0X1A,0X1B,0X1C,rupee3);pad=1;coin=0;stock=4;num=padcount4;Qflag=0;buzzer(50);break;
"1010
[e :U 512 ]
[e ( _Write_EEPROM_Price (4 , , , -> -> 26 `i `uc -> -> 27 `i `uc -> -> 28 `i `uc _rupee3 ]
[e = _pad -> -> 1 `i `b ]
[e = _coin -> -> 0 `i `b ]
[e = _stock -> -> 4 `i `ui ]
[e = _num _padcount4 ]
[e = _Qflag -> -> 0 `i `b ]
[e ( _buzzer (1 -> -> 50 `i `ui ]
[e $U 508  ]
[; ;newmain.c: 1011: case 4: Write_EEPROM_Price(0X1D,0X1E,0X1F,rupee4);pad=1;coin=0;stock=5;num=padcount5;Qflag=0;buzzer(50);break;
"1011
[e :U 513 ]
[e ( _Write_EEPROM_Price (4 , , , -> -> 29 `i `uc -> -> 30 `i `uc -> -> 31 `i `uc _rupee4 ]
[e = _pad -> -> 1 `i `b ]
[e = _coin -> -> 0 `i `b ]
[e = _stock -> -> 5 `i `ui ]
[e = _num _padcount5 ]
[e = _Qflag -> -> 0 `i `b ]
[e ( _buzzer (1 -> -> 50 `i `ui ]
[e $U 508  ]
[; ;newmain.c: 1012: case 5: Write_EEPROM_Price(0X20,0X21,0X22,rupee5);pad=0;coin=0;stock=1;num=0;status=0;set=0;Qflag=0;
"1012
[e :U 514 ]
[e ( _Write_EEPROM_Price (4 , , , -> -> 32 `i `uc -> -> 33 `i `uc -> -> 34 `i `uc _rupee5 ]
[e = _pad -> -> 0 `i `b ]
[e = _coin -> -> 0 `i `b ]
[e = _stock -> -> 1 `i `ui ]
[e = _num -> -> 0 `i `ui ]
[e = _status -> -> 0 `i `b ]
[e = _set -> -> 0 `i `b ]
[e = _Qflag -> -> 0 `i `b ]
[; ;newmain.c: 1013: buzzer(50);
"1013
[e ( _buzzer (1 -> -> 50 `i `ui ]
[; ;newmain.c: 1014: LCD_Clear();
"1014
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 1015: LCD_DisplayString("  DATAS STORED..");
"1015
[e ( _LCD_DisplayString (1 :s 34C ]
[; ;newmain.c: 1016: buzzer(1000);
"1016
[e ( _buzzer (1 -> -> 1000 `i `ui ]
[; ;newmain.c: 1017: LCD_Clear();
"1017
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 1018: break;
"1018
[e $U 508  ]
"1019
}
[; ;newmain.c: 1019: }
[e $U 508  ]
"1006
[e :U 509 ]
[e [\ _stock , $ -> -> 1 `i `ui 510
 , $ -> -> 2 `i `ui 511
 , $ -> -> 3 `i `ui 512
 , $ -> -> 4 `i `ui 513
 , $ -> -> 5 `i `ui 514
 508 ]
"1019
[e :U 508 ]
"1020
}
[e :U 507 ]
[; ;newmain.c: 1020: }
[; ;newmain.c: 1022: if(pad && !coin && Qflag)
"1022
[e $ ! && && _pad ! _coin _Qflag 515  ]
[; ;newmain.c: 1023: {
"1023
{
[; ;newmain.c: 1024: switch(stock)
"1024
[e $U 517  ]
[; ;newmain.c: 1025: {
"1025
{
[; ;newmain.c: 1026: case 1: Write_EEPROM(0,1,padcount1);Write_EEPROM(2,3,padcount1);pad=0;coin=1;num=rupee1;buzzer(50);break;
"1026
[e :U 518 ]
[e ( _Write_EEPROM (3 , , -> -> 0 `i `uc -> -> 1 `i `uc _padcount1 ]
[e ( _Write_EEPROM (3 , , -> -> 2 `i `uc -> -> 3 `i `uc _padcount1 ]
[e = _pad -> -> 0 `i `b ]
[e = _coin -> -> 1 `i `b ]
[e = _num _rupee1 ]
[e ( _buzzer (1 -> -> 50 `i `ui ]
[e $U 516  ]
[; ;newmain.c: 1027: case 2: Write_EEPROM(4,5,padcount2);Write_EEPROM(6,7,padcount2);pad=0;coin=1;num=rupee2;buzzer(50);break;
"1027
[e :U 519 ]
[e ( _Write_EEPROM (3 , , -> -> 4 `i `uc -> -> 5 `i `uc _padcount2 ]
[e ( _Write_EEPROM (3 , , -> -> 6 `i `uc -> -> 7 `i `uc _padcount2 ]
[e = _pad -> -> 0 `i `b ]
[e = _coin -> -> 1 `i `b ]
[e = _num _rupee2 ]
[e ( _buzzer (1 -> -> 50 `i `ui ]
[e $U 516  ]
[; ;newmain.c: 1028: case 3: Write_EEPROM(8,9,padcount3);Write_EEPROM(0X0A,0X0B,padcount3);pad=0;coin=1;num=rupee3;buzzer(50);break;
"1028
[e :U 520 ]
[e ( _Write_EEPROM (3 , , -> -> 8 `i `uc -> -> 9 `i `uc _padcount3 ]
[e ( _Write_EEPROM (3 , , -> -> 10 `i `uc -> -> 11 `i `uc _padcount3 ]
[e = _pad -> -> 0 `i `b ]
[e = _coin -> -> 1 `i `b ]
[e = _num _rupee3 ]
[e ( _buzzer (1 -> -> 50 `i `ui ]
[e $U 516  ]
[; ;newmain.c: 1029: case 4: Write_EEPROM(0X0C,0X0D,padcount4);Write_EEPROM(0X0E,0X0F,padcount4);pad=0;coin=1;num=rupee4;buzzer(50);break;
"1029
[e :U 521 ]
[e ( _Write_EEPROM (3 , , -> -> 12 `i `uc -> -> 13 `i `uc _padcount4 ]
[e ( _Write_EEPROM (3 , , -> -> 14 `i `uc -> -> 15 `i `uc _padcount4 ]
[e = _pad -> -> 0 `i `b ]
[e = _coin -> -> 1 `i `b ]
[e = _num _rupee4 ]
[e ( _buzzer (1 -> -> 50 `i `ui ]
[e $U 516  ]
[; ;newmain.c: 1030: case 5: Write_EEPROM(0X10,0X11,padcount5);Write_EEPROM(0X12,0X13,padcount5);pad=0;coin=1;num=rupee5;buzzer(50);break;
"1030
[e :U 522 ]
[e ( _Write_EEPROM (3 , , -> -> 16 `i `uc -> -> 17 `i `uc _padcount5 ]
[e ( _Write_EEPROM (3 , , -> -> 18 `i `uc -> -> 19 `i `uc _padcount5 ]
[e = _pad -> -> 0 `i `b ]
[e = _coin -> -> 1 `i `b ]
[e = _num _rupee5 ]
[e ( _buzzer (1 -> -> 50 `i `ui ]
[e $U 516  ]
"1031
}
[; ;newmain.c: 1031: }
[e $U 516  ]
"1024
[e :U 517 ]
[e [\ _stock , $ -> -> 1 `i `ui 518
 , $ -> -> 2 `i `ui 519
 , $ -> -> 3 `i `ui 520
 , $ -> -> 4 `i `ui 521
 , $ -> -> 5 `i `ui 522
 516 ]
"1031
[e :U 516 ]
"1033
}
[e :U 515 ]
"1034
}
[e :U 503 ]
"1035
}
[e :U 431 ]
"858
[e $ _set 432  ]
[e :U 433 ]
"1036
}
[e :U 145 ]
"230
[e $ _run 146  ]
[e :U 147 ]
[; ;newmain.c: 1033: }
[; ;newmain.c: 1034: }
[; ;newmain.c: 1035: }
[; ;newmain.c: 1036: }
[; ;newmain.c: 1037: }
"1037
[e :UE 142 ]
}
"1041
[v _PORT_Init `(v ~T0 @X0 1 ef ]
"1042
{
[; ;newmain.c: 1041: void PORT_Init()
[; ;newmain.c: 1042: {
[e :U _PORT_Init ]
[f ]
[; ;newmain.c: 1043: TRISA = 0X37;
"1043
[e = _TRISA -> -> 55 `i `uc ]
[; ;newmain.c: 1044: TRISB = 0XC1;
"1044
[e = _TRISB -> -> 193 `i `uc ]
[; ;newmain.c: 1045: TRISC = 0XA0;
"1045
[e = _TRISC -> -> 160 `i `uc ]
[; ;newmain.c: 1046: TRISD = 0XA8;
"1046
[e = _TRISD -> -> 168 `i `uc ]
[; ;newmain.c: 1047: TRISE = 0X0F;
"1047
[e = _TRISE -> -> 15 `i `uc ]
[; ;newmain.c: 1048: PORTB = 0X00;
"1048
[e = _PORTB -> -> 0 `i `uc ]
[; ;newmain.c: 1049: PORTC = 0X00;
"1049
[e = _PORTC -> -> 0 `i `uc ]
[; ;newmain.c: 1050: PORTA = 0X00;
"1050
[e = _PORTA -> -> 0 `i `uc ]
[; ;newmain.c: 1051: PORTD = 0X00;
"1051
[e = _PORTD -> -> 0 `i `uc ]
[; ;newmain.c: 1052: PORTE = 0X00;
"1052
[e = _PORTE -> -> 0 `i `uc ]
[; ;newmain.c: 1053: OPTION_REG = 0X87;
"1053
[e = _OPTION_REG -> -> 135 `i `uc ]
[; ;newmain.c: 1054: INTCON = 0X90;
"1054
[e = _INTCON -> -> 144 `i `uc ]
[; ;newmain.c: 1055: ANSEL = 0X00;
"1055
[e = _ANSEL -> -> 0 `i `uc ]
[; ;newmain.c: 1056: ANSELH = 0X00;
"1056
[e = _ANSELH -> -> 0 `i `uc ]
[; ;newmain.c: 1057: WPUB = 0XC1;
"1057
[e = _WPUB -> -> 193 `i `uc ]
[; ;newmain.c: 1058: IOCB = 0X00;
"1058
[e = _IOCB -> -> 0 `i `uc ]
[; ;newmain.c: 1059: OSCCON = 0X65;
"1059
[e = _OSCCON -> -> 101 `i `uc ]
[; ;newmain.c: 1060: }
"1060
[e :UE 523 ]
}
"1062
[v _ToggleEpinOfLCD `(v ~T0 @X0 1 ef ]
"1063
{
[; ;newmain.c: 1062: void ToggleEpinOfLCD(void)
[; ;newmain.c: 1063: {
[e :U _ToggleEpinOfLCD ]
[f ]
[; ;newmain.c: 1064: RA6 = 1;
"1064
[e = _RA6 -> -> 1 `i `b ]
[; ;newmain.c: 1065: _delay((unsigned long)((1)*(4000000/4000.0)));
"1065
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 1066: RA6 = 0;
"1066
[e = _RA6 -> -> 0 `i `b ]
[; ;newmain.c: 1067: _delay((unsigned long)((1)*(4000000/4000.0)));
"1067
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 1068: }
"1068
[e :UE 524 ]
}
"1071
[v _LCD_CmdWrite `(v ~T0 @X0 1 ef1`uc ]
"1072
{
[; ;newmain.c: 1071: void LCD_CmdWrite(unsigned char Command)
[; ;newmain.c: 1072: {
[e :U _LCD_CmdWrite ]
"1071
[v _Command `uc ~T0 @X0 1 r1 ]
"1072
[f ]
[; ;newmain.c: 1073: RA7 = 0;
"1073
[e = _RA7 -> -> 0 `i `b ]
[; ;newmain.c: 1076: PORTC = ((Command>>4)&0x0F);
"1076
[e = _PORTC -> & >> -> _Command `i -> 4 `i -> 15 `i `uc ]
[; ;newmain.c: 1077: ToggleEpinOfLCD();
"1077
[e ( _ToggleEpinOfLCD ..  ]
[; ;newmain.c: 1080: PORTC = (Command&0x0F);
"1080
[e = _PORTC -> & -> _Command `i -> 15 `i `uc ]
[; ;newmain.c: 1081: ToggleEpinOfLCD();
"1081
[e ( _ToggleEpinOfLCD ..  ]
[; ;newmain.c: 1084: }
"1084
[e :UE 525 ]
}
"1086
[v _LCD_DataWrite `(v ~T0 @X0 1 ef1`uc ]
"1087
{
[; ;newmain.c: 1086: void LCD_DataWrite(char LCDChar)
[; ;newmain.c: 1087: {
[e :U _LCD_DataWrite ]
"1086
[v _LCDChar `uc ~T0 @X0 1 r1 ]
"1087
[f ]
[; ;newmain.c: 1088: RA7 = 1;
"1088
[e = _RA7 -> -> 1 `i `b ]
[; ;newmain.c: 1090: PORTC = ((LCDChar>>4)&0x0F);
"1090
[e = _PORTC -> & >> -> _LCDChar `i -> 4 `i -> 15 `i `uc ]
[; ;newmain.c: 1091: ToggleEpinOfLCD();
"1091
[e ( _ToggleEpinOfLCD ..  ]
[; ;newmain.c: 1094: PORTC = (LCDChar&0x0F);
"1094
[e = _PORTC -> & -> _LCDChar `i -> 15 `i `uc ]
[; ;newmain.c: 1095: ToggleEpinOfLCD();
"1095
[e ( _ToggleEpinOfLCD ..  ]
[; ;newmain.c: 1098: }
"1098
[e :UE 526 ]
}
"1101
[v _LCD_Init `(v ~T0 @X0 1 ef ]
"1102
{
[; ;newmain.c: 1101: void LCD_Init(void)
[; ;newmain.c: 1102: {
[e :U _LCD_Init ]
[f ]
[; ;newmain.c: 1105: RA6 = 0;
"1105
[e = _RA6 -> -> 0 `i `b ]
[; ;newmain.c: 1106: RA7 = 0;
"1106
[e = _RA7 -> -> 0 `i `b ]
[; ;newmain.c: 1107: RC0 = 0;
"1107
[e = _RC0 -> -> 0 `i `b ]
[; ;newmain.c: 1108: RC1 = 0;
"1108
[e = _RC1 -> -> 0 `i `b ]
[; ;newmain.c: 1109: RC2 = 0;
"1109
[e = _RC2 -> -> 0 `i `b ]
[; ;newmain.c: 1110: RC3 = 0;
"1110
[e = _RC3 -> -> 0 `i `b ]
[; ;newmain.c: 1111: TRISA6 = 0;
"1111
[e = _TRISA6 -> -> 0 `i `b ]
[; ;newmain.c: 1112: TRISA7 = 0;
"1112
[e = _TRISA7 -> -> 0 `i `b ]
[; ;newmain.c: 1113: TRISC0 = 0;
"1113
[e = _TRISC0 -> -> 0 `i `b ]
[; ;newmain.c: 1114: TRISC1 = 0;
"1114
[e = _TRISC1 -> -> 0 `i `b ]
[; ;newmain.c: 1115: TRISC2 = 0;
"1115
[e = _TRISC2 -> -> 0 `i `b ]
[; ;newmain.c: 1116: TRISC3 = 0;
"1116
[e = _TRISC3 -> -> 0 `i `b ]
[; ;newmain.c: 1118: LCD_CmdWrite(0x02);
"1118
[e ( _LCD_CmdWrite (1 -> -> 2 `i `uc ]
[; ;newmain.c: 1119: LCD_CmdWrite(0x28);
"1119
[e ( _LCD_CmdWrite (1 -> -> 40 `i `uc ]
[; ;newmain.c: 1120: LCD_CmdWrite(0x0c);
"1120
[e ( _LCD_CmdWrite (1 -> -> 12 `i `uc ]
[; ;newmain.c: 1121: LCD_CmdWrite(0x01);
"1121
[e ( _LCD_CmdWrite (1 -> -> 1 `i `uc ]
[; ;newmain.c: 1122: LCD_CmdWrite(0x06);
"1122
[e ( _LCD_CmdWrite (1 -> -> 6 `i `uc ]
[; ;newmain.c: 1124: LCD_BuildChar(0,RupeeSymbol);
"1124
[e ( _LCD_BuildChar (2 , -> -> 0 `i `uc &U _RupeeSymbol ]
[; ;newmain.c: 1126: }
"1126
[e :UE 527 ]
}
"1129
[v _LCD_DisplayString `(v ~T0 @X0 1 ef1`*Cuc ]
"1130
{
[; ;newmain.c: 1129: void LCD_DisplayString(const char *s)
[; ;newmain.c: 1130: {
[e :U _LCD_DisplayString ]
"1129
[v _s `*Cuc ~T0 @X0 1 r1 ]
"1130
[f ]
[; ;newmain.c: 1131: while(*s)
"1131
[e $U 529  ]
[e :U 530 ]
[; ;newmain.c: 1132: LCD_DataWrite(*s++);
"1132
[e ( _LCD_DataWrite (1 *U ++ _s * -> -> 1 `i `x -> -> # *U _s `i `x ]
[e :U 529 ]
"1131
[e $ != -> *U _s `i -> -> -> 0 `i `Cuc `i 530  ]
[e :U 531 ]
[; ;newmain.c: 1133: }
"1133
[e :UE 528 ]
}
"1136
[v _LCD_Clear `(v ~T0 @X0 1 ef ]
"1137
{
[; ;newmain.c: 1136: void LCD_Clear(void)
[; ;newmain.c: 1137: {
[e :U _LCD_Clear ]
[f ]
[; ;newmain.c: 1138: LCD_CmdWrite(0x01);
"1138
[e ( _LCD_CmdWrite (1 -> -> 1 `i `uc ]
[; ;newmain.c: 1139: _delay((unsigned long)((2)*(4000000/4000.0)));
"1139
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 1140: }
"1140
[e :UE 532 ]
}
"1142
[v _displaypass `(v ~T0 @X0 1 ef1`i ]
"1143
{
[; ;newmain.c: 1142: void displaypass(int data)
[; ;newmain.c: 1143: {
[e :U _displaypass ]
"1142
[v _data `i ~T0 @X0 1 r1 ]
"1143
[f ]
[; ;newmain.c: 1144: LCD_DataWrite((data/10)+0x30);
"1144
[e ( _LCD_DataWrite (1 -> + / _data -> 10 `i -> 48 `i `uc ]
[; ;newmain.c: 1145: LCD_DataWrite((data%10)+0x30);
"1145
[e ( _LCD_DataWrite (1 -> + % _data -> 10 `i -> 48 `i `uc ]
[; ;newmain.c: 1146: }
"1146
[e :UE 533 ]
}
"1147
[v _display `(v ~T0 @X0 1 ef1`i ]
"1148
{
[; ;newmain.c: 1147: void display(int data)
[; ;newmain.c: 1148: {
[e :U _display ]
"1147
[v _data `i ~T0 @X0 1 r1 ]
"1148
[f ]
[; ;newmain.c: 1149: sprintf(dispvalue,"%d",data);
"1149
[e ( _sprintf (1 , (. , &U _dispvalue :s 35C _data ]
[; ;newmain.c: 1150: LCD_DisplayString(dispvalue);
"1150
[e ( _LCD_DisplayString (1 -> &U _dispvalue `*Cuc ]
[; ;newmain.c: 1153: }
"1153
[e :UE 534 ]
}
"1155
[v _display_price `(v ~T0 @X0 1 ef1`i ]
"1156
{
[; ;newmain.c: 1155: void display_price(int data)
[; ;newmain.c: 1156: {
[e :U _display_price ]
"1155
[v _data `i ~T0 @X0 1 r1 ]
"1156
[f ]
[; ;newmain.c: 1157: sprintf(dispvalue,"%d",data);
"1157
[e ( _sprintf (1 , (. , &U _dispvalue :s 36C _data ]
[; ;newmain.c: 1158: LCD_DisplayString(dispvalue);
"1158
[e ( _LCD_DisplayString (1 -> &U _dispvalue `*Cuc ]
[; ;newmain.c: 1160: }
"1160
[e :UE 535 ]
}
"1162
[v _LCD_BuildChar `(v ~T0 @X0 1 ef2`uc`*uc ]
"1163
{
[; ;newmain.c: 1162: void LCD_BuildChar(unsigned char loc,unsigned char *p)
[; ;newmain.c: 1163: {
[e :U _LCD_BuildChar ]
"1162
[v _loc `uc ~T0 @X0 1 r1 ]
[v _p `*uc ~T0 @X0 1 r2 ]
"1163
[f ]
"1164
[v _i `uc ~T0 @X0 1 a ]
[; ;newmain.c: 1164: unsigned char i;
[; ;newmain.c: 1165: if(loc<8)
"1165
[e $ ! < -> _loc `i -> 8 `i 537  ]
[; ;newmain.c: 1166: {
"1166
{
[; ;newmain.c: 1167: LCD_CmdWrite(0X40+(loc*8));
"1167
[e ( _LCD_CmdWrite (1 -> + -> 64 `i * -> _loc `i -> 8 `i `uc ]
[; ;newmain.c: 1168: for(i=0;i<=8;i++)
"1168
{
[e = _i -> -> 0 `i `uc ]
[e $ <= -> _i `i -> 8 `i 538  ]
[e $U 539  ]
"1169
[e :U 538 ]
[; ;newmain.c: 1169: LCD_DataWrite(p[i]);
[e ( _LCD_DataWrite (1 *U + _p * -> _i `ux -> -> # *U _p `ui `ux ]
"1168
[e ++ _i -> -> 1 `i `uc ]
[e $ <= -> _i `i -> 8 `i 538  ]
[e :U 539 ]
"1169
}
"1170
}
[e :U 537 ]
[; ;newmain.c: 1170: }
[; ;newmain.c: 1171: LCD_CmdWrite(0x80);
"1171
[e ( _LCD_CmdWrite (1 -> -> 128 `i `uc ]
[; ;newmain.c: 1172: }
"1172
[e :UE 536 ]
}
"1173
[v _buzzer `(v ~T0 @X0 1 ef1`ui ]
"1174
{
[; ;newmain.c: 1173: void buzzer(unsigned int a)
[; ;newmain.c: 1174: {
[e :U _buzzer ]
"1173
[v _a `ui ~T0 @X0 1 r1 ]
"1174
[f ]
[; ;newmain.c: 1175: RD1=1;
"1175
[e = _RD1 -> -> 1 `i `b ]
[; ;newmain.c: 1176: for(int i=0;i<=a;i++)
"1176
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $U 545  ]
"1177
[e :U 542 ]
[; ;newmain.c: 1177: _delay((unsigned long)((1)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"1176
[e ++ _i -> 1 `i ]
[e :U 545 ]
[e $ <= -> _i `ui _a 542  ]
[e :U 543 ]
"1177
}
[; ;newmain.c: 1178: RD1=0;
"1178
[e = _RD1 -> -> 0 `i `b ]
[; ;newmain.c: 1179: }
"1179
[e :UE 541 ]
}
"1182
[v _Write_EEPROM `(v ~T0 @X0 1 ef3`uc`uc`ui ]
"1183
{
[; ;newmain.c: 1182: void Write_EEPROM(unsigned char a1,unsigned char a2,unsigned int data_value)
[; ;newmain.c: 1183: {
[e :U _Write_EEPROM ]
"1182
[v _a1 `uc ~T0 @X0 1 r1 ]
[v _a2 `uc ~T0 @X0 1 r2 ]
[v _data_value `ui ~T0 @X0 1 r3 ]
"1183
[f ]
[; ;newmain.c: 1184: eeprom_write(a1,(data_value/10));
"1184
[e ( _eeprom_write (2 , _a1 -> / _data_value -> -> 10 `i `ui `uc ]
[; ;newmain.c: 1185: eeprom_write(a2,(data_value%10));
"1185
[e ( _eeprom_write (2 , _a2 -> % _data_value -> -> 10 `i `ui `uc ]
[; ;newmain.c: 1186: }
"1186
[e :UE 546 ]
}
"1188
[v _Read_EEPROM `(ui ~T0 @X0 1 ef2`uc`uc ]
"1189
{
[; ;newmain.c: 1188: unsigned int Read_EEPROM(unsigned char b1,unsigned char b2)
[; ;newmain.c: 1189: {
[e :U _Read_EEPROM ]
"1188
[v _b1 `uc ~T0 @X0 1 r1 ]
[v _b2 `uc ~T0 @X0 1 r2 ]
"1189
[f ]
"1190
[v _c1 `ui ~T0 @X0 1 a ]
[; ;newmain.c: 1190: unsigned int c1=0,c2=0;
[e = _c1 -> -> 0 `i `ui ]
[v _c2 `ui ~T0 @X0 1 a ]
[e = _c2 -> -> 0 `i `ui ]
[; ;newmain.c: 1191: c1=eeprom_read(b1);
"1191
[e = _c1 -> ( _eeprom_read (1 _b1 `ui ]
[; ;newmain.c: 1192: c2=eeprom_read(b2);
"1192
[e = _c2 -> ( _eeprom_read (1 _b2 `ui ]
[; ;newmain.c: 1193: return ((c1*10)+c2);
"1193
[e ) + * _c1 -> -> 10 `i `ui _c2 ]
[e $UE 547  ]
[; ;newmain.c: 1194: }
"1194
[e :UE 547 ]
}
"1195
[v _Write_EEPROM_Price `(v ~T0 @X0 1 ef4`uc`uc`uc`ui ]
"1196
{
[; ;newmain.c: 1195: void Write_EEPROM_Price(unsigned char a1,unsigned char a2,unsigned char a3,unsigned int data_value)
[; ;newmain.c: 1196: {
[e :U _Write_EEPROM_Price ]
"1195
[v _a1 `uc ~T0 @X0 1 r1 ]
[v _a2 `uc ~T0 @X0 1 r2 ]
[v _a3 `uc ~T0 @X0 1 r3 ]
[v _data_value `ui ~T0 @X0 1 r4 ]
"1196
[f ]
[; ;newmain.c: 1197: eeprom_write(a1,(data_value/100));
"1197
[e ( _eeprom_write (2 , _a1 -> / _data_value -> -> 100 `i `ui `uc ]
[; ;newmain.c: 1198: eeprom_write(a2,((data_value/10)%10));
"1198
[e ( _eeprom_write (2 , _a2 -> % / _data_value -> -> 10 `i `ui -> -> 10 `i `ui `uc ]
[; ;newmain.c: 1199: eeprom_write(a3,(data_value%10));
"1199
[e ( _eeprom_write (2 , _a3 -> % _data_value -> -> 10 `i `ui `uc ]
[; ;newmain.c: 1200: }
"1200
[e :UE 548 ]
}
"1202
[v _Read_EEPROM_Price `(ui ~T0 @X0 1 ef3`uc`uc`uc ]
"1203
{
[; ;newmain.c: 1202: unsigned int Read_EEPROM_Price(unsigned char b1,unsigned char b2,unsigned char b3)
[; ;newmain.c: 1203: {
[e :U _Read_EEPROM_Price ]
"1202
[v _b1 `uc ~T0 @X0 1 r1 ]
[v _b2 `uc ~T0 @X0 1 r2 ]
[v _b3 `uc ~T0 @X0 1 r3 ]
"1203
[f ]
"1204
[v _c1 `ui ~T0 @X0 1 a ]
[; ;newmain.c: 1204: unsigned int c1=0,c2=0,c3=0;
[e = _c1 -> -> 0 `i `ui ]
[v _c2 `ui ~T0 @X0 1 a ]
[e = _c2 -> -> 0 `i `ui ]
[v _c3 `ui ~T0 @X0 1 a ]
[e = _c3 -> -> 0 `i `ui ]
[; ;newmain.c: 1205: c1=eeprom_read(b1);
"1205
[e = _c1 -> ( _eeprom_read (1 _b1 `ui ]
[; ;newmain.c: 1206: c2=eeprom_read(b2);
"1206
[e = _c2 -> ( _eeprom_read (1 _b2 `ui ]
[; ;newmain.c: 1207: c3=eeprom_read(b3);
"1207
[e = _c3 -> ( _eeprom_read (1 _b3 `ui ]
[; ;newmain.c: 1208: return ((c1*100)+(c2*10)+c3);
"1208
[e ) + + * _c1 -> -> 100 `i `ui * _c2 -> -> 10 `i `ui _c3 ]
[e $UE 549  ]
[; ;newmain.c: 1209: }
"1209
[e :UE 549 ]
}
"1212
[v _STOCK_EMPTY_ROUTINE `(v ~T0 @X0 1 ef ]
"1213
{
[; ;newmain.c: 1212: void STOCK_EMPTY_ROUTINE()
[; ;newmain.c: 1213: {
[e :U _STOCK_EMPTY_ROUTINE ]
[f ]
[; ;newmain.c: 1214: LCD_Clear();
"1214
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 1215: LCD_DisplayString("  STOCK EMPTY!!  ");
"1215
[e ( _LCD_DisplayString (1 :s 37C ]
[; ;newmain.c: 1216: LCD_CmdWrite(0XC0);
"1216
[e ( _LCD_CmdWrite (1 -> -> 192 `i `uc ]
[; ;newmain.c: 1217: LCD_DisplayString(" CHOOSE AGAIN...  ");
"1217
[e ( _LCD_DisplayString (1 :s 38C ]
[; ;newmain.c: 1218: buzzer(70);
"1218
[e ( _buzzer (1 -> -> 70 `i `ui ]
[; ;newmain.c: 1219: _delay((unsigned long)((60)*(4000000/4000.0)));
"1219
[e ( __delay (1 -> * -> -> 60 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 1220: buzzer(70);
"1220
[e ( _buzzer (1 -> -> 70 `i `ui ]
[; ;newmain.c: 1221: _delay((unsigned long)((1500)*(4000000/4000.0)));
"1221
[e ( __delay (1 -> * -> -> 1500 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;newmain.c: 1222: buzzer(50);
"1222
[e ( _buzzer (1 -> -> 50 `i `ui ]
[; ;newmain.c: 1223: LCD_Clear();
"1223
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 1224: }
"1224
[e :UE 550 ]
}
"1226
[v _Set_Channel `(v ~T0 @X0 1 ef1`ui ]
"1227
{
[; ;newmain.c: 1226: void Set_Channel(unsigned int data)
[; ;newmain.c: 1227: {
[e :U _Set_Channel ]
"1226
[v _data `ui ~T0 @X0 1 r1 ]
"1227
[f ]
[; ;newmain.c: 1228: if(data==10)
"1228
[e $ ! == _data -> -> 10 `i `ui 552  ]
[; ;newmain.c: 1229: {
"1229
{
[; ;newmain.c: 1230: RB2=0;RB3=1;RB4=1;RB5=1;
"1230
[e = _RB2 -> -> 0 `i `b ]
[e = _RB3 -> -> 1 `i `b ]
[e = _RB4 -> -> 1 `i `b ]
[e = _RB5 -> -> 1 `i `b ]
"1231
}
[; ;newmain.c: 1231: }
[e $U 553  ]
"1232
[e :U 552 ]
[; ;newmain.c: 1232: else if(data>=20 && data<=40)
[e $ ! && >= _data -> -> 20 `i `ui <= _data -> -> 40 `i `ui 554  ]
[; ;newmain.c: 1233: {
"1233
{
[; ;newmain.c: 1234: RB2=0;RB3=0;RB4=1;RB5=1;
"1234
[e = _RB2 -> -> 0 `i `b ]
[e = _RB3 -> -> 0 `i `b ]
[e = _RB4 -> -> 1 `i `b ]
[e = _RB5 -> -> 1 `i `b ]
"1235
}
[; ;newmain.c: 1235: }
[e $U 555  ]
"1236
[e :U 554 ]
[; ;newmain.c: 1236: else if(data>=50 && data<=90)
[e $ ! && >= _data -> -> 50 `i `ui <= _data -> -> 90 `i `ui 556  ]
[; ;newmain.c: 1237: {
"1237
{
[; ;newmain.c: 1238: RB2=0;RB3=0;RB4=0;RB5=1;
"1238
[e = _RB2 -> -> 0 `i `b ]
[e = _RB3 -> -> 0 `i `b ]
[e = _RB4 -> -> 0 `i `b ]
[e = _RB5 -> -> 1 `i `b ]
"1239
}
[; ;newmain.c: 1239: }
[e $U 557  ]
"1240
[e :U 556 ]
[; ;newmain.c: 1240: else if(data>=100)
[e $ ! >= _data -> -> 100 `i `ui 558  ]
[; ;newmain.c: 1241: {
"1241
{
[; ;newmain.c: 1242: RB2=0;RB3=0;RB4=0;RB5=0;
"1242
[e = _RB2 -> -> 0 `i `b ]
[e = _RB3 -> -> 0 `i `b ]
[e = _RB4 -> -> 0 `i `b ]
[e = _RB5 -> -> 0 `i `b ]
"1243
}
[; ;newmain.c: 1243: }
[e $U 559  ]
"1244
[e :U 558 ]
[; ;newmain.c: 1244: else
[; ;newmain.c: 1245: {
"1245
{
[; ;newmain.c: 1246: RB2=1;RB3=1;RB4=1;RB5=1;
"1246
[e = _RB2 -> -> 1 `i `b ]
[e = _RB3 -> -> 1 `i `b ]
[e = _RB4 -> -> 1 `i `b ]
[e = _RB5 -> -> 1 `i `b ]
"1247
}
[e :U 559 ]
[e :U 557 ]
[e :U 555 ]
[e :U 553 ]
[; ;newmain.c: 1247: }
[; ;newmain.c: 1248: }
"1248
[e :UE 551 ]
}
"1250
[v _Monitor_Balance `(v ~T0 @X0 1 ef1`ui ]
"1251
{
[; ;newmain.c: 1250: void Monitor_Balance(unsigned int amount)
[; ;newmain.c: 1251: {
[e :U _Monitor_Balance ]
"1250
[v _amount `ui ~T0 @X0 1 r1 ]
"1251
[f ]
[; ;newmain.c: 1252: if(amount<= 90) { RB5 = 1;}
"1252
[e $ ! <= _amount -> -> 90 `i `ui 561  ]
{
[e = _RB5 -> -> 1 `i `b ]
}
[e :U 561 ]
[; ;newmain.c: 1253: if(amount<= 40) { RB5 = 1; RB4=1; }
"1253
[e $ ! <= _amount -> -> 40 `i `ui 562  ]
{
[e = _RB5 -> -> 1 `i `b ]
[e = _RB4 -> -> 1 `i `b ]
}
[e :U 562 ]
[; ;newmain.c: 1254: if(amount<= 10) { RB5 = 1; RB4=1; RB3=1; }
"1254
[e $ ! <= _amount -> -> 10 `i `ui 563  ]
{
[e = _RB5 -> -> 1 `i `b ]
[e = _RB4 -> -> 1 `i `b ]
[e = _RB3 -> -> 1 `i `b ]
}
[e :U 563 ]
[; ;newmain.c: 1255: if(amount==0) { RB5 = 1; RB4=1; RB3=1; RB2=1; }
"1255
[e $ ! == _amount -> -> 0 `i `ui 564  ]
{
[e = _RB5 -> -> 1 `i `b ]
[e = _RB4 -> -> 1 `i `b ]
[e = _RB3 -> -> 1 `i `b ]
[e = _RB2 -> -> 1 `i `b ]
}
[e :U 564 ]
[; ;newmain.c: 1256: }
"1256
[e :UE 560 ]
}
"1258
[v _escprocess `(v ~T0 @X0 1 ef ]
"1259
{
[; ;newmain.c: 1258: void escprocess()
[; ;newmain.c: 1259: {
[e :U _escprocess ]
[f ]
[; ;newmain.c: 1261: padcount=0;rupee=0;stock=0;
"1261
[e = _padcount -> -> 0 `i `ui ]
[e = _rupee -> -> 0 `i `ui ]
[e = _stock -> -> 0 `i `ui ]
[; ;newmain.c: 1262: INTE=0;RB1=1;
"1262
[e = _INTE -> -> 0 `i `b ]
[e = _RB1 -> -> 1 `i `b ]
[; ;newmain.c: 1263: status=0;
"1263
[e = _status -> -> 0 `i `b ]
[; ;newmain.c: 1264: TRISA1 = 1;
"1264
[e = _TRISA1 -> -> 1 `i `b ]
[; ;newmain.c: 1265: TRISA0 = 1;
"1265
[e = _TRISA0 -> -> 1 `i `b ]
[; ;newmain.c: 1266: TRISA5 = 1;
"1266
[e = _TRISA5 -> -> 1 `i `b ]
[; ;newmain.c: 1267: TRISB6 = 1;
"1267
[e = _TRISB6 -> -> 1 `i `b ]
[; ;newmain.c: 1268: TRISB7 = 1;
"1268
[e = _TRISB7 -> -> 1 `i `b ]
[; ;newmain.c: 1269: LCD_Clear();
"1269
[e ( _LCD_Clear ..  ]
[; ;newmain.c: 1270: buzzer(50);
"1270
[e ( _buzzer (1 -> -> 50 `i `ui ]
[; ;newmain.c: 1272: }
"1272
[e :UE 565 ]
}
[p f _sprintf 8388736 ]
[a 32C 32 78 111 115 0 ]
[a 35C 37 100 0 ]
[a 36C 37 100 0 ]
[a 8C 95 49 95 95 50 95 95 51 95 95 52 95 95 53 95 95 0 ]
[a 29C 32 32 82 79 87 95 0 ]
[a 9C 32 82 79 87 95 0 ]
[a 27C 80 114 111 99 101 115 115 111 114 32 82 69 83 69 84 0 ]
[a 28C 69 78 84 69 82 32 80 65 82 65 77 69 84 69 82 83 0 ]
[a 6C 68 72 65 82 83 65 78 32 77 65 67 72 73 78 69 83 0 ]
[a 23C 69 78 84 69 82 32 80 65 83 83 87 79 82 68 32 63 0 ]
[a 34C 32 32 68 65 84 65 83 32 83 84 79 82 69 68 46 46 0 ]
[a 16C 32 80 76 69 65 83 69 32 87 65 73 84 46 46 46 0 ]
[a 11C 32 73 78 83 69 82 84 32 78 79 84 69 83 46 46 46 0 ]
[a 15C 32 32 80 82 79 67 69 83 83 73 78 71 46 46 46 0 ]
[a 24C 42 42 0 ]
[a 17C 32 80 76 69 65 83 69 32 67 79 76 76 69 67 84 32 0 ]
[a 31C 32 32 32 81 84 89 58 32 0 ]
[a 12C 32 32 66 65 76 65 78 67 69 58 32 0 ]
[a 33C 32 32 32 80 82 73 67 69 58 32 0 ]
[a 10C 32 47 32 0 ]
[a 14C 32 73 78 83 69 82 84 32 78 79 84 69 83 46 46 32 0 ]
[a 20C 32 32 80 76 69 65 83 69 32 76 79 65 68 46 46 32 0 ]
[a 2C 32 73 78 73 84 73 65 76 73 90 73 78 71 46 46 46 32 0 ]
[a 4C 32 77 69 77 79 82 89 32 70 76 65 83 72 69 68 33 32 0 ]
[a 19C 32 83 84 79 67 75 32 69 77 80 84 89 32 33 33 33 32 0 ]
[a 7C 32 32 32 83 69 76 69 67 84 32 82 79 87 32 32 0 ]
[a 1C 32 70 65 67 84 79 82 89 32 82 69 83 69 84 32 32 0 ]
[a 30C 32 32 83 84 79 67 75 32 32 0 ]
[a 22C 32 32 32 32 82 69 76 79 65 68 69 68 46 46 32 32 0 ]
[a 38C 32 67 72 79 79 83 69 32 65 71 65 73 78 46 46 46 32 32 0 ]
[a 26C 32 32 84 82 89 32 65 71 65 73 78 46 46 46 46 32 32 0 ]
[a 3C 32 32 70 76 65 83 72 73 78 71 46 46 46 46 32 32 0 ]
[a 37C 32 32 83 84 79 67 75 32 69 77 80 84 89 33 33 32 32 0 ]
[a 5C 32 32 32 87 69 76 67 79 77 69 32 84 79 32 32 32 0 ]
[a 18C 32 32 32 84 72 65 78 75 32 89 79 85 32 33 32 32 32 0 ]
[a 25C 32 32 32 32 87 82 79 78 71 32 33 33 32 32 32 32 0 ]
[a 21C 32 32 32 32 32 83 84 79 67 75 83 32 32 32 32 32 0 ]
[a 13C 32 32 0 ]
