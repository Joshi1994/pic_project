

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Dec 20 12:12:27 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	maintext_split_1,global,class=CODE,split=1,delta=2
    48                           	psect	maintext_split_2,global,class=CODE,split=1,delta=2
    49                           	psect	maintext_split_3,global,class=CODE,split=1,delta=2
    50                           	psect	maintext_split_4,global,class=CODE,split=1,delta=2
    51                           	psect	maintext_split_5,global,class=CODE,split=1,delta=2
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 1.44
    55                           ; Generated 14/09/2017 GMT
    56                           ; 
    57                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F887 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  000E                     	;# 
   104  000F                     	;# 
   105  0010                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0013                     	;# 
   109  0014                     	;# 
   110  0015                     	;# 
   111  0015                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  0081                     	;# 
   124  0085                     	;# 
   125  0086                     	;# 
   126  0087                     	;# 
   127  0088                     	;# 
   128  0089                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  008F                     	;# 
   133  0090                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0093                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0095                     	;# 
   141  0096                     	;# 
   142  0097                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  009F                     	;# 
   151  0105                     	;# 
   152  0107                     	;# 
   153  0108                     	;# 
   154  0109                     	;# 
   155  010C                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010F                     	;# 
   160  0185                     	;# 
   161  0187                     	;# 
   162  0188                     	;# 
   163  0189                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166                           
   167                           	psect	eeprom_data
   168  0000  0003 0000 0003 0000 0003 0000 0003 0000 	db	3,0,3,0,3,0,3,0	;# 
   169  0008  0003 0000 0003 0000 0003 0000 0003 0000 	db	3,0,3,0,3,0,3,0	;# 
   170  0010  0003 0000 0003 0000 0000 0001 0000 0000 	db	3,0,3,0,0,1,0,0	;# 
   171  0018  0002 0000 0000 0003 0000 0000 0005 0000 	db	2,0,0,3,0,0,5,0	;# 
   172  0020  0001 0000 0000 0000 0000 0000 0000 0000 	db	1,0,0,0,0,0,0,0	;# 
   173  0028  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   174  0030  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   175  0038  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   176  0040  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
   177                           
   178                           	psect	idataBANK1
   179  07F3                     __pidataBANK1:	
   180                           
   181                           ;initializer for _RupeeSymbol
   182  07F3  341F               	retlw	31
   183  07F4  3402               	retlw	2
   184  07F5  340F               	retlw	15
   185  07F6  3402               	retlw	2
   186  07F7  341C               	retlw	28
   187  07F8  3408               	retlw	8
   188  07F9  3404               	retlw	4
   189  07FA  3402               	retlw	2
   190                           
   191                           	psect	stringtext
   192  1000                     __pstringtext:	
   193  1000                     stringtab:	
   194  1000                     __stringtab:	
   195                           
   196                           ;	String table - string pointers are 2 bytes each
   197  1000  1BFF               	btfsc	btemp+1,7
   198  1001  280A               	ljmp	stringcode
   199  1002  1383               	bcf	3,7
   200  1003  187F               	btfsc	btemp+1,0
   201  1004  1783               	bsf	3,7
   202  1005  0800               	movf	0,w
   203  1006  0A84               	incf	4,f
   204  1007  1903               	skipnz
   205  1008  0AFF               	incf	btemp+1,f
   206  1009  0008               	return
   207  100A                     stringcode:	
   208  100A  087F               	movf	btemp+1,w
   209  100B  397F               	andlw	127
   210  100C  008A               	movwf	10
   211  100D  0804               	movf	4,w
   212  100E  0A84               	incf	4,f
   213  100F  1903               	skipnz
   214  1010  0AFF               	incf	btemp+1,f
   215  1011  0082               	movwf	2
   216  1012                     __stringbase:	
   217  1012                     __end_of__stringtab:	
   218  1012                     _dpowers:	
   219  1012  3401               	retlw	1
   220  1013  3400               	retlw	0
   221  1014  340A               	retlw	10
   222  1015  3400               	retlw	0
   223  1016  3464               	retlw	100
   224  1017  3400               	retlw	0
   225  1018  34E8               	retlw	232
   226  1019  3403               	retlw	3
   227  101A  3410               	retlw	16
   228  101B  3427               	retlw	39
   229  101C                     __end_of_dpowers:	
   230  000B                     _INTCON	set	11
   231  0009                     _PORTE	set	9
   232  0008                     _PORTD	set	8
   233  0005                     _PORTA	set	5
   234  0007                     _PORTC	set	7
   235  0006                     _PORTB	set	6
   236  005F                     _GIE	set	95
   237  0018                     _CARRY	set	24
   238  0041                     _RD1	set	65
   239  003B                     _RC3	set	59
   240  003A                     _RC2	set	58
   241  0039                     _RC1	set	57
   242  0038                     _RC0	set	56
   243  002F                     _RA7	set	47
   244  002E                     _RA6	set	46
   245  004A                     _RE2	set	74
   246  002B                     _RA3	set	43
   247  0042                     _RD2	set	66
   248  003C                     _RC4	set	60
   249  003E                     _RC6	set	62
   250  0044                     _RD4	set	68
   251  0046                     _RD6	set	70
   252  002C                     _RA4	set	44
   253  004B                     _RE3	set	75
   254  0043                     _RD3	set	67
   255  0037                     _RB7	set	55
   256  003D                     _RC5	set	61
   257  0036                     _RB6	set	54
   258  003F                     _RC7	set	63
   259  002D                     _RA5	set	45
   260  0045                     _RD5	set	69
   261  002A                     _RA2	set	42
   262  0047                     _RD7	set	71
   263  0029                     _RA1	set	41
   264  0048                     _RE0	set	72
   265  0049                     _RE1	set	73
   266  0035                     _RB5	set	53
   267  0034                     _RB4	set	52
   268  0033                     _RB3	set	51
   269  0032                     _RB2	set	50
   270  0031                     _RB1	set	49
   271  005C                     _INTE	set	92
   272  0059                     _INTF	set	89
   273  008F                     _OSCCON	set	143
   274  0096                     _IOCB	set	150
   275  0095                     _WPUB	set	149
   276  0081                     _OPTION_REG	set	129
   277  0089                     _TRISE	set	137
   278  0088                     _TRISD	set	136
   279  0087                     _TRISC	set	135
   280  0086                     _TRISB	set	134
   281  0085                     _TRISA	set	133
   282  043B                     _TRISC3	set	1083
   283  043A                     _TRISC2	set	1082
   284  0439                     _TRISC1	set	1081
   285  0438                     _TRISC0	set	1080
   286  042F                     _TRISA7	set	1071
   287  042E                     _TRISA6	set	1070
   288  0437                     _TRISB7	set	1079
   289  0436                     _TRISB6	set	1078
   290  042D                     _TRISA5	set	1069
   291  0428                     _TRISA0	set	1064
   292  0429                     _TRISA1	set	1065
   293  010C                     _EEDATA	set	268
   294  010D                     _EEADR	set	269
   295  018D                     _EECON2	set	397
   296  018C                     _EECON1	set	396
   297  0189                     _ANSELH	set	393
   298  0188                     _ANSEL	set	392
   299  0C62                     _WREN	set	3170
   300  0C60                     _RD	set	3168
   301  0C61                     _WR	set	3169
   302  101C                     STR_38:	
   303  101C  3420               	retlw	32	;' '
   304  101D  3443               	retlw	67	;'C'
   305  101E  3448               	retlw	72	;'H'
   306  101F  344F               	retlw	79	;'O'
   307  1020  344F               	retlw	79	;'O'
   308  1021  3453               	retlw	83	;'S'
   309  1022  3445               	retlw	69	;'E'
   310  1023  3420               	retlw	32	;' '
   311  1024  3441               	retlw	65	;'A'
   312  1025  3447               	retlw	71	;'G'
   313  1026  3441               	retlw	65	;'A'
   314  1027  3449               	retlw	73	;'I'
   315  1028  344E               	retlw	78	;'N'
   316  1029  342E               	retlw	46	;'.'
   317  102A  342E               	retlw	46	;'.'
   318  102B  342E               	retlw	46	;'.'
   319  102C  3420               	retlw	32	;' '
   320  102D  3420               	retlw	32	;' '
   321  102E  3400               	retlw	0
   322  102F                     STR_18:	
   323  102F  3420               	retlw	32	;' '
   324  1030  3420               	retlw	32	;' '
   325  1031  3420               	retlw	32	;' '
   326  1032  3454               	retlw	84	;'T'
   327  1033  3448               	retlw	72	;'H'
   328  1034  3441               	retlw	65	;'A'
   329  1035  344E               	retlw	78	;'N'
   330  1036  344B               	retlw	75	;'K'
   331  1037  3420               	retlw	32	;' '
   332  1038  3459               	retlw	89	;'Y'
   333  1039  344F               	retlw	79	;'O'
   334  103A  3455               	retlw	85	;'U'
   335  103B  3420               	retlw	32	;' '
   336  103C  3421               	retlw	33	;'!'
   337  103D  3420               	retlw	32	;' '
   338  103E  3420               	retlw	32	;' '
   339  103F  3420               	retlw	32	;' '
   340  1040  3400               	retlw	0
   341  1041                     STR_37:	
   342  1041  3420               	retlw	32	;' '
   343  1042  3420               	retlw	32	;' '
   344  1043  3453               	retlw	83	;'S'
   345  1044  3454               	retlw	84	;'T'
   346  1045  344F               	retlw	79	;'O'
   347  1046  3443               	retlw	67	;'C'
   348  1047  344B               	retlw	75	;'K'
   349  1048  3420               	retlw	32	;' '
   350  1049  3445               	retlw	69	;'E'
   351  104A  344D               	retlw	77	;'M'
   352  104B  3450               	retlw	80	;'P'
   353  104C  3454               	retlw	84	;'T'
   354  104D  3459               	retlw	89	;'Y'
   355  104E  3421               	retlw	33	;'!'
   356  104F  3421               	retlw	33	;'!'
   357  1050  3420               	retlw	32	;' '
   358  1051  3420               	retlw	32	;' '
   359  1052  3400               	retlw	0
   360  1053                     STR_26:	
   361  1053  3420               	retlw	32	;' '
   362  1054  3420               	retlw	32	;' '
   363  1055  3454               	retlw	84	;'T'
   364  1056  3452               	retlw	82	;'R'
   365  1057  3459               	retlw	89	;'Y'
   366  1058  3420               	retlw	32	;' '
   367  1059  3441               	retlw	65	;'A'
   368  105A  3447               	retlw	71	;'G'
   369  105B  3441               	retlw	65	;'A'
   370  105C  3449               	retlw	73	;'I'
   371  105D  344E               	retlw	78	;'N'
   372  105E  342E               	retlw	46	;'.'
   373  105F  342E               	retlw	46	;'.'
   374  1060  342E               	retlw	46	;'.'
   375  1061  342E               	retlw	46	;'.'
   376  1062  3420               	retlw	32	;' '
   377  1063  3420               	retlw	32	;' '
   378  1064  3400               	retlw	0
   379  1065                     STR_19:	
   380  1065  3420               	retlw	32	;' '
   381  1066  3453               	retlw	83	;'S'
   382  1067  3454               	retlw	84	;'T'
   383  1068  344F               	retlw	79	;'O'
   384  1069  3443               	retlw	67	;'C'
   385  106A  344B               	retlw	75	;'K'
   386  106B  3420               	retlw	32	;' '
   387  106C  3445               	retlw	69	;'E'
   388  106D  344D               	retlw	77	;'M'
   389  106E  3450               	retlw	80	;'P'
   390  106F  3454               	retlw	84	;'T'
   391  1070  3459               	retlw	89	;'Y'
   392  1071  3420               	retlw	32	;' '
   393  1072  3421               	retlw	33	;'!'
   394  1073  3421               	retlw	33	;'!'
   395  1074  3421               	retlw	33	;'!'
   396  1075  3420               	retlw	32	;' '
   397  1076  3400               	retlw	0
   398  1077                     STR_4:	
   399  1077  3420               	retlw	32	;' '
   400  1078  344D               	retlw	77	;'M'
   401  1079  3445               	retlw	69	;'E'
   402  107A  344D               	retlw	77	;'M'
   403  107B  344F               	retlw	79	;'O'
   404  107C  3452               	retlw	82	;'R'
   405  107D  3459               	retlw	89	;'Y'
   406  107E  3420               	retlw	32	;' '
   407  107F  3446               	retlw	70	;'F'
   408  1080  344C               	retlw	76	;'L'
   409  1081  3441               	retlw	65	;'A'
   410  1082  3453               	retlw	83	;'S'
   411  1083  3448               	retlw	72	;'H'
   412  1084  3445               	retlw	69	;'E'
   413  1085  3444               	retlw	68	;'D'
   414  1086  3421               	retlw	33	;'!'
   415  1087  3420               	retlw	32	;' '
   416  1088  3400               	retlw	0
   417  1089                     STR_2:	
   418  1089  3420               	retlw	32	;' '
   419  108A  3449               	retlw	73	;'I'
   420  108B  344E               	retlw	78	;'N'
   421  108C  3449               	retlw	73	;'I'
   422  108D  3454               	retlw	84	;'T'
   423  108E  3449               	retlw	73	;'I'
   424  108F  3441               	retlw	65	;'A'
   425  1090  344C               	retlw	76	;'L'
   426  1091  3449               	retlw	73	;'I'
   427  1092  345A               	retlw	90	;'Z'
   428  1093  3449               	retlw	73	;'I'
   429  1094  344E               	retlw	78	;'N'
   430  1095  3447               	retlw	71	;'G'
   431  1096  342E               	retlw	46	;'.'
   432  1097  342E               	retlw	46	;'.'
   433  1098  342E               	retlw	46	;'.'
   434  1099  3420               	retlw	32	;' '
   435  109A  3400               	retlw	0
   436  109B                     STR_21:	
   437  109B  3420               	retlw	32	;' '
   438  109C  3420               	retlw	32	;' '
   439  109D  3420               	retlw	32	;' '
   440  109E  3420               	retlw	32	;' '
   441  109F  3420               	retlw	32	;' '
   442  10A0  3453               	retlw	83	;'S'
   443  10A1  3454               	retlw	84	;'T'
   444  10A2  344F               	retlw	79	;'O'
   445  10A3  3443               	retlw	67	;'C'
   446  10A4  344B               	retlw	75	;'K'
   447  10A5  3453               	retlw	83	;'S'
   448  10A6  3420               	retlw	32	;' '
   449  10A7  3420               	retlw	32	;' '
   450  10A8  3420               	retlw	32	;' '
   451  10A9  3420               	retlw	32	;' '
   452  10AA  3420               	retlw	32	;' '
   453  10AB  3400               	retlw	0
   454  10AC                     STR_25:	
   455  10AC  3420               	retlw	32	;' '
   456  10AD  3420               	retlw	32	;' '
   457  10AE  3420               	retlw	32	;' '
   458  10AF  3420               	retlw	32	;' '
   459  10B0  3457               	retlw	87	;'W'
   460  10B1  3452               	retlw	82	;'R'
   461  10B2  344F               	retlw	79	;'O'
   462  10B3  344E               	retlw	78	;'N'
   463  10B4  3447               	retlw	71	;'G'
   464  10B5  3420               	retlw	32	;' '
   465  10B6  3421               	retlw	33	;'!'
   466  10B7  3421               	retlw	33	;'!'
   467  10B8  3420               	retlw	32	;' '
   468  10B9  3420               	retlw	32	;' '
   469  10BA  3420               	retlw	32	;' '
   470  10BB  3420               	retlw	32	;' '
   471  10BC  3400               	retlw	0
   472  10BD                     STR_5:	
   473  10BD  3420               	retlw	32	;' '
   474  10BE  3420               	retlw	32	;' '
   475  10BF  3420               	retlw	32	;' '
   476  10C0  3457               	retlw	87	;'W'
   477  10C1  3445               	retlw	69	;'E'
   478  10C2  344C               	retlw	76	;'L'
   479  10C3  3443               	retlw	67	;'C'
   480  10C4  344F               	retlw	79	;'O'
   481  10C5  344D               	retlw	77	;'M'
   482  10C6  3445               	retlw	69	;'E'
   483  10C7  3420               	retlw	32	;' '
   484  10C8  3454               	retlw	84	;'T'
   485  10C9  344F               	retlw	79	;'O'
   486  10CA  3420               	retlw	32	;' '
   487  10CB  3420               	retlw	32	;' '
   488  10CC  3420               	retlw	32	;' '
   489  10CD  3400               	retlw	0
   490  10CE                     STR_3:	
   491  10CE  3420               	retlw	32	;' '
   492  10CF  3420               	retlw	32	;' '
   493  10D0  3446               	retlw	70	;'F'
   494  10D1  344C               	retlw	76	;'L'
   495  10D2  3441               	retlw	65	;'A'
   496  10D3  3453               	retlw	83	;'S'
   497  10D4  3448               	retlw	72	;'H'
   498  10D5  3449               	retlw	73	;'I'
   499  10D6  344E               	retlw	78	;'N'
   500  10D7  3447               	retlw	71	;'G'
   501  10D8  342E               	retlw	46	;'.'
   502  10D9  342E               	retlw	46	;'.'
   503  10DA  342E               	retlw	46	;'.'
   504  10DB  342E               	retlw	46	;'.'
   505  10DC  3420               	retlw	32	;' '
   506  10DD  3420               	retlw	32	;' '
   507  10DE  3400               	retlw	0
   508  10DF                     STR_22:	
   509  10DF  3420               	retlw	32	;' '
   510  10E0  3420               	retlw	32	;' '
   511  10E1  3420               	retlw	32	;' '
   512  10E2  3420               	retlw	32	;' '
   513  10E3  3452               	retlw	82	;'R'
   514  10E4  3445               	retlw	69	;'E'
   515  10E5  344C               	retlw	76	;'L'
   516  10E6  344F               	retlw	79	;'O'
   517  10E7  3441               	retlw	65	;'A'
   518  10E8  3444               	retlw	68	;'D'
   519  10E9  3445               	retlw	69	;'E'
   520  10EA  3444               	retlw	68	;'D'
   521  10EB  342E               	retlw	46	;'.'
   522  10EC  342E               	retlw	46	;'.'
   523  10ED  3420               	retlw	32	;' '
   524  10EE  3420               	retlw	32	;' '
   525  10EF  3400               	retlw	0
   526  10F0                     STR_1:	
   527  10F0  3420               	retlw	32	;' '
   528  10F1  3446               	retlw	70	;'F'
   529  10F2  3441               	retlw	65	;'A'
   530  10F3  3443               	retlw	67	;'C'
   531  10F4  3454               	retlw	84	;'T'
   532  10F5  344F               	retlw	79	;'O'
   533  10F6  3452               	retlw	82	;'R'
   534  10F7  3459               	retlw	89	;'Y'
   535  10F8  3420               	retlw	32	;' '
   536  10F9  3452               	retlw	82	;'R'
   537  10FA  3445               	retlw	69	;'E'
   538  10FB  3453               	retlw	83	;'S'
   539  10FC  3445               	retlw	69	;'E'
   540  10FD  3454               	retlw	84	;'T'
   541  10FE  3420               	retlw	32	;' '
   542  10FF  3420               	retlw	32	;' '
   543  1100  3400               	retlw	0
   544  1101                     STR_20:	
   545  1101  3420               	retlw	32	;' '
   546  1102  3420               	retlw	32	;' '
   547  1103  3450               	retlw	80	;'P'
   548  1104  344C               	retlw	76	;'L'
   549  1105  3445               	retlw	69	;'E'
   550  1106  3441               	retlw	65	;'A'
   551  1107  3453               	retlw	83	;'S'
   552  1108  3445               	retlw	69	;'E'
   553  1109  3420               	retlw	32	;' '
   554  110A  344C               	retlw	76	;'L'
   555  110B  344F               	retlw	79	;'O'
   556  110C  3441               	retlw	65	;'A'
   557  110D  3444               	retlw	68	;'D'
   558  110E  342E               	retlw	46	;'.'
   559  110F  342E               	retlw	46	;'.'
   560  1110  3420               	retlw	32	;' '
   561  1111  3400               	retlw	0
   562  1112                     STR_14:	
   563  1112  3420               	retlw	32	;' '
   564  1113  3449               	retlw	73	;'I'
   565  1114  344E               	retlw	78	;'N'
   566  1115  3453               	retlw	83	;'S'
   567  1116  3445               	retlw	69	;'E'
   568  1117  3452               	retlw	82	;'R'
   569  1118  3454               	retlw	84	;'T'
   570  1119  3420               	retlw	32	;' '
   571  111A  344E               	retlw	78	;'N'
   572  111B  344F               	retlw	79	;'O'
   573  111C  3454               	retlw	84	;'T'
   574  111D  3445               	retlw	69	;'E'
   575  111E  3453               	retlw	83	;'S'
   576  111F  342E               	retlw	46	;'.'
   577  1120  342E               	retlw	46	;'.'
   578  1121  3420               	retlw	32	;' '
   579  1122  3400               	retlw	0
   580  1123                     STR_17:	
   581  1123  3420               	retlw	32	;' '
   582  1124  3450               	retlw	80	;'P'
   583  1125  344C               	retlw	76	;'L'
   584  1126  3445               	retlw	69	;'E'
   585  1127  3441               	retlw	65	;'A'
   586  1128  3453               	retlw	83	;'S'
   587  1129  3445               	retlw	69	;'E'
   588  112A  3420               	retlw	32	;' '
   589  112B  3443               	retlw	67	;'C'
   590  112C  344F               	retlw	79	;'O'
   591  112D  344C               	retlw	76	;'L'
   592  112E  344C               	retlw	76	;'L'
   593  112F  3445               	retlw	69	;'E'
   594  1130  3443               	retlw	67	;'C'
   595  1131  3454               	retlw	84	;'T'
   596  1132  3420               	retlw	32	;' '
   597  1133  3400               	retlw	0
   598  1134                     STR_11:	
   599  1134  3420               	retlw	32	;' '
   600  1135  3449               	retlw	73	;'I'
   601  1136  344E               	retlw	78	;'N'
   602  1137  3453               	retlw	83	;'S'
   603  1138  3445               	retlw	69	;'E'
   604  1139  3452               	retlw	82	;'R'
   605  113A  3454               	retlw	84	;'T'
   606  113B  3420               	retlw	32	;' '
   607  113C  344E               	retlw	78	;'N'
   608  113D  344F               	retlw	79	;'O'
   609  113E  3454               	retlw	84	;'T'
   610  113F  3445               	retlw	69	;'E'
   611  1140  3453               	retlw	83	;'S'
   612  1141  342E               	retlw	46	;'.'
   613  1142  342E               	retlw	46	;'.'
   614  1143  342E               	retlw	46	;'.'
   615  1144  3400               	retlw	0
   616  1145                     STR_34:	
   617  1145  3420               	retlw	32	;' '
   618  1146  3420               	retlw	32	;' '
   619  1147  3444               	retlw	68	;'D'
   620  1148  3441               	retlw	65	;'A'
   621  1149  3454               	retlw	84	;'T'
   622  114A  3441               	retlw	65	;'A'
   623  114B  3453               	retlw	83	;'S'
   624  114C  3420               	retlw	32	;' '
   625  114D  3453               	retlw	83	;'S'
   626  114E  3454               	retlw	84	;'T'
   627  114F  344F               	retlw	79	;'O'
   628  1150  3452               	retlw	82	;'R'
   629  1151  3445               	retlw	69	;'E'
   630  1152  3444               	retlw	68	;'D'
   631  1153  342E               	retlw	46	;'.'
   632  1154  342E               	retlw	46	;'.'
   633  1155  3400               	retlw	0
   634  1156                     STR_23:	
   635  1156  3445               	retlw	69	;'E'
   636  1157  344E               	retlw	78	;'N'
   637  1158  3454               	retlw	84	;'T'
   638  1159  3445               	retlw	69	;'E'
   639  115A  3452               	retlw	82	;'R'
   640  115B  3420               	retlw	32	;' '
   641  115C  3450               	retlw	80	;'P'
   642  115D  3441               	retlw	65	;'A'
   643  115E  3453               	retlw	83	;'S'
   644  115F  3453               	retlw	83	;'S'
   645  1160  3457               	retlw	87	;'W'
   646  1161  344F               	retlw	79	;'O'
   647  1162  3452               	retlw	82	;'R'
   648  1163  3444               	retlw	68	;'D'
   649  1164  3420               	retlw	32	;' '
   650  1165  343F               	retlw	63	;'?'
   651  1166  3400               	retlw	0
   652  1167                     STR_6:	
   653  1167  3444               	retlw	68	;'D'
   654  1168  3448               	retlw	72	;'H'
   655  1169  3441               	retlw	65	;'A'
   656  116A  3452               	retlw	82	;'R'
   657  116B  3453               	retlw	83	;'S'
   658  116C  3441               	retlw	65	;'A'
   659  116D  344E               	retlw	78	;'N'
   660  116E  3420               	retlw	32	;' '
   661  116F  344D               	retlw	77	;'M'
   662  1170  3441               	retlw	65	;'A'
   663  1171  3443               	retlw	67	;'C'
   664  1172  3448               	retlw	72	;'H'
   665  1173  3449               	retlw	73	;'I'
   666  1174  344E               	retlw	78	;'N'
   667  1175  3445               	retlw	69	;'E'
   668  1176  3453               	retlw	83	;'S'
   669  1177  3400               	retlw	0
   670  1178                     STR_28:	
   671  1178  3445               	retlw	69	;'E'
   672  1179  344E               	retlw	78	;'N'
   673  117A  3454               	retlw	84	;'T'
   674  117B  3445               	retlw	69	;'E'
   675  117C  3452               	retlw	82	;'R'
   676  117D  3420               	retlw	32	;' '
   677  117E  3450               	retlw	80	;'P'
   678  117F  3441               	retlw	65	;'A'
   679  1180  3452               	retlw	82	;'R'
   680  1181  3441               	retlw	65	;'A'
   681  1182  344D               	retlw	77	;'M'
   682  1183  3445               	retlw	69	;'E'
   683  1184  3454               	retlw	84	;'T'
   684  1185  3445               	retlw	69	;'E'
   685  1186  3452               	retlw	82	;'R'
   686  1187  3453               	retlw	83	;'S'
   687  1188  3400               	retlw	0
   688  1189                     STR_8:	
   689  1189  345F               	retlw	95	;'_'
   690  118A  3431               	retlw	49	;'1'
   691  118B  345F               	retlw	95	;'_'
   692  118C  345F               	retlw	95	;'_'
   693  118D  3432               	retlw	50	;'2'
   694  118E  345F               	retlw	95	;'_'
   695  118F  345F               	retlw	95	;'_'
   696  1190  3433               	retlw	51	;'3'
   697  1191  345F               	retlw	95	;'_'
   698  1192  345F               	retlw	95	;'_'
   699  1193  3434               	retlw	52	;'4'
   700  1194  345F               	retlw	95	;'_'
   701  1195  345F               	retlw	95	;'_'
   702  1196  3435               	retlw	53	;'5'
   703  1197  345F               	retlw	95	;'_'
   704  1198  345F               	retlw	95	;'_'
   705  1199  3400               	retlw	0
   706  119A                     STR_7:	
   707  119A  3420               	retlw	32	;' '
   708  119B  3420               	retlw	32	;' '
   709  119C  3420               	retlw	32	;' '
   710  119D  3453               	retlw	83	;'S'
   711  119E  3445               	retlw	69	;'E'
   712  119F  344C               	retlw	76	;'L'
   713  11A0  3445               	retlw	69	;'E'
   714  11A1  3443               	retlw	67	;'C'
   715  11A2  3454               	retlw	84	;'T'
   716  11A3  3420               	retlw	32	;' '
   717  11A4  3452               	retlw	82	;'R'
   718  11A5  344F               	retlw	79	;'O'
   719  11A6  3457               	retlw	87	;'W'
   720  11A7  3420               	retlw	32	;' '
   721  11A8  3420               	retlw	32	;' '
   722  11A9  3400               	retlw	0
   723  11AA                     STR_15:	
   724  11AA  3420               	retlw	32	;' '
   725  11AB  3420               	retlw	32	;' '
   726  11AC  3450               	retlw	80	;'P'
   727  11AD  3452               	retlw	82	;'R'
   728  11AE  344F               	retlw	79	;'O'
   729  11AF  3443               	retlw	67	;'C'
   730  11B0  3445               	retlw	69	;'E'
   731  11B1  3453               	retlw	83	;'S'
   732  11B2  3453               	retlw	83	;'S'
   733  11B3  3449               	retlw	73	;'I'
   734  11B4  344E               	retlw	78	;'N'
   735  11B5  3447               	retlw	71	;'G'
   736  11B6  342E               	retlw	46	;'.'
   737  11B7  342E               	retlw	46	;'.'
   738  11B8  342E               	retlw	46	;'.'
   739  11B9  3400               	retlw	0
   740  11BA                     STR_16:	
   741  11BA  3420               	retlw	32	;' '
   742  11BB  3450               	retlw	80	;'P'
   743  11BC  344C               	retlw	76	;'L'
   744  11BD  3445               	retlw	69	;'E'
   745  11BE  3441               	retlw	65	;'A'
   746  11BF  3453               	retlw	83	;'S'
   747  11C0  3445               	retlw	69	;'E'
   748  11C1  3420               	retlw	32	;' '
   749  11C2  3457               	retlw	87	;'W'
   750  11C3  3441               	retlw	65	;'A'
   751  11C4  3449               	retlw	73	;'I'
   752  11C5  3454               	retlw	84	;'T'
   753  11C6  342E               	retlw	46	;'.'
   754  11C7  342E               	retlw	46	;'.'
   755  11C8  342E               	retlw	46	;'.'
   756  11C9  3400               	retlw	0
   757  11CA                     STR_27:	
   758  11CA  3450               	retlw	80	;'P'
   759  11CB  3472               	retlw	114	;'r'
   760  11CC  346F               	retlw	111	;'o'
   761  11CD  3463               	retlw	99	;'c'
   762  11CE  3465               	retlw	101	;'e'
   763  11CF  3473               	retlw	115	;'s'
   764  11D0  3473               	retlw	115	;'s'
   765  11D1  346F               	retlw	111	;'o'
   766  11D2  3472               	retlw	114	;'r'
   767  11D3  3420               	retlw	32	;' '
   768  11D4  3452               	retlw	82	;'R'
   769  11D5  3445               	retlw	69	;'E'
   770  11D6  3453               	retlw	83	;'S'
   771  11D7  3445               	retlw	69	;'E'
   772  11D8  3454               	retlw	84	;'T'
   773  11D9  3400               	retlw	0
   774  11DA                     STR_12:	
   775  11DA  3420               	retlw	32	;' '
   776  11DB  3420               	retlw	32	;' '
   777  11DC  3442               	retlw	66	;'B'
   778  11DD  3441               	retlw	65	;'A'
   779  11DE  344C               	retlw	76	;'L'
   780  11DF  3441               	retlw	65	;'A'
   781  11E0  344E               	retlw	78	;'N'
   782  11E1  3443               	retlw	67	;'C'
   783  11E2  3445               	retlw	69	;'E'
   784  11E3  343A               	retlw	58	;':'
   785  11E4  3420               	retlw	32	;' '
   786  11E5  3400               	retlw	0
   787  11E6                     STR_33:	
   788  11E6  3420               	retlw	32	;' '
   789  11E7  3420               	retlw	32	;' '
   790  11E8  3420               	retlw	32	;' '
   791  11E9  3450               	retlw	80	;'P'
   792  11EA  3452               	retlw	82	;'R'
   793  11EB  3449               	retlw	73	;'I'
   794  11EC  3443               	retlw	67	;'C'
   795  11ED  3445               	retlw	69	;'E'
   796  11EE  343A               	retlw	58	;':'
   797  11EF  3420               	retlw	32	;' '
   798  11F0  3400               	retlw	0
   799  11F1                     STR_30:	
   800  11F1  3420               	retlw	32	;' '
   801  11F2  3420               	retlw	32	;' '
   802  11F3  3453               	retlw	83	;'S'
   803  11F4  3454               	retlw	84	;'T'
   804  11F5  344F               	retlw	79	;'O'
   805  11F6  3443               	retlw	67	;'C'
   806  11F7  344B               	retlw	75	;'K'
   807  11F8  3420               	retlw	32	;' '
   808  11F9  3420               	retlw	32	;' '
   809  11FA  3400               	retlw	0
   810  11FB                     STR_31:	
   811  11FB  3420               	retlw	32	;' '
   812  11FC  3420               	retlw	32	;' '
   813  11FD  3420               	retlw	32	;' '
   814  11FE  3451               	retlw	81	;'Q'
   815  11FF  3454               	retlw	84	;'T'
   816  1200  3459               	retlw	89	;'Y'
   817  1201  343A               	retlw	58	;':'
   818  1202  3420               	retlw	32	;' '
   819  1203  3400               	retlw	0
   820  1204                     STR_29:	
   821  1204  3420               	retlw	32	;' '
   822  1205  3420               	retlw	32	;' '
   823  1206  3452               	retlw	82	;'R'
   824  1207  344F               	retlw	79	;'O'
   825  1208  3457               	retlw	87	;'W'
   826  1209  345F               	retlw	95	;'_'
   827  120A  3400               	retlw	0
   828  120B                     STR_32:	
   829  120B  3420               	retlw	32	;' '
   830  120C  344E               	retlw	78	;'N'
   831  120D  346F               	retlw	111	;'o'
   832  120E  3473               	retlw	115	;'s'
   833  120F  3400               	retlw	0
   834  1210                     STR_10:	
   835  1210  3420               	retlw	32	;' '
   836  1211  342F               	retlw	47	;'/'
   837  1212  3420               	retlw	32	;' '
   838  1213  3400               	retlw	0
   839  1214                     STR_24:	
   840  1214  342A               	retlw	42	;'*'
   841  1215  342A               	retlw	42	;'*'
   842  1216  3400               	retlw	0
   843  1217                     STR_35:	
   844  1217  3425               	retlw	37	;'%'
   845  1218  3464               	retlw	100	;'d'
   846  1219  3400               	retlw	0
   847  10A9                     
   848                           ; #config settings
   849  0000                     
   850                           	psect	cinit
   851  0015                     start_initialization:	
   852  0015                     __initialization:	
   853                           
   854                           ; Initialize objects allocated to BANK1
   855  0015  1383               	bcf	3,7	;select IRP bank0
   856  0016  30A8               	movlw	low (__pdataBANK1+8)
   857  0017  00FD               	movwf	btemp+-1
   858  0018  3007               	movlw	high __pidataBANK1
   859  0019  00FE               	movwf	btemp
   860  001A  30F3               	movlw	low __pidataBANK1
   861  001B  00FF               	movwf	btemp+1
   862  001C  30A0               	movlw	low __pdataBANK1
   863  001D  0084               	movwf	4
   864  001E  160A  158A  270A  120A  118A  	fcall	init_ram0
   865                           
   866                           ; Clear objects allocated to BANK0
   867  0023  3020               	movlw	low __pbssBANK0
   868  0024  0084               	movwf	4
   869  0025  304D               	movlw	low (__pbssBANK0+45)
   870  0026  160A  118A  2221   	fcall	clear_ram0
   871                           
   872                           ; Clear objects allocated to COMMON
   873  0029  01FA               	clrf	__pbssCOMMON& (0+127)
   874  002A  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   875  002B  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   876  002C  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   877                           
   878                           ; Clear objects allocated to BITCOMMON
   879  002D  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   880  002E  01F1               	clrf	((__pbitbssCOMMON/(0+8)+1))& (0+127)
   881  002F                     end_of_initialization:	
   882                           ;End of C runtime variable initialization code
   883                           
   884  002F                     __end_of__initialization:	
   885  002F  0183               	clrf	3
   886  0030  120A  158A  2805   	ljmp	_main	;jump to C main() function
   887                           
   888                           	psect	bitbssCOMMON
   889  0380                     __pbitbssCOMMON:	
   890  0380                     _Qflag:	
   891  0380                     	ds	1
   892  0381                     _motor:	
   893  0381                     	ds	1
   894  0382                     _coin_input:	
   895  0382                     	ds	1
   896  0383                     _run:	
   897  0383                     	ds	1
   898  0384                     _coin:	
   899  0384                     	ds	1
   900  0385                     _pad:	
   901  0385                     	ds	1
   902  0386                     _check:	
   903  0386                     	ds	1
   904  0387                     _set:	
   905  0387                     	ds	1
   906  0388                     _menu:	
   907  0388                     	ds	1
   908  0389                     _status:	
   909  0389                     	ds	1
   910                           
   911                           	psect	bssCOMMON
   912  007A                     __pbssCOMMON:	
   913  007A                     _count:	
   914  007A                     	ds	2
   915  007C                     _rupee:	
   916  007C                     	ds	2
   917                           
   918                           	psect	bssBANK0
   919  0020                     __pbssBANK0:	
   920  0020                     _start:	
   921  0020                     	ds	2
   922  0022                     _stock:	
   923  0022                     	ds	2
   924  0024                     _num:	
   925  0024                     	ds	2
   926  0026                     _error_count:	
   927  0026                     	ds	2
   928  0028                     _value:	
   929  0028                     	ds	2
   930  002A                     _rupee5:	
   931  002A                     	ds	2
   932  002C                     _padcount5:	
   933  002C                     	ds	2
   934  002E                     _rupee4:	
   935  002E                     	ds	2
   936  0030                     _padcount4:	
   937  0030                     	ds	2
   938  0032                     _rupee3:	
   939  0032                     	ds	2
   940  0034                     _padcount3:	
   941  0034                     	ds	2
   942  0036                     _padcount:	
   943  0036                     	ds	2
   944  0038                     _balance:	
   945  0038                     	ds	2
   946  003A                     _rupee2:	
   947  003A                     	ds	2
   948  003C                     _padcount2:	
   949  003C                     	ds	2
   950  003E                     _rupee1:	
   951  003E                     	ds	2
   952  0040                     _padcount1:	
   953  0040                     	ds	2
   954  0042                     _stock_data:	
   955  0042                     	ds	1
   956  0043                     _dispvalue:	
   957  0043                     	ds	10
   958                           
   959                           	psect	dataBANK1
   960  00A0                     __pdataBANK1:	
   961  00A0                     _RupeeSymbol:	
   962  00A0                     	ds	8
   963                           
   964                           	psect	inittext
   965  1F06                     init_fetch0:	
   966                           ;	Called with low address in FSR and high address in W
   967                           
   968  1F06  087E               	movf	126,w
   969  1F07  008A               	movwf	10
   970  1F08  087F               	movf	127,w
   971  1F09  0082               	movwf	2
   972  1F0A                     init_ram0:	
   973                           ;Called with:
   974                           ;	high address of idata address in btemp 
   975                           ;	low address of idata address in btemp+1 
   976                           ;	low address of data in FSR
   977                           ;	high address + 1 of data in btemp-1
   978                           
   979  1F0A  2706  160A  158A   	fcall	init_fetch0
   980  1F0D  0080               	movwf	0
   981  1F0E  0A84               	incf	4,f
   982  1F0F  0804               	movf	4,w
   983  1F10  067D               	xorwf	125,w
   984  1F11  1903               	btfsc	3,2
   985  1F12  3400               	retlw	0
   986  1F13  0AFF               	incf	127,f
   987  1F14  1903               	btfsc	3,2
   988  1F15  0AFE               	incf	126,f
   989  1F16  2F0A               	goto	init_ram0
   990                           
   991                           	psect	clrtext
   992  1221                     clear_ram0:	
   993                           ;	Called with FSR containing the base address, and
   994                           ;	W with the last address+1
   995                           
   996  1221  0064               	clrwdt	;clear the watchdog before getting into this loop
   997  1222                     clrloop0:	
   998  1222  0180               	clrf	0	;clear RAM location pointed to by FSR
   999  1223  0A84               	incf	4,f	;increment pointer
  1000  1224  0604               	xorwf	4,w	;XOR with final address
  1001  1225  1903               	btfsc	3,2	;have we reached the end yet?
  1002  1226  3400               	retlw	0	;all done for this memory range, return
  1003  1227  0604               	xorwf	4,w	;XOR again to restore value
  1004  1228  2A22               	goto	clrloop0	;do the next byte
  1005                           
  1006                           	psect	cstackCOMMON
  1007  0072                     __pcstackCOMMON:	
  1008  0072                     ?_Monitor_Balance:	
  1009  0072                     ?_PORT_Init:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012  0072                     ?_LCD_Init:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015  0072                     ?_LCD_CmdWrite:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018  0072                     ?_LCD_Clear:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021  0072                     ?_STOCK_EMPTY_ROUTINE:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024  0072                     ?_LCD_DataWrite:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027  0072                     ?_escprocess:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030  0072                     ?_eeprom_read:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033  0072                     ?_COINCOUNTER:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036  0072                     ?_main:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039  0072                     ?_ToggleEpinOfLCD:	
  1040                           ; 1 bytes @ 0x0
  1041                           
  1042  0072                     Monitor_Balance@amount:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045                           
  1046                           ; 2 bytes @ 0x0
  1047  0072                     	ds	2
  1048  0074                     ??_Monitor_Balance:	
  1049  0074                     ??_COINCOUNTER:	
  1050                           ; 1 bytes @ 0x2
  1051                           
  1052                           
  1053                           ; 1 bytes @ 0x2
  1054  0074                     	ds	6
  1055                           
  1056                           	psect	cstackBANK0
  1057  004D                     __pcstackBANK0:	
  1058  004D                     ??_PORT_Init:	
  1059  004D                     ?_buzzer:	
  1060                           ; 1 bytes @ 0x0
  1061                           
  1062  004D                     ?_Set_Channel:	
  1063                           ; 1 bytes @ 0x0
  1064                           
  1065  004D                     ??_eeprom_read:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068  004D                     ??_ToggleEpinOfLCD:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071  004D                     ?___wmul:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074  004D                     ?___awdiv:	
  1075                           ; 2 bytes @ 0x0
  1076                           
  1077  004D                     ?___awmod:	
  1078                           ; 2 bytes @ 0x0
  1079                           
  1080  004D                     ?___lwdiv:	
  1081                           ; 2 bytes @ 0x0
  1082                           
  1083  004D                     buzzer@a:	
  1084                           ; 2 bytes @ 0x0
  1085                           
  1086  004D                     Set_Channel@data:	
  1087                           ; 2 bytes @ 0x0
  1088                           
  1089  004D                     ___wmul@multiplier:	
  1090                           ; 2 bytes @ 0x0
  1091                           
  1092  004D                     ___awdiv@divisor:	
  1093                           ; 2 bytes @ 0x0
  1094                           
  1095  004D                     ___awmod@divisor:	
  1096                           ; 2 bytes @ 0x0
  1097                           
  1098  004D                     ___lwdiv@divisor:	
  1099                           ; 2 bytes @ 0x0
  1100                           
  1101                           
  1102                           ; 2 bytes @ 0x0
  1103  004D                     	ds	1
  1104  004E                     ??_LCD_CmdWrite:	
  1105  004E                     ??_LCD_DataWrite:	
  1106                           ; 1 bytes @ 0x1
  1107                           
  1108  004E                     eeprom_read@addr:	
  1109                           ; 1 bytes @ 0x1
  1110                           
  1111                           
  1112                           ; 1 bytes @ 0x1
  1113  004E                     	ds	1
  1114  004F                     ??_buzzer:	
  1115  004F                     ??_Set_Channel:	
  1116                           ; 1 bytes @ 0x2
  1117                           
  1118  004F                     LCD_CmdWrite@Command:	
  1119                           ; 1 bytes @ 0x2
  1120                           
  1121  004F                     LCD_DataWrite@LCDChar:	
  1122                           ; 1 bytes @ 0x2
  1123                           
  1124  004F                     ___wmul@multiplicand:	
  1125                           ; 1 bytes @ 0x2
  1126                           
  1127  004F                     ___awdiv@dividend:	
  1128                           ; 2 bytes @ 0x2
  1129                           
  1130  004F                     ___awmod@dividend:	
  1131                           ; 2 bytes @ 0x2
  1132                           
  1133  004F                     ___lwdiv@dividend:	
  1134                           ; 2 bytes @ 0x2
  1135                           
  1136                           
  1137                           ; 2 bytes @ 0x2
  1138  004F                     	ds	1
  1139  0050                     ?_LCD_DisplayString:	
  1140  0050                     ??_LCD_Clear:	
  1141                           ; 1 bytes @ 0x3
  1142                           
  1143  0050                     ?_LCD_BuildChar:	
  1144                           ; 1 bytes @ 0x3
  1145                           
  1146  0050                     LCD_BuildChar@p:	
  1147                           ; 1 bytes @ 0x3
  1148                           
  1149  0050                     LCD_DisplayString@s:	
  1150                           ; 1 bytes @ 0x3
  1151                           
  1152  0050                     buzzer@i:	
  1153                           ; 2 bytes @ 0x3
  1154                           
  1155                           
  1156                           ; 2 bytes @ 0x3
  1157  0050                     	ds	1
  1158  0051                     ??_LCD_BuildChar:	
  1159  0051                     ??___wmul:	
  1160                           ; 1 bytes @ 0x4
  1161                           
  1162  0051                     ??___awdiv:	
  1163                           ; 1 bytes @ 0x4
  1164                           
  1165  0051                     ??___awmod:	
  1166                           ; 1 bytes @ 0x4
  1167                           
  1168  0051                     ??___lwdiv:	
  1169                           ; 1 bytes @ 0x4
  1170                           
  1171  0051                     ___wmul@product:	
  1172                           ; 1 bytes @ 0x4
  1173                           
  1174                           
  1175                           ; 2 bytes @ 0x4
  1176  0051                     	ds	1
  1177  0052                     ??_LCD_DisplayString:	
  1178  0052                     ??_STOCK_EMPTY_ROUTINE:	
  1179                           ; 1 bytes @ 0x5
  1180                           
  1181  0052                     ??_escprocess:	
  1182                           ; 1 bytes @ 0x5
  1183                           
  1184  0052                     LCD_BuildChar@loc:	
  1185                           ; 1 bytes @ 0x5
  1186                           
  1187  0052                     ___awdiv@counter:	
  1188                           ; 1 bytes @ 0x5
  1189                           
  1190  0052                     ___awmod@counter:	
  1191                           ; 1 bytes @ 0x5
  1192                           
  1193  0052                     ___lwdiv@quotient:	
  1194                           ; 1 bytes @ 0x5
  1195                           
  1196                           
  1197                           ; 2 bytes @ 0x5
  1198  0052                     	ds	1
  1199  0053                     ?_Read_EEPROM:	
  1200  0053                     ?_Read_EEPROM_Price:	
  1201                           ; 2 bytes @ 0x6
  1202                           
  1203  0053                     LCD_BuildChar@i:	
  1204                           ; 2 bytes @ 0x6
  1205                           
  1206  0053                     Read_EEPROM@b2:	
  1207                           ; 1 bytes @ 0x6
  1208                           
  1209  0053                     Read_EEPROM_Price@b2:	
  1210                           ; 1 bytes @ 0x6
  1211                           
  1212  0053                     ___awdiv@sign:	
  1213                           ; 1 bytes @ 0x6
  1214                           
  1215  0053                     ___awmod@sign:	
  1216                           ; 1 bytes @ 0x6
  1217                           
  1218                           
  1219                           ; 1 bytes @ 0x6
  1220  0053                     	ds	1
  1221  0054                     ??_LCD_Init:	
  1222  0054                     Read_EEPROM_Price@b3:	
  1223                           ; 1 bytes @ 0x7
  1224                           
  1225  0054                     ___lwdiv@counter:	
  1226                           ; 1 bytes @ 0x7
  1227                           
  1228  0054                     ___awdiv@quotient:	
  1229                           ; 1 bytes @ 0x7
  1230                           
  1231                           
  1232                           ; 2 bytes @ 0x7
  1233  0054                     	ds	1
  1234  0055                     ??_Read_EEPROM:	
  1235  0055                     ??_Read_EEPROM_Price:	
  1236                           ; 1 bytes @ 0x8
  1237                           
  1238  0055                     ?___lwmod:	
  1239                           ; 1 bytes @ 0x8
  1240                           
  1241  0055                     ___lwmod@divisor:	
  1242                           ; 2 bytes @ 0x8
  1243                           
  1244                           
  1245                           ; 2 bytes @ 0x8
  1246  0055                     	ds	1
  1247  0056                     ?_displaypass:	
  1248  0056                     displaypass@data:	
  1249                           ; 1 bytes @ 0x9
  1250                           
  1251                           
  1252                           ; 2 bytes @ 0x9
  1253  0056                     	ds	1
  1254  0057                     Read_EEPROM@b1:	
  1255  0057                     ___lwmod@dividend:	
  1256                           ; 1 bytes @ 0xA
  1257                           
  1258                           
  1259                           ; 2 bytes @ 0xA
  1260  0057                     	ds	1
  1261  0058                     ??_displaypass:	
  1262  0058                     Read_EEPROM@c1:	
  1263                           ; 1 bytes @ 0xB
  1264                           
  1265                           
  1266                           ; 2 bytes @ 0xB
  1267  0058                     	ds	1
  1268  0059                     ??___lwmod:	
  1269  0059                     Read_EEPROM_Price@b1:	
  1270                           ; 1 bytes @ 0xC
  1271                           
  1272                           
  1273                           ; 1 bytes @ 0xC
  1274  0059                     	ds	1
  1275  005A                     ___lwmod@counter:	
  1276  005A                     Read_EEPROM@c2:	
  1277                           ; 1 bytes @ 0xD
  1278                           
  1279  005A                     Read_EEPROM_Price@c1:	
  1280                           ; 2 bytes @ 0xD
  1281                           
  1282                           
  1283                           ; 2 bytes @ 0xD
  1284  005A                     	ds	1
  1285  005B                     ?_eeprom_write:	
  1286  005B                     ?_sprintf:	
  1287                           ; 1 bytes @ 0xE
  1288                           
  1289  005B                     eeprom_write@value:	
  1290                           ; 2 bytes @ 0xE
  1291                           
  1292  005B                     sprintf@f:	
  1293                           ; 1 bytes @ 0xE
  1294                           
  1295                           
  1296                           ; 2 bytes @ 0xE
  1297  005B                     	ds	1
  1298  005C                     ??_eeprom_write:	
  1299  005C                     Read_EEPROM_Price@c2:	
  1300                           ; 1 bytes @ 0xF
  1301                           
  1302                           
  1303                           ; 2 bytes @ 0xF
  1304  005C                     	ds	1
  1305  005D                     eeprom_write@addr:	
  1306                           
  1307                           ; 1 bytes @ 0x10
  1308  005D                     	ds	1
  1309  005E                     ?_Write_EEPROM_Price:	
  1310  005E                     ?_Write_EEPROM:	
  1311                           ; 1 bytes @ 0x11
  1312                           
  1313  005E                     Write_EEPROM@a2:	
  1314                           ; 1 bytes @ 0x11
  1315                           
  1316  005E                     Write_EEPROM_Price@a2:	
  1317                           ; 1 bytes @ 0x11
  1318                           
  1319  005E                     Read_EEPROM_Price@c3:	
  1320                           ; 1 bytes @ 0x11
  1321                           
  1322                           
  1323                           ; 2 bytes @ 0x11
  1324  005E                     	ds	1
  1325  005F                     ??_sprintf:	
  1326  005F                     Write_EEPROM_Price@a3:	
  1327                           ; 1 bytes @ 0x12
  1328                           
  1329  005F                     Write_EEPROM@data_value:	
  1330                           ; 1 bytes @ 0x12
  1331                           
  1332                           
  1333                           ; 2 bytes @ 0x12
  1334  005F                     	ds	1
  1335  0060                     Write_EEPROM_Price@data_value:	
  1336                           
  1337                           ; 2 bytes @ 0x13
  1338  0060                     	ds	1
  1339  0061                     ??_Write_EEPROM:	
  1340                           
  1341                           ; 1 bytes @ 0x14
  1342  0061                     	ds	1
  1343  0062                     ??_Write_EEPROM_Price:	
  1344  0062                     Write_EEPROM@a1:	
  1345                           ; 1 bytes @ 0x15
  1346                           
  1347  0062                     sprintf@ap:	
  1348                           ; 1 bytes @ 0x15
  1349                           
  1350                           
  1351                           ; 1 bytes @ 0x15
  1352  0062                     	ds	1
  1353  0063                     Write_EEPROM_Price@a1:	
  1354  0063                     sprintf@flag:	
  1355                           ; 1 bytes @ 0x16
  1356                           
  1357                           
  1358                           ; 1 bytes @ 0x16
  1359  0063                     	ds	1
  1360  0064                     sprintf@prec:	
  1361                           
  1362                           ; 1 bytes @ 0x17
  1363  0064                     	ds	1
  1364  0065                     sprintf@val:	
  1365                           
  1366                           ; 2 bytes @ 0x18
  1367  0065                     	ds	2
  1368  0067                     sprintf@sp:	
  1369                           
  1370                           ; 1 bytes @ 0x1A
  1371  0067                     	ds	1
  1372  0068                     sprintf@c:	
  1373                           
  1374                           ; 1 bytes @ 0x1B
  1375  0068                     	ds	1
  1376  0069                     ?_display:	
  1377  0069                     ?_display_price:	
  1378                           ; 1 bytes @ 0x1C
  1379                           
  1380  0069                     display@data:	
  1381                           ; 1 bytes @ 0x1C
  1382                           
  1383  0069                     display_price@data:	
  1384                           ; 2 bytes @ 0x1C
  1385                           
  1386                           
  1387                           ; 2 bytes @ 0x1C
  1388  0069                     	ds	2
  1389  006B                     ??_display:	
  1390  006B                     ??_display_price:	
  1391                           ; 1 bytes @ 0x1E
  1392                           
  1393  006B                     ??_main:	
  1394                           ; 1 bytes @ 0x1E
  1395                           
  1396                           
  1397                           ; 1 bytes @ 0x1E
  1398  006B                     	ds	3
  1399                           
  1400                           	psect	maintext
  1401  0805                     __pmaintext:	
  1402 ;;
  1403 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1404 ;;
  1405 ;; *************** function _main *****************
  1406 ;; Defined at:
  1407 ;;		line 157 in file "newmain.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;		None
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      void 
  1414 ;; Registers used:
  1415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1416 ;; Tracked objects:
  1417 ;;		On entry : B00/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1421 ;;      Params:         0       0       0       0       0
  1422 ;;      Locals:         0       0       0       0       0
  1423 ;;      Temps:          0       3       0       0       0
  1424 ;;      Totals:         0       3       0       0       0
  1425 ;;Total ram usage:        3 bytes
  1426 ;; Hardware stack levels required when called:    6
  1427 ;; This function calls:
  1428 ;;		_LCD_Clear
  1429 ;;		_LCD_CmdWrite
  1430 ;;		_LCD_DataWrite
  1431 ;;		_LCD_DisplayString
  1432 ;;		_LCD_Init
  1433 ;;		_PORT_Init
  1434 ;;		_Read_EEPROM
  1435 ;;		_Read_EEPROM_Price
  1436 ;;		_STOCK_EMPTY_ROUTINE
  1437 ;;		_Set_Channel
  1438 ;;		_Write_EEPROM
  1439 ;;		_Write_EEPROM_Price
  1440 ;;		_buzzer
  1441 ;;		_display
  1442 ;;		_display_price
  1443 ;;		_displaypass
  1444 ;;		_escprocess
  1445 ;; This function is called by:
  1446 ;;		Startup code after reset
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           
  1451                           ;psect for function _main
  1452  0805                     _main:	
  1453                           
  1454                           ;newmain.c: 160: _delay((unsigned long)((50)*(4000000/4000.0)));
  1455                           
  1456                           ;incstack = 0
  1457                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1458  0805  3041               	movlw	65
  1459  0806  1283               	bcf	3,5	;RP0=0, select bank0
  1460  0807  1303               	bcf	3,6	;RP1=0, select bank0
  1461  0808  00EC               	movwf	??_main+1
  1462  0809  30ED               	movlw	237
  1463  080A  00EB               	movwf	??_main
  1464  080B                     u4557:	
  1465  080B  0BEB               	decfsz	??_main,f
  1466  080C  280B               	goto	u4557
  1467  080D  0BEC               	decfsz	??_main+1,f
  1468  080E  280B               	goto	u4557
  1469  080F  2810               	nop2
  1470                           
  1471                           ;newmain.c: 161: PORT_Init();
  1472  0810  160A  118A  224D  120A  158A  	fcall	_PORT_Init
  1473                           
  1474                           ;newmain.c: 162: LCD_Init();
  1475  0815  160A  118A  23C5  120A  158A  	fcall	_LCD_Init
  1476                           
  1477                           ;newmain.c: 163: RB2=0;RB3=0;RB4=0;RB5=0;
  1478  081A  1283               	bcf	3,5	;RP0=0, select bank0
  1479  081B  1303               	bcf	3,6	;RP1=0, select bank0
  1480  081C  1106               	bcf	6,2	;volatile
  1481  081D  1186               	bcf	6,3	;volatile
  1482  081E  1206               	bcf	6,4	;volatile
  1483  081F  1286               	bcf	6,5	;volatile
  1484                           
  1485                           ;newmain.c: 165: if((!RE1)&&(!RE0))
  1486  0820  120A  158A  1C89   	btfss	9,1	;volatile
  1487  0823  1809               	btfsc	9,0	;volatile
  1488  0824  2D04               	goto	l248
  1489                           
  1490                           ;newmain.c: 166: {
  1491                           ;newmain.c: 167: LCD_DisplayString(" FACTORY RESET  ");
  1492  0825  30F0               	movlw	low (STR_1| (0+32768))
  1493  0826  00D0               	movwf	LCD_DisplayString@s
  1494  0827  3090               	movlw	high (STR_1| (0+32768))
  1495  0828  00D1               	movwf	LCD_DisplayString@s+1
  1496  0829  160A  118A  2272  120A  158A  	fcall	_LCD_DisplayString
  1497                           
  1498                           ;newmain.c: 168: LCD_CmdWrite(0XC0);
  1499  082E  30C0               	movlw	192
  1500  082F  160A  158A  2762  120A  158A  	fcall	_LCD_CmdWrite
  1501                           
  1502                           ;newmain.c: 169: LCD_DisplayString(" INITIALIZING... ");
  1503  0834  3089               	movlw	low (STR_2| (0+32768))
  1504  0835  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0836  1303               	bcf	3,6	;RP1=0, select bank0
  1506  0837  00D0               	movwf	LCD_DisplayString@s
  1507  0838  3090               	movlw	high (STR_2| (0+32768))
  1508  0839  00D1               	movwf	LCD_DisplayString@s+1
  1509  083A  160A  118A  2272  120A  158A  	fcall	_LCD_DisplayString
  1510                           
  1511                           ;newmain.c: 170: buzzer(1000);
  1512  083F  30E8               	movlw	232
  1513  0840  1283               	bcf	3,5	;RP0=0, select bank0
  1514  0841  1303               	bcf	3,6	;RP1=0, select bank0
  1515  0842  00CD               	movwf	buzzer@a
  1516  0843  3003               	movlw	3
  1517  0844  00CE               	movwf	buzzer@a+1
  1518  0845  160A  158A  279C  120A  158A  	fcall	_buzzer
  1519                           
  1520                           ;newmain.c: 171: _delay((unsigned long)((500)*(4000000/4000.0)));
  1521  084A  3003               	movlw	3
  1522  084B  1283               	bcf	3,5	;RP0=0, select bank0
  1523  084C  1303               	bcf	3,6	;RP1=0, select bank0
  1524  084D  00ED               	movwf	??_main+2
  1525  084E  308A               	movlw	138
  1526  084F  00EC               	movwf	??_main+1
  1527  0850  3055               	movlw	85
  1528  0851  00EB               	movwf	??_main
  1529  0852                     u4567:	
  1530  0852  0BEB               	decfsz	??_main,f
  1531  0853  2852               	goto	u4567
  1532  0854  0BEC               	decfsz	??_main+1,f
  1533  0855  2852               	goto	u4567
  1534  0856  0BED               	decfsz	??_main+2,f
  1535  0857  2852               	goto	u4567
  1536                           
  1537                           ;newmain.c: 172: LCD_Clear();
  1538  0858  160A  158A  26F5  120A  158A  	fcall	_LCD_Clear
  1539                           
  1540                           ;newmain.c: 173: LCD_DisplayString("  FLASHING....  ");
  1541  085D  30CE               	movlw	low (STR_3| (0+32768))
  1542  085E  1283               	bcf	3,5	;RP0=0, select bank0
  1543  085F  1303               	bcf	3,6	;RP1=0, select bank0
  1544  0860  00D0               	movwf	LCD_DisplayString@s
  1545  0861  3090               	movlw	high (STR_3| (0+32768))
  1546  0862  00D1               	movwf	LCD_DisplayString@s+1
  1547  0863  160A  118A  2272  120A  158A  	fcall	_LCD_DisplayString
  1548                           
  1549                           ;newmain.c: 174: buzzer(100);
  1550  0868  3064               	movlw	100
  1551  0869  1283               	bcf	3,5	;RP0=0, select bank0
  1552  086A  1303               	bcf	3,6	;RP1=0, select bank0
  1553  086B  00CD               	movwf	buzzer@a
  1554  086C  3000               	movlw	0
  1555  086D  00CE               	movwf	buzzer@a+1
  1556  086E  160A  158A  279C  120A  158A  	fcall	_buzzer
  1557                           
  1558                           ;newmain.c: 175: _delay((unsigned long)((2500)*(4000000/4000.0)));
  1559  0873  300D               	movlw	13
  1560  0874  1283               	bcf	3,5	;RP0=0, select bank0
  1561  0875  1303               	bcf	3,6	;RP1=0, select bank0
  1562  0876  00ED               	movwf	??_main+2
  1563  0877  30AF               	movlw	175
  1564  0878  00EC               	movwf	??_main+1
  1565  0879  30B5               	movlw	181
  1566  087A  00EB               	movwf	??_main
  1567  087B                     u4577:	
  1568  087B  0BEB               	decfsz	??_main,f
  1569  087C  287B               	goto	u4577
  1570  087D  0BEC               	decfsz	??_main+1,f
  1571  087E  287B               	goto	u4577
  1572  087F  0BED               	decfsz	??_main+2,f
  1573  0880  287B               	goto	u4577
  1574  0881  2882               	nop2	;# 
  1575                           
  1576                           ;newmain.c: 182: padcount1=0;padcount2=0;padcount3=0;padcount4=0;padcount5=0;
  1577  0882  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0883  1303               	bcf	3,6	;RP1=0, select bank0
  1579  0884  01C0               	clrf	_padcount1
  1580  0885  01C1               	clrf	_padcount1+1
  1581  0886  01BC               	clrf	_padcount2
  1582  0887  01BD               	clrf	_padcount2+1
  1583  0888  01B4               	clrf	_padcount3
  1584  0889  01B5               	clrf	_padcount3+1
  1585  088A  01B0               	clrf	_padcount4
  1586  088B  01B1               	clrf	_padcount4+1
  1587  088C  01AC               	clrf	_padcount5
  1588  088D  01AD               	clrf	_padcount5+1
  1589                           
  1590                           ;newmain.c: 183: rupee1=10;rupee2=10;rupee3=10;rupee4=10;rupee5=10;
  1591  088E  300A               	movlw	10
  1592  088F  00BE               	movwf	_rupee1
  1593  0890  3000               	movlw	0
  1594  0891  00BF               	movwf	_rupee1+1
  1595  0892  300A               	movlw	10
  1596  0893  00BA               	movwf	_rupee2
  1597  0894  3000               	movlw	0
  1598  0895  00BB               	movwf	_rupee2+1
  1599  0896  300A               	movlw	10
  1600  0897  00B2               	movwf	_rupee3
  1601  0898  3000               	movlw	0
  1602  0899  00B3               	movwf	_rupee3+1
  1603  089A  300A               	movlw	10
  1604  089B  00AE               	movwf	_rupee4
  1605  089C  3000               	movlw	0
  1606  089D  00AF               	movwf	_rupee4+1
  1607  089E  300A               	movlw	10
  1608  089F  00AA               	movwf	_rupee5
  1609  08A0  3000               	movlw	0
  1610  08A1  00AB               	movwf	_rupee5+1
  1611                           
  1612                           ;newmain.c: 184: balance=0;padcount=0;rupee=0;
  1613  08A2  01B8               	clrf	_balance
  1614  08A3  01B9               	clrf	_balance+1
  1615  08A4  01B6               	clrf	_padcount
  1616  08A5  01B7               	clrf	_padcount+1
  1617  08A6  01FC               	clrf	_rupee
  1618  08A7  01FD               	clrf	_rupee+1
  1619                           
  1620                           ;newmain.c: 185: value=0;error_count=0;count=0;num=0;stock=0;stock_data=0;
  1621  08A8  01A8               	clrf	_value
  1622  08A9  01A9               	clrf	_value+1
  1623  08AA  01A6               	clrf	_error_count
  1624  08AB  01A7               	clrf	_error_count+1
  1625  08AC  01FA               	clrf	_count
  1626  08AD  01FB               	clrf	_count+1
  1627  08AE  01A4               	clrf	_num
  1628  08AF  01A5               	clrf	_num+1
  1629  08B0  01A2               	clrf	_stock
  1630  08B1  01A3               	clrf	_stock+1
  1631  08B2  01C2               	clrf	_stock_data
  1632                           
  1633                           ;newmain.c: 186: status=0;menu=0;set=0;check=0;pad=0;coin=0;run=0;coin_input=0;motor=0;Q
      +                          flag=0;
  1634  08B3  10F1               	bcf	_status/(0+8),_status& (0+7)
  1635  08B4  1071               	bcf	_menu/(0+8),_menu& (0+7)
  1636  08B5  13F0               	bcf	_set/(0+8),_set& (0+7)
  1637  08B6  1370               	bcf	_check/(0+8),_check& (0+7)
  1638  08B7  12F0               	bcf	_pad/(0+8),_pad& (0+7)
  1639  08B8  1270               	bcf	_coin/(0+8),_coin& (0+7)
  1640  08B9  11F0               	bcf	_run/(0+8),_run& (0+7)
  1641  08BA  1170               	bcf	_coin_input/(0+8),_coin_input& (0+7)
  1642  08BB  10F0               	bcf	_motor/(0+8),_motor& (0+7)
  1643  08BC  1070               	bcf	_Qflag/(0+8),_Qflag& (0+7)
  1644                           
  1645                           ;newmain.c: 188: Write_EEPROM_Price(0X14,0X15,0X16,rupee1);
  1646  08BD  3015               	movlw	21
  1647  08BE  00EB               	movwf	??_main
  1648  08BF  086B               	movf	??_main,w
  1649  08C0  00DE               	movwf	Write_EEPROM_Price@a2
  1650  08C1  3016               	movlw	22
  1651  08C2  00EC               	movwf	??_main+1
  1652  08C3  086C               	movf	??_main+1,w
  1653  08C4  00DF               	movwf	Write_EEPROM_Price@a3
  1654  08C5  083F               	movf	_rupee1+1,w
  1655  08C6  00E1               	movwf	Write_EEPROM_Price@data_value+1
  1656  08C7  083E               	movf	_rupee1,w
  1657  08C8  00E0               	movwf	Write_EEPROM_Price@data_value
  1658  08C9  3014               	movlw	20
  1659  08CA  160A  118A  25B5  120A  158A  	fcall	_Write_EEPROM_Price
  1660                           
  1661                           ;newmain.c: 189: Write_EEPROM_Price(0X17,0X18,0X19,rupee2);
  1662  08CF  3018               	movlw	24
  1663  08D0  1283               	bcf	3,5	;RP0=0, select bank0
  1664  08D1  1303               	bcf	3,6	;RP1=0, select bank0
  1665  08D2  00EB               	movwf	??_main
  1666  08D3  086B               	movf	??_main,w
  1667  08D4  00DE               	movwf	Write_EEPROM_Price@a2
  1668  08D5  3019               	movlw	25
  1669  08D6  00EC               	movwf	??_main+1
  1670  08D7  086C               	movf	??_main+1,w
  1671  08D8  00DF               	movwf	Write_EEPROM_Price@a3
  1672  08D9  083B               	movf	_rupee2+1,w
  1673  08DA  00E1               	movwf	Write_EEPROM_Price@data_value+1
  1674  08DB  083A               	movf	_rupee2,w
  1675  08DC  00E0               	movwf	Write_EEPROM_Price@data_value
  1676  08DD  3017               	movlw	23
  1677  08DE  160A  118A  25B5  120A  158A  	fcall	_Write_EEPROM_Price
  1678                           
  1679                           ;newmain.c: 190: Write_EEPROM_Price(0X1A,0X1B,0X1C,rupee3);
  1680  08E3  301B               	movlw	27
  1681  08E4  1283               	bcf	3,5	;RP0=0, select bank0
  1682  08E5  1303               	bcf	3,6	;RP1=0, select bank0
  1683  08E6  00EB               	movwf	??_main
  1684  08E7  086B               	movf	??_main,w
  1685  08E8  00DE               	movwf	Write_EEPROM_Price@a2
  1686  08E9  301C               	movlw	28
  1687  08EA  00EC               	movwf	??_main+1
  1688  08EB  086C               	movf	??_main+1,w
  1689  08EC  00DF               	movwf	Write_EEPROM_Price@a3
  1690  08ED  0833               	movf	_rupee3+1,w
  1691  08EE  00E1               	movwf	Write_EEPROM_Price@data_value+1
  1692  08EF  0832               	movf	_rupee3,w
  1693  08F0  00E0               	movwf	Write_EEPROM_Price@data_value
  1694  08F1  301A               	movlw	26
  1695  08F2  160A  118A  25B5  120A  158A  	fcall	_Write_EEPROM_Price
  1696                           
  1697                           ;newmain.c: 191: Write_EEPROM_Price(0X1D,0X1E,0X1F,rupee4);
  1698  08F7  301E               	movlw	30
  1699  08F8  1283               	bcf	3,5	;RP0=0, select bank0
  1700  08F9  1303               	bcf	3,6	;RP1=0, select bank0
  1701  08FA  00EB               	movwf	??_main
  1702  08FB  086B               	movf	??_main,w
  1703  08FC  00DE               	movwf	Write_EEPROM_Price@a2
  1704  08FD  301F               	movlw	31
  1705  08FE  00EC               	movwf	??_main+1
  1706  08FF  086C               	movf	??_main+1,w
  1707  0900  00DF               	movwf	Write_EEPROM_Price@a3
  1708  0901  082F               	movf	_rupee4+1,w
  1709  0902  00E1               	movwf	Write_EEPROM_Price@data_value+1
  1710  0903  082E               	movf	_rupee4,w
  1711  0904  00E0               	movwf	Write_EEPROM_Price@data_value
  1712  0905  301D               	movlw	29
  1713  0906  160A  118A  25B5  120A  158A  	fcall	_Write_EEPROM_Price
  1714                           
  1715                           ;newmain.c: 192: Write_EEPROM_Price(0X20,0X21,0X22,rupee5);
  1716  090B  3021               	movlw	33
  1717  090C  1283               	bcf	3,5	;RP0=0, select bank0
  1718  090D  1303               	bcf	3,6	;RP1=0, select bank0
  1719  090E  00EB               	movwf	??_main
  1720  090F  086B               	movf	??_main,w
  1721  0910  00DE               	movwf	Write_EEPROM_Price@a2
  1722  0911  3022               	movlw	34
  1723  0912  00EC               	movwf	??_main+1
  1724  0913  086C               	movf	??_main+1,w
  1725  0914  00DF               	movwf	Write_EEPROM_Price@a3
  1726  0915  082B               	movf	_rupee5+1,w
  1727  0916  00E1               	movwf	Write_EEPROM_Price@data_value+1
  1728  0917  082A               	movf	_rupee5,w
  1729  0918  00E0               	movwf	Write_EEPROM_Price@data_value
  1730  0919  3020               	movlw	32
  1731  091A  160A  118A  25B5  120A  158A  	fcall	_Write_EEPROM_Price
  1732                           
  1733                           ;newmain.c: 194: LCD_Clear();
  1734  091F  160A  158A  26F5  120A  158A  	fcall	_LCD_Clear
  1735                           
  1736                           ;newmain.c: 195: LCD_DisplayString(" MEMORY FLASHED! ");
  1737  0924  3077               	movlw	low (STR_4| (0+32768))
  1738  0925  1283               	bcf	3,5	;RP0=0, select bank0
  1739  0926  1303               	bcf	3,6	;RP1=0, select bank0
  1740  0927  00D0               	movwf	LCD_DisplayString@s
  1741  0928  3090               	movlw	high (STR_4| (0+32768))
  1742  0929  00D1               	movwf	LCD_DisplayString@s+1
  1743  092A  160A  118A  2272  120A  158A  	fcall	_LCD_DisplayString
  1744                           
  1745                           ;newmain.c: 196: buzzer(1000);
  1746  092F  30E8               	movlw	232
  1747  0930  1283               	bcf	3,5	;RP0=0, select bank0
  1748  0931  1303               	bcf	3,6	;RP1=0, select bank0
  1749  0932  00CD               	movwf	buzzer@a
  1750  0933  3003               	movlw	3
  1751  0934  00CE               	movwf	buzzer@a+1
  1752  0935  160A  158A  279C  120A  158A  	fcall	_buzzer
  1753                           
  1754                           ;newmain.c: 197: _delay((unsigned long)((1000)*(4000000/4000.0)));
  1755  093A  3006               	movlw	6
  1756  093B  1283               	bcf	3,5	;RP0=0, select bank0
  1757  093C  1303               	bcf	3,6	;RP1=0, select bank0
  1758  093D  00ED               	movwf	??_main+2
  1759  093E  3013               	movlw	19
  1760  093F  00EC               	movwf	??_main+1
  1761  0940  30AD               	movlw	173
  1762  0941  00EB               	movwf	??_main
  1763  0942                     u4587:	
  1764  0942  0BEB               	decfsz	??_main,f
  1765  0943  2942               	goto	u4587
  1766  0944  0BEC               	decfsz	??_main+1,f
  1767  0945  2942               	goto	u4587
  1768  0946  0BED               	decfsz	??_main+2,f
  1769  0947  2942               	goto	u4587
  1770                           
  1771                           ;newmain.c: 198: menu=1;run=1;
  1772  0948  1471               	bsf	_menu/(0+8),_menu& (0+7)
  1773  0949  15F0               	bsf	_run/(0+8),_run& (0+7)
  1774                           
  1775                           ;newmain.c: 199: buzzer(70);
  1776  094A  3046               	movlw	70
  1777  094B  1283               	bcf	3,5	;RP0=0, select bank0
  1778  094C  1303               	bcf	3,6	;RP1=0, select bank0
  1779  094D  00CD               	movwf	buzzer@a
  1780  094E  3000               	movlw	0
  1781  094F  00CE               	movwf	buzzer@a+1
  1782  0950  160A  158A  279C  120A  158A  	fcall	_buzzer
  1783                           
  1784                           ;newmain.c: 200: LCD_Clear();
  1785  0955  160A  158A  26F5   	fcall	_LCD_Clear
  1786                           
  1787                           ;newmain.c: 201: goto flash;
  1788  0958  120A  118A  2A0B   	goto	l511
  1789                           
  1790                           	psect	text1
  1791  1FBC                     __ptext1:	
  1792 ;; *************** function _escprocess *****************
  1793 ;; Defined at:
  1794 ;;		line 1258 in file "newmain.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;		None
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;		None
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg, status,2, status,0, pclath, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1808 ;;      Params:         0       0       0       0       0
  1809 ;;      Locals:         0       0       0       0       0
  1810 ;;      Temps:          0       0       0       0       0
  1811 ;;      Totals:         0       0       0       0       0
  1812 ;;Total ram usage:        0 bytes
  1813 ;; Hardware stack levels used:    1
  1814 ;; Hardware stack levels required when called:    5
  1815 ;; This function calls:
  1816 ;;		_LCD_Clear
  1817 ;;		_buzzer
  1818 ;; This function is called by:
  1819 ;;		_main
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           
  1824                           ;psect for function _escprocess
  1825  1FBC                     _escprocess:	
  1826                           
  1827                           ;newmain.c: 1261: padcount=0;rupee=0;stock=0;
  1828                           
  1829                           ;incstack = 0
  1830                           ; Regs used in _escprocess: [wreg+status,2+status,0+pclath+cstack]
  1831  1FBC  1283               	bcf	3,5	;RP0=0, select bank0
  1832  1FBD  1303               	bcf	3,6	;RP1=0, select bank0
  1833  1FBE  01B6               	clrf	_padcount
  1834  1FBF  01B7               	clrf	_padcount+1
  1835  1FC0  01FC               	clrf	_rupee
  1836  1FC1  01FD               	clrf	_rupee+1
  1837  1FC2  01A2               	clrf	_stock
  1838  1FC3  01A3               	clrf	_stock+1
  1839                           
  1840                           ;newmain.c: 1262: INTE=0;RB1=1;
  1841  1FC4  120B               	bcf	11,4	;volatile
  1842  1FC5  1486               	bsf	6,1	;volatile
  1843                           
  1844                           ;newmain.c: 1263: status=0;
  1845  1FC6  10F1               	bcf	_status/(0+8),_status& (0+7)
  1846                           
  1847                           ;newmain.c: 1264: TRISA1 = 1;
  1848  1FC7  1683               	bsf	3,5	;RP0=1, select bank1
  1849  1FC8  1303               	bcf	3,6	;RP1=0, select bank1
  1850  1FC9  1485               	bsf	5,1	;volatile
  1851                           
  1852                           ;newmain.c: 1265: TRISA0 = 1;
  1853  1FCA  1405               	bsf	5,0	;volatile
  1854                           
  1855                           ;newmain.c: 1266: TRISA5 = 1;
  1856  1FCB  1685               	bsf	5,5	;volatile
  1857                           
  1858                           ;newmain.c: 1267: TRISB6 = 1;
  1859  1FCC  1706               	bsf	6,6	;volatile
  1860                           
  1861                           ;newmain.c: 1268: TRISB7 = 1;
  1862  1FCD  1786               	bsf	6,7	;volatile
  1863                           
  1864                           ;newmain.c: 1269: LCD_Clear();
  1865  1FCE  160A  158A  26F5  160A  158A  	fcall	_LCD_Clear
  1866                           
  1867                           ;newmain.c: 1270: buzzer(50);
  1868  1FD3  3032               	movlw	50
  1869  1FD4  1283               	bcf	3,5	;RP0=0, select bank0
  1870  1FD5  1303               	bcf	3,6	;RP1=0, select bank0
  1871  1FD6  00CD               	movwf	buzzer@a
  1872  1FD7  3000               	movlw	0
  1873  1FD8  00CE               	movwf	buzzer@a+1
  1874  1FD9  160A  158A  279C   	fcall	_buzzer
  1875  1FDC  0008               	return
  1876  1FDD                     __end_of_escprocess:	
  1877                           
  1878                           	psect	text2
  1879  12C3                     __ptext2:	
  1880 ;; *************** function _displaypass *****************
  1881 ;; Defined at:
  1882 ;;		line 1142 in file "newmain.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;  data            2    9[BANK0 ] int 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0, pclath, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1896 ;;      Params:         0       2       0       0       0
  1897 ;;      Locals:         0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0
  1899 ;;      Totals:         0       2       0       0       0
  1900 ;;Total ram usage:        2 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; Hardware stack levels required when called:    4
  1903 ;; This function calls:
  1904 ;;		_LCD_DataWrite
  1905 ;;		___awdiv
  1906 ;;		___awmod
  1907 ;; This function is called by:
  1908 ;;		_main
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           
  1913                           ;psect for function _displaypass
  1914  12C3                     _displaypass:	
  1915                           
  1916                           ;newmain.c: 1144: LCD_DataWrite((data/10)+0x30);
  1917                           
  1918                           ;incstack = 0
  1919                           ; Regs used in _displaypass: [wreg+status,2+status,0+pclath+cstack]
  1920  12C3  300A               	movlw	10
  1921  12C4  1283               	bcf	3,5	;RP0=0, select bank0
  1922  12C5  1303               	bcf	3,6	;RP1=0, select bank0
  1923  12C6  00CD               	movwf	___awdiv@divisor
  1924  12C7  3000               	movlw	0
  1925  12C8  00CE               	movwf	___awdiv@divisor+1
  1926  12C9  0857               	movf	displaypass@data+1,w
  1927  12CA  00D0               	movwf	___awdiv@dividend+1
  1928  12CB  0856               	movf	displaypass@data,w
  1929  12CC  00CF               	movwf	___awdiv@dividend
  1930  12CD  160A  118A  24FB  160A  118A  	fcall	___awdiv
  1931  12D2  1283               	bcf	3,5	;RP0=0, select bank0
  1932  12D3  1303               	bcf	3,6	;RP1=0, select bank0
  1933  12D4  084D               	movf	?___awdiv,w
  1934  12D5  3E30               	addlw	48
  1935  12D6  160A  158A  277F  160A  118A  	fcall	_LCD_DataWrite
  1936                           
  1937                           ;newmain.c: 1145: LCD_DataWrite((data%10)+0x30);
  1938  12DB  300A               	movlw	10
  1939  12DC  1283               	bcf	3,5	;RP0=0, select bank0
  1940  12DD  1303               	bcf	3,6	;RP1=0, select bank0
  1941  12DE  00CD               	movwf	___awmod@divisor
  1942  12DF  3000               	movlw	0
  1943  12E0  00CE               	movwf	___awmod@divisor+1
  1944  12E1  0857               	movf	displaypass@data+1,w
  1945  12E2  00D0               	movwf	___awmod@dividend+1
  1946  12E3  0856               	movf	displaypass@data,w
  1947  12E4  00CF               	movwf	___awmod@dividend
  1948  12E5  120A  118A  27A6  160A  118A  	fcall	___awmod
  1949  12EA  1283               	bcf	3,5	;RP0=0, select bank0
  1950  12EB  1303               	bcf	3,6	;RP1=0, select bank0
  1951  12EC  084D               	movf	?___awmod,w
  1952  12ED  3E30               	addlw	48
  1953  12EE  160A  158A  277F   	fcall	_LCD_DataWrite
  1954  12F1  0008               	return
  1955  12F2                     __end_of_displaypass:	
  1956                           
  1957                           	psect	text3
  1958  07A6                     __ptext3:	
  1959 ;; *************** function ___awmod *****************
  1960 ;; Defined at:
  1961 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\awmod.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;  divisor         2    0[BANK0 ] int 
  1964 ;;  dividend        2    2[BANK0 ] int 
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;  sign            1    6[BANK0 ] unsigned char 
  1967 ;;  counter         1    5[BANK0 ] unsigned char 
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  2    0[BANK0 ] int 
  1970 ;; Registers used:
  1971 ;;		wreg, status,2, status,0
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1977 ;;      Params:         0       4       0       0       0
  1978 ;;      Locals:         0       2       0       0       0
  1979 ;;      Temps:          0       1       0       0       0
  1980 ;;      Totals:         0       7       0       0       0
  1981 ;;Total ram usage:        7 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; Hardware stack levels required when called:    2
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_displaypass
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           
  1992                           ;psect for function ___awmod
  1993  07A6                     ___awmod:	
  1994                           
  1995                           ;incstack = 0
  1996                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1997  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  1998  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  1999  07A8  01D3               	clrf	___awmod@sign
  2000  07A9  1FD0               	btfss	___awmod@dividend+1,7
  2001  07AA  2FB2               	goto	l3402
  2002  07AB  09CF               	comf	___awmod@dividend,f
  2003  07AC  09D0               	comf	___awmod@dividend+1,f
  2004  07AD  0ACF               	incf	___awmod@dividend,f
  2005  07AE  1903               	skipnz
  2006  07AF  0AD0               	incf	___awmod@dividend+1,f
  2007  07B0  01D3               	clrf	___awmod@sign
  2008  07B1  0AD3               	incf	___awmod@sign,f
  2009  07B2                     l3402:	
  2010  07B2  1FCE               	btfss	___awmod@divisor+1,7
  2011  07B3  2FB9               	goto	l3406
  2012  07B4  09CD               	comf	___awmod@divisor,f
  2013  07B5  09CE               	comf	___awmod@divisor+1,f
  2014  07B6  0ACD               	incf	___awmod@divisor,f
  2015  07B7  1903               	skipnz
  2016  07B8  0ACE               	incf	___awmod@divisor+1,f
  2017  07B9                     l3406:	
  2018  07B9  084D               	movf	___awmod@divisor,w
  2019  07BA  044E               	iorwf	___awmod@divisor+1,w
  2020  07BB  1903               	btfsc	3,2
  2021  07BC  2FE6               	goto	l3424
  2022  07BD  01D2               	clrf	___awmod@counter
  2023  07BE  0AD2               	incf	___awmod@counter,f
  2024  07BF                     l3414:	
  2025  07BF  1BCE               	btfsc	___awmod@divisor+1,7
  2026  07C0  2FCD               	goto	l3416
  2027  07C1  3001               	movlw	1
  2028  07C2                     u2785:	
  2029  07C2  1003               	clrc
  2030  07C3  0DCD               	rlf	___awmod@divisor,f
  2031  07C4  0DCE               	rlf	___awmod@divisor+1,f
  2032  07C5  3EFF               	addlw	-1
  2033  07C6  1D03               	skipz
  2034  07C7  2FC2               	goto	u2785
  2035  07C8  3001               	movlw	1
  2036  07C9  00D1               	movwf	??___awmod
  2037  07CA  0851               	movf	??___awmod,w
  2038  07CB  07D2               	addwf	___awmod@counter,f
  2039  07CC  2FBF               	goto	l3414
  2040  07CD                     l3416:	
  2041  07CD  084E               	movf	___awmod@divisor+1,w
  2042  07CE  0250               	subwf	___awmod@dividend+1,w
  2043  07CF  1D03               	skipz
  2044  07D0  2FD3               	goto	u2805
  2045  07D1  084D               	movf	___awmod@divisor,w
  2046  07D2  024F               	subwf	___awmod@dividend,w
  2047  07D3                     u2805:	
  2048  07D3  1C03               	skipc
  2049  07D4  2FDB               	goto	l3420
  2050  07D5  084D               	movf	___awmod@divisor,w
  2051  07D6  02CF               	subwf	___awmod@dividend,f
  2052  07D7  084E               	movf	___awmod@divisor+1,w
  2053  07D8  1C03               	skipc
  2054  07D9  03D0               	decf	___awmod@dividend+1,f
  2055  07DA  02D0               	subwf	___awmod@dividend+1,f
  2056  07DB                     l3420:	
  2057  07DB  3001               	movlw	1
  2058  07DC                     u2815:	
  2059  07DC  1003               	clrc
  2060  07DD  0CCE               	rrf	___awmod@divisor+1,f
  2061  07DE  0CCD               	rrf	___awmod@divisor,f
  2062  07DF  3EFF               	addlw	-1
  2063  07E0  1D03               	skipz
  2064  07E1  2FDC               	goto	u2815
  2065  07E2  3001               	movlw	1
  2066  07E3  02D2               	subwf	___awmod@counter,f
  2067  07E4  1D03               	btfss	3,2
  2068  07E5  2FCD               	goto	l3416
  2069  07E6                     l3424:	
  2070  07E6  0853               	movf	___awmod@sign,w
  2071  07E7  1903               	btfsc	3,2
  2072  07E8  2FEE               	goto	l3428
  2073  07E9  09CF               	comf	___awmod@dividend,f
  2074  07EA  09D0               	comf	___awmod@dividend+1,f
  2075  07EB  0ACF               	incf	___awmod@dividend,f
  2076  07EC  1903               	skipnz
  2077  07ED  0AD0               	incf	___awmod@dividend+1,f
  2078  07EE                     l3428:	
  2079  07EE  0850               	movf	___awmod@dividend+1,w
  2080  07EF  00CE               	movwf	?___awmod+1
  2081  07F0  084F               	movf	___awmod@dividend,w
  2082  07F1  00CD               	movwf	?___awmod
  2083  07F2  0008               	return
  2084  07F3                     __end_of___awmod:	
  2085                           
  2086                           	psect	text4
  2087  14FB                     __ptext4:	
  2088 ;; *************** function ___awdiv *****************
  2089 ;; Defined at:
  2090 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\awdiv.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  divisor         2    0[BANK0 ] int 
  2093 ;;  dividend        2    2[BANK0 ] int 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  quotient        2    7[BANK0 ] int 
  2096 ;;  sign            1    6[BANK0 ] unsigned char 
  2097 ;;  counter         1    5[BANK0 ] unsigned char 
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  2    0[BANK0 ] int 
  2100 ;; Registers used:
  2101 ;;		wreg, status,2, status,0
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2107 ;;      Params:         0       4       0       0       0
  2108 ;;      Locals:         0       4       0       0       0
  2109 ;;      Temps:          0       1       0       0       0
  2110 ;;      Totals:         0       9       0       0       0
  2111 ;;Total ram usage:        9 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; Hardware stack levels required when called:    2
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_displaypass
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           
  2122                           ;psect for function ___awdiv
  2123  14FB                     ___awdiv:	
  2124                           
  2125                           ;incstack = 0
  2126                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2127  14FB  1283               	bcf	3,5	;RP0=0, select bank0
  2128  14FC  1303               	bcf	3,6	;RP1=0, select bank0
  2129  14FD  01D3               	clrf	___awdiv@sign
  2130  14FE  1FCE               	btfss	___awdiv@divisor+1,7
  2131  14FF  2D07               	goto	l3358
  2132  1500  09CD               	comf	___awdiv@divisor,f
  2133  1501  09CE               	comf	___awdiv@divisor+1,f
  2134  1502  0ACD               	incf	___awdiv@divisor,f
  2135  1503  1903               	skipnz
  2136  1504  0ACE               	incf	___awdiv@divisor+1,f
  2137  1505  01D3               	clrf	___awdiv@sign
  2138  1506  0AD3               	incf	___awdiv@sign,f
  2139  1507                     l3358:	
  2140  1507  1FD0               	btfss	___awdiv@dividend+1,7
  2141  1508  2D12               	goto	l3364
  2142  1509  09CF               	comf	___awdiv@dividend,f
  2143  150A  09D0               	comf	___awdiv@dividend+1,f
  2144  150B  0ACF               	incf	___awdiv@dividend,f
  2145  150C  1903               	skipnz
  2146  150D  0AD0               	incf	___awdiv@dividend+1,f
  2147  150E  3001               	movlw	1
  2148  150F  00D1               	movwf	??___awdiv
  2149  1510  0851               	movf	??___awdiv,w
  2150  1511  06D3               	xorwf	___awdiv@sign,f
  2151  1512                     l3364:	
  2152  1512  01D4               	clrf	___awdiv@quotient
  2153  1513  01D5               	clrf	___awdiv@quotient+1
  2154  1514  084D               	movf	___awdiv@divisor,w
  2155  1515  044E               	iorwf	___awdiv@divisor+1,w
  2156  1516  1903               	btfsc	3,2
  2157  1517  2D49               	goto	l3386
  2158  1518  01D2               	clrf	___awdiv@counter
  2159  1519  0AD2               	incf	___awdiv@counter,f
  2160  151A                     l3374:	
  2161  151A  1BCE               	btfsc	___awdiv@divisor+1,7
  2162  151B  2D28               	goto	l3376
  2163  151C  3001               	movlw	1
  2164  151D                     u2685:	
  2165  151D  1003               	clrc
  2166  151E  0DCD               	rlf	___awdiv@divisor,f
  2167  151F  0DCE               	rlf	___awdiv@divisor+1,f
  2168  1520  3EFF               	addlw	-1
  2169  1521  1D03               	skipz
  2170  1522  2D1D               	goto	u2685
  2171  1523  3001               	movlw	1
  2172  1524  00D1               	movwf	??___awdiv
  2173  1525  0851               	movf	??___awdiv,w
  2174  1526  07D2               	addwf	___awdiv@counter,f
  2175  1527  2D1A               	goto	l3374
  2176  1528                     l3376:	
  2177  1528  3001               	movlw	1
  2178  1529                     u2705:	
  2179  1529  1003               	clrc
  2180  152A  0DD4               	rlf	___awdiv@quotient,f
  2181  152B  0DD5               	rlf	___awdiv@quotient+1,f
  2182  152C  3EFF               	addlw	-1
  2183  152D  1D03               	skipz
  2184  152E  2D29               	goto	u2705
  2185  152F  084E               	movf	___awdiv@divisor+1,w
  2186  1530  0250               	subwf	___awdiv@dividend+1,w
  2187  1531  1D03               	skipz
  2188  1532  2D35               	goto	u2715
  2189  1533  084D               	movf	___awdiv@divisor,w
  2190  1534  024F               	subwf	___awdiv@dividend,w
  2191  1535                     u2715:	
  2192  1535  1C03               	skipc
  2193  1536  2D3E               	goto	l3382
  2194  1537  084D               	movf	___awdiv@divisor,w
  2195  1538  02CF               	subwf	___awdiv@dividend,f
  2196  1539  084E               	movf	___awdiv@divisor+1,w
  2197  153A  1C03               	skipc
  2198  153B  03D0               	decf	___awdiv@dividend+1,f
  2199  153C  02D0               	subwf	___awdiv@dividend+1,f
  2200  153D  1454               	bsf	___awdiv@quotient,0
  2201  153E                     l3382:	
  2202  153E  3001               	movlw	1
  2203  153F                     u2725:	
  2204  153F  1003               	clrc
  2205  1540  0CCE               	rrf	___awdiv@divisor+1,f
  2206  1541  0CCD               	rrf	___awdiv@divisor,f
  2207  1542  3EFF               	addlw	-1
  2208  1543  1D03               	skipz
  2209  1544  2D3F               	goto	u2725
  2210  1545  3001               	movlw	1
  2211  1546  02D2               	subwf	___awdiv@counter,f
  2212  1547  1D03               	btfss	3,2
  2213  1548  2D28               	goto	l3376
  2214  1549                     l3386:	
  2215  1549  0853               	movf	___awdiv@sign,w
  2216  154A  1903               	btfsc	3,2
  2217  154B  2D51               	goto	l3390
  2218  154C  09D4               	comf	___awdiv@quotient,f
  2219  154D  09D5               	comf	___awdiv@quotient+1,f
  2220  154E  0AD4               	incf	___awdiv@quotient,f
  2221  154F  1903               	skipnz
  2222  1550  0AD5               	incf	___awdiv@quotient+1,f
  2223  1551                     l3390:	
  2224  1551  0855               	movf	___awdiv@quotient+1,w
  2225  1552  00CE               	movwf	?___awdiv+1
  2226  1553  0854               	movf	___awdiv@quotient,w
  2227  1554  00CD               	movwf	?___awdiv
  2228  1555  0008               	return
  2229  1556                     __end_of___awdiv:	
  2230                           
  2231                           	psect	text5
  2232  1F48                     __ptext5:	
  2233 ;; *************** function _display_price *****************
  2234 ;; Defined at:
  2235 ;;		line 1155 in file "newmain.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  data            2   28[BANK0 ] int 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;		None
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      void 
  2242 ;; Registers used:
  2243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2249 ;;      Params:         0       2       0       0       0
  2250 ;;      Locals:         0       0       0       0       0
  2251 ;;      Temps:          0       0       0       0       0
  2252 ;;      Totals:         0       2       0       0       0
  2253 ;;Total ram usage:        2 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; Hardware stack levels required when called:    5
  2256 ;; This function calls:
  2257 ;;		_LCD_DisplayString
  2258 ;;		_sprintf
  2259 ;; This function is called by:
  2260 ;;		_main
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           
  2265                           ;psect for function _display_price
  2266  1F48                     _display_price:	
  2267                           
  2268                           ;newmain.c: 1157: sprintf(dispvalue,"%d",data);
  2269                           
  2270                           ;incstack = 0
  2271                           ; Regs used in _display_price: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2272  1F48  3017               	movlw	low (STR_35| (0+32768))
  2273  1F49  1283               	bcf	3,5	;RP0=0, select bank0
  2274  1F4A  1303               	bcf	3,6	;RP1=0, select bank0
  2275  1F4B  00DB               	movwf	sprintf@f
  2276  1F4C  3092               	movlw	high (STR_35| (0+32768))
  2277  1F4D  00DC               	movwf	sprintf@f+1
  2278  1F4E  086A               	movf	display_price@data+1,w
  2279  1F4F  00DE               	movwf	?_sprintf+3
  2280  1F50  0869               	movf	display_price@data,w
  2281  1F51  00DD               	movwf	?_sprintf+2
  2282  1F52  3043               	movlw	(low (_dispvalue| 0))& (0+255)
  2283  1F53  120A  118A  26BC  160A  158A  	fcall	_sprintf
  2284                           
  2285                           ;newmain.c: 1158: LCD_DisplayString(dispvalue);
  2286  1F58  3043               	movlw	(low (_dispvalue| 0))& (0+255)
  2287  1F59  1283               	bcf	3,5	;RP0=0, select bank0
  2288  1F5A  1303               	bcf	3,6	;RP1=0, select bank0
  2289  1F5B  00D0               	movwf	LCD_DisplayString@s
  2290  1F5C  3000               	movlw	0
  2291  1F5D  00D1               	movwf	LCD_DisplayString@s+1
  2292  1F5E  160A  118A  2272   	fcall	_LCD_DisplayString
  2293  1F61  0008               	return
  2294  1F62                     __end_of_display_price:	
  2295                           
  2296                           	psect	text6
  2297  1F2E                     __ptext6:	
  2298 ;; *************** function _display *****************
  2299 ;; Defined at:
  2300 ;;		line 1147 in file "newmain.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  data            2   28[BANK0 ] int 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;		None
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  1    wreg      void 
  2307 ;; Registers used:
  2308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2314 ;;      Params:         0       2       0       0       0
  2315 ;;      Locals:         0       0       0       0       0
  2316 ;;      Temps:          0       0       0       0       0
  2317 ;;      Totals:         0       2       0       0       0
  2318 ;;Total ram usage:        2 bytes
  2319 ;; Hardware stack levels used:    1
  2320 ;; Hardware stack levels required when called:    5
  2321 ;; This function calls:
  2322 ;;		_LCD_DisplayString
  2323 ;;		_sprintf
  2324 ;; This function is called by:
  2325 ;;		_main
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           
  2330                           ;psect for function _display
  2331  1F2E                     _display:	
  2332                           
  2333                           ;newmain.c: 1149: sprintf(dispvalue,"%d",data);
  2334                           
  2335                           ;incstack = 0
  2336                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2337  1F2E  3017               	movlw	low (STR_35| (0+32768))
  2338  1F2F  1283               	bcf	3,5	;RP0=0, select bank0
  2339  1F30  1303               	bcf	3,6	;RP1=0, select bank0
  2340  1F31  00DB               	movwf	sprintf@f
  2341  1F32  3092               	movlw	high (STR_35| (0+32768))
  2342  1F33  00DC               	movwf	sprintf@f+1
  2343  1F34  086A               	movf	display@data+1,w
  2344  1F35  00DE               	movwf	?_sprintf+3
  2345  1F36  0869               	movf	display@data,w
  2346  1F37  00DD               	movwf	?_sprintf+2
  2347  1F38  3043               	movlw	(low (_dispvalue| 0))& (0+255)
  2348  1F39  120A  118A  26BC  160A  158A  	fcall	_sprintf
  2349                           
  2350                           ;newmain.c: 1150: LCD_DisplayString(dispvalue);
  2351  1F3E  3043               	movlw	(low (_dispvalue| 0))& (0+255)
  2352  1F3F  1283               	bcf	3,5	;RP0=0, select bank0
  2353  1F40  1303               	bcf	3,6	;RP1=0, select bank0
  2354  1F41  00D0               	movwf	LCD_DisplayString@s
  2355  1F42  3000               	movlw	0
  2356  1F43  00D1               	movwf	LCD_DisplayString@s+1
  2357  1F44  160A  118A  2272   	fcall	_LCD_DisplayString
  2358  1F47  0008               	return
  2359  1F48                     __end_of_display:	
  2360                           
  2361                           	psect	text7
  2362  06BC                     __ptext7:	
  2363 ;; *************** function _sprintf *****************
  2364 ;; Defined at:
  2365 ;;		line 492 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\doprnt.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  sp              1    wreg     PTR unsigned char 
  2368 ;;		 -> dispvalue(10), 
  2369 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  2370 ;;		 -> STR_36(3), STR_35(3), 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;  sp              1   26[BANK0 ] PTR unsigned char 
  2373 ;;		 -> dispvalue(10), 
  2374 ;;  tmpval          4    0        struct .
  2375 ;;  val             2   24[BANK0 ] unsigned int 
  2376 ;;  cp              2    0        PTR const unsigned char 
  2377 ;;  len             2    0        unsigned int 
  2378 ;;  c               1   27[BANK0 ] char 
  2379 ;;  prec            1   23[BANK0 ] char 
  2380 ;;  flag            1   22[BANK0 ] unsigned char 
  2381 ;;  ap              1   21[BANK0 ] PTR void [1]
  2382 ;;		 -> ?_sprintf(2), 
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  2   14[BANK0 ] int 
  2385 ;; Registers used:
  2386 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2392 ;;      Params:         0       4       0       0       0
  2393 ;;      Locals:         0       7       0       0       0
  2394 ;;      Temps:          0       3       0       0       0
  2395 ;;      Totals:         0      14       0       0       0
  2396 ;;Total ram usage:       14 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:    3
  2399 ;; This function calls:
  2400 ;;		___lwdiv
  2401 ;;		___lwmod
  2402 ;; This function is called by:
  2403 ;;		_display
  2404 ;;		_display_price
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           
  2409                           ;psect for function _sprintf
  2410  06BC                     _sprintf:	
  2411                           
  2412                           ;incstack = 0
  2413                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2414                           ;sprintf@sp stored from wreg
  2415  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  2416  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  2417  06BE  00E7               	movwf	sprintf@sp
  2418                           
  2419                           ;doprnt.c: 494: va_list ap;
  2420                           ;doprnt.c: 499: signed char c;
  2421                           ;doprnt.c: 506: signed char prec;
  2422                           ;doprnt.c: 508: unsigned char flag;
  2423                           ;doprnt.c: 523: union {
  2424                           ;doprnt.c: 524: unsigned long vd;
  2425                           ;doprnt.c: 525: double integ;
  2426                           ;doprnt.c: 526: } tmpval;
  2427                           ;doprnt.c: 528: unsigned int val;
  2428                           ;doprnt.c: 529: unsigned len;
  2429                           ;doprnt.c: 530: const char * cp;
  2430                           ;doprnt.c: 533: *ap = __va_start();
  2431  06BF  305D               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2432  06C0  00DF               	movwf	??_sprintf
  2433  06C1  085F               	movf	??_sprintf,w
  2434  06C2  00E2               	movwf	sprintf@ap
  2435  06C3                     l3306:	
  2436                           ;doprnt.c: 536: while(c = *f++) {
  2437                           
  2438  06C3  085C               	movf	sprintf@f+1,w
  2439  06C4  00E0               	movwf	??_sprintf+1
  2440  06C5  085B               	movf	sprintf@f,w
  2441  06C6  00DF               	movwf	??_sprintf
  2442  06C7  0ADB               	incf	sprintf@f,f
  2443  06C8  1903               	skipnz
  2444  06C9  0ADC               	incf	sprintf@f+1,f
  2445  06CA  0860               	movf	??_sprintf+1,w
  2446  06CB  00FF               	movwf	127
  2447  06CC  085F               	movf	??_sprintf,w
  2448  06CD  0084               	movwf	4
  2449  06CE  160A  118A  2000  120A  118A  	fcall	stringtab
  2450  06D3  00E1               	movwf	??_sprintf+2
  2451  06D4  0861               	movf	??_sprintf+2,w
  2452  06D5  00E8               	movwf	sprintf@c
  2453  06D6  0868               	movf	sprintf@c,w
  2454  06D7  1903               	btfsc	3,2
  2455  06D8  2FA1               	goto	l3308
  2456                           
  2457                           ;doprnt.c: 538: if(c != '%')
  2458  06D9  3025               	movlw	37
  2459  06DA  0668               	xorwf	sprintf@c,w
  2460  06DB  1903               	btfsc	3,2
  2461  06DC  2EE9               	goto	l3262
  2462                           
  2463                           ;doprnt.c: 540: {
  2464                           ;doprnt.c: 541: ((*sp++ = (c)));
  2465  06DD  0868               	movf	sprintf@c,w
  2466  06DE  00DF               	movwf	??_sprintf
  2467  06DF  0867               	movf	sprintf@sp,w
  2468  06E0  0084               	movwf	4
  2469  06E1  085F               	movf	??_sprintf,w
  2470  06E2  1383               	bcf	3,7	;select IRP bank0
  2471  06E3  0080               	movwf	0
  2472  06E4  3001               	movlw	1
  2473  06E5  00DF               	movwf	??_sprintf
  2474  06E6  085F               	movf	??_sprintf,w
  2475  06E7  07E7               	addwf	sprintf@sp,f
  2476                           
  2477                           ;doprnt.c: 542: continue;
  2478  06E8  2EC3               	goto	l3306
  2479  06E9                     l3262:	
  2480                           
  2481                           ;doprnt.c: 543: }
  2482                           ;doprnt.c: 548: flag = 0;
  2483  06E9  01E3               	clrf	sprintf@flag
  2484                           
  2485                           ;doprnt.c: 822: }
  2486                           
  2487                           ;doprnt.c: 813: continue;
  2488                           
  2489                           ;doprnt.c: 802: default:
  2490                           
  2491                           ;doprnt.c: 698: case 'i':
  2492                           ;doprnt.c: 699: break;
  2493                           
  2494                           ;doprnt.c: 697: case 'd':
  2495                           
  2496                           ;doprnt.c: 638: goto alldone;
  2497                           
  2498                           ;doprnt.c: 637: case 0:
  2499                           
  2500                           ;doprnt.c: 635: switch(c = *f++) {
  2501  06EA  085C               	movf	sprintf@f+1,w
  2502  06EB  00E0               	movwf	??_sprintf+1
  2503  06EC  085B               	movf	sprintf@f,w
  2504  06ED  00DF               	movwf	??_sprintf
  2505  06EE  0ADB               	incf	sprintf@f,f
  2506  06EF  1903               	skipnz
  2507  06F0  0ADC               	incf	sprintf@f+1,f
  2508  06F1  0860               	movf	??_sprintf+1,w
  2509  06F2  00FF               	movwf	127
  2510  06F3  085F               	movf	??_sprintf,w
  2511  06F4  0084               	movwf	4
  2512  06F5  160A  118A  2000  120A  118A  	fcall	stringtab
  2513  06FA  00E8               	movwf	sprintf@c
  2514                           
  2515                           ; Switch size 1, requested type "space"
  2516                           ; Number of cases is 3, Range of values is 0 to 105
  2517                           ; switch strategies available:
  2518                           ; Name         Instructions Cycles
  2519                           ; simple_byte           10     6 (average)
  2520                           ; jumptable            260     6 (fixed)
  2521                           ;	Chosen strategy is simple_byte
  2522  06FB  3A00               	xorlw	0	; case 0
  2523  06FC  1903               	skipnz
  2524  06FD  2FA1               	goto	l3308
  2525  06FE  3A64               	xorlw	100	; case 100
  2526  06FF  1903               	skipnz
  2527  0700  2F05               	goto	l3268
  2528  0701  3A0D               	xorlw	13	; case 105
  2529  0702  1903               	skipnz
  2530  0703  2F05               	goto	l3268
  2531  0704  2EC3               	goto	l3306
  2532  0705                     l3268:	
  2533                           
  2534                           ;doprnt.c: 1253: {
  2535                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2536  0705  0862               	movf	sprintf@ap,w
  2537  0706  0084               	movwf	4
  2538  0707  1383               	bcf	3,7	;select IRP bank0
  2539  0708  0800               	movf	0,w
  2540  0709  00E5               	movwf	sprintf@val
  2541  070A  0A84               	incf	4,f
  2542  070B  0800               	movf	0,w
  2543  070C  00E6               	movwf	sprintf@val+1
  2544  070D  3002               	movlw	2
  2545  070E  00DF               	movwf	??_sprintf
  2546  070F  085F               	movf	??_sprintf,w
  2547  0710  07E2               	addwf	sprintf@ap,f
  2548                           
  2549                           ;doprnt.c: 1261: if((int)val < 0) {
  2550  0711  1FE6               	btfss	sprintf@val+1,7
  2551  0712  2F1C               	goto	l3278
  2552                           
  2553                           ;doprnt.c: 1262: flag |= 0x03;
  2554  0713  3003               	movlw	3
  2555  0714  00DF               	movwf	??_sprintf
  2556  0715  085F               	movf	??_sprintf,w
  2557  0716  04E3               	iorwf	sprintf@flag,f
  2558                           
  2559                           ;doprnt.c: 1263: val = -val;
  2560  0717  09E5               	comf	sprintf@val,f
  2561  0718  09E6               	comf	sprintf@val+1,f
  2562  0719  0AE5               	incf	sprintf@val,f
  2563  071A  1903               	skipnz
  2564  071B  0AE6               	incf	sprintf@val+1,f
  2565  071C                     l3278:	
  2566                           
  2567                           ;doprnt.c: 1264: }
  2568                           ;doprnt.c: 1266: }
  2569                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2570  071C  01E8               	clrf	sprintf@c
  2571  071D  0AE8               	incf	sprintf@c,f
  2572  071E  3005               	movlw	5
  2573  071F  0668               	xorwf	sprintf@c,w
  2574  0720  1903               	btfsc	3,2
  2575  0721  2F47               	goto	l3290
  2576  0722                     l3284:	
  2577                           
  2578                           ;doprnt.c: 1306: if(val < dpowers[c])
  2579  0722  0868               	movf	sprintf@c,w
  2580  0723  00DF               	movwf	??_sprintf
  2581  0724  075F               	addwf	??_sprintf,w
  2582  0725  3E12               	addlw	low (_dpowers| (0+32768))
  2583  0726  0084               	movwf	4
  2584  0727  3090               	movlw	high (_dpowers| (0+32768))
  2585  0728  1803               	skipnc
  2586  0729  3E01               	addlw	1
  2587  072A  00FF               	movwf	127
  2588  072B  160A  118A  2000  120A  118A  	fcall	stringtab
  2589  0730  00E0               	movwf	??_sprintf+1
  2590  0731  160A  118A  2000  120A  118A  	fcall	stringtab
  2591  0736  00E1               	movwf	??_sprintf+2
  2592  0737  0861               	movf	??_sprintf+2,w
  2593  0738  0266               	subwf	sprintf@val+1,w
  2594  0739  1D03               	skipz
  2595  073A  2F3D               	goto	u2525
  2596  073B  0860               	movf	??_sprintf+1,w
  2597  073C  0265               	subwf	sprintf@val,w
  2598  073D                     u2525:	
  2599  073D  1C03               	btfss	3,0
  2600  073E  2F47               	goto	l3290
  2601                           
  2602                           ;doprnt.c: 1307: break;
  2603  073F  3001               	movlw	1
  2604  0740  00DF               	movwf	??_sprintf
  2605  0741  085F               	movf	??_sprintf,w
  2606  0742  07E8               	addwf	sprintf@c,f
  2607  0743  3005               	movlw	5
  2608  0744  0668               	xorwf	sprintf@c,w
  2609  0745  1D03               	btfss	3,2
  2610  0746  2F22               	goto	l3284
  2611  0747                     l3290:	
  2612                           
  2613                           ;doprnt.c: 1422: {
  2614                           ;doprnt.c: 1438: if(flag & 0x03)
  2615  0747  0863               	movf	sprintf@flag,w
  2616  0748  3903               	andlw	3
  2617  0749  1903               	btfsc	3,2
  2618  074A  2F56               	goto	l3296
  2619                           
  2620                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2621  074B  302D               	movlw	45
  2622  074C  00DF               	movwf	??_sprintf
  2623  074D  0867               	movf	sprintf@sp,w
  2624  074E  0084               	movwf	4
  2625  074F  085F               	movf	??_sprintf,w
  2626  0750  1383               	bcf	3,7	;select IRP bank0
  2627  0751  0080               	movwf	0
  2628  0752  3001               	movlw	1
  2629  0753  00DF               	movwf	??_sprintf
  2630  0754  085F               	movf	??_sprintf,w
  2631  0755  07E7               	addwf	sprintf@sp,f
  2632  0756                     l3296:	
  2633                           
  2634                           ;doprnt.c: 1469: }
  2635                           ;doprnt.c: 1472: prec = c;
  2636  0756  0868               	movf	sprintf@c,w
  2637  0757  00DF               	movwf	??_sprintf
  2638  0758  085F               	movf	??_sprintf,w
  2639  0759  00E4               	movwf	sprintf@prec
  2640  075A                     l3304:	
  2641                           ;doprnt.c: 1474: while(prec--) {
  2642                           
  2643  075A  30FF               	movlw	255
  2644  075B  00DF               	movwf	??_sprintf
  2645  075C  085F               	movf	??_sprintf,w
  2646  075D  07E4               	addwf	sprintf@prec,f
  2647  075E  0A64               	incf	sprintf@prec,w
  2648  075F  1903               	btfsc	3,2
  2649  0760  2EC3               	goto	l3306
  2650                           
  2651                           ;doprnt.c: 1478: {
  2652                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2653  0761  300A               	movlw	10
  2654  0762  00D5               	movwf	___lwmod@divisor
  2655  0763  3000               	movlw	0
  2656  0764  00D6               	movwf	___lwmod@divisor+1
  2657  0765  0864               	movf	sprintf@prec,w
  2658  0766  00DF               	movwf	??_sprintf
  2659  0767  075F               	addwf	??_sprintf,w
  2660  0768  3E12               	addlw	low (_dpowers| (0+32768))
  2661  0769  0084               	movwf	4
  2662  076A  3090               	movlw	high (_dpowers| (0+32768))
  2663  076B  1803               	skipnc
  2664  076C  3E01               	addlw	1
  2665  076D  00FF               	movwf	127
  2666  076E  160A  118A  2000  120A  118A  	fcall	stringtab
  2667  0773  00CD               	movwf	___lwdiv@divisor
  2668  0774  160A  118A  2000  120A  118A  	fcall	stringtab
  2669  0779  00CE               	movwf	___lwdiv@divisor+1
  2670  077A  0866               	movf	sprintf@val+1,w
  2671  077B  00D0               	movwf	___lwdiv@dividend+1
  2672  077C  0865               	movf	sprintf@val,w
  2673  077D  00CF               	movwf	___lwdiv@dividend
  2674  077E  160A  118A  2437  120A  118A  	fcall	___lwdiv
  2675  0783  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0784  1303               	bcf	3,6	;RP1=0, select bank0
  2677  0785  084E               	movf	?___lwdiv+1,w
  2678  0786  00D8               	movwf	___lwmod@dividend+1
  2679  0787  084D               	movf	?___lwdiv,w
  2680  0788  00D7               	movwf	___lwmod@dividend
  2681  0789  160A  118A  2322  120A  118A  	fcall	___lwmod
  2682  078E  1283               	bcf	3,5	;RP0=0, select bank0
  2683  078F  1303               	bcf	3,6	;RP1=0, select bank0
  2684  0790  0855               	movf	?___lwmod,w
  2685  0791  3E30               	addlw	48
  2686  0792  00E0               	movwf	??_sprintf+1
  2687  0793  0860               	movf	??_sprintf+1,w
  2688  0794  00E8               	movwf	sprintf@c
  2689                           
  2690                           ;doprnt.c: 1523: }
  2691                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2692  0795  0868               	movf	sprintf@c,w
  2693  0796  00DF               	movwf	??_sprintf
  2694  0797  0867               	movf	sprintf@sp,w
  2695  0798  0084               	movwf	4
  2696  0799  085F               	movf	??_sprintf,w
  2697  079A  1383               	bcf	3,7	;select IRP bank0
  2698  079B  0080               	movwf	0
  2699  079C  3001               	movlw	1
  2700  079D  00DF               	movwf	??_sprintf
  2701  079E  085F               	movf	??_sprintf,w
  2702  079F  07E7               	addwf	sprintf@sp,f
  2703  07A0  2F5A               	goto	l3304
  2704  07A1                     l3308:	
  2705                           ;doprnt.c: 1525: }
  2706                           ;doprnt.c: 1533: }
  2707                           ;doprnt.c: 1535: alldone:
  2708                           
  2709                           
  2710                           ;doprnt.c: 1538: *sp = 0;
  2711  07A1  0867               	movf	sprintf@sp,w
  2712  07A2  0084               	movwf	4
  2713  07A3  1383               	bcf	3,7	;select IRP bank0
  2714  07A4  0180               	clrf	0
  2715  07A5  0008               	return
  2716  07A6                     __end_of_sprintf:	
  2717                           ;doprnt.c: 1540: return 0;
  2718                           ;	Return value of _sprintf is never used
  2719                           
  2720                           
  2721                           	psect	text8
  2722  15B5                     __ptext8:	
  2723 ;; *************** function _Write_EEPROM_Price *****************
  2724 ;; Defined at:
  2725 ;;		line 1195 in file "newmain.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  a1              1    wreg     unsigned char 
  2728 ;;  a2              1   17[BANK0 ] unsigned char 
  2729 ;;  a3              1   18[BANK0 ] unsigned char 
  2730 ;;  data_value      2   19[BANK0 ] unsigned int 
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;  a1              1   22[BANK0 ] unsigned char 
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  1    wreg      void 
  2735 ;; Registers used:
  2736 ;;		wreg, status,2, status,0, pclath, cstack
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2742 ;;      Params:         0       4       0       0       0
  2743 ;;      Locals:         0       1       0       0       0
  2744 ;;      Temps:          0       1       0       0       0
  2745 ;;      Totals:         0       6       0       0       0
  2746 ;;Total ram usage:        6 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; Hardware stack levels required when called:    3
  2749 ;; This function calls:
  2750 ;;		___lwdiv
  2751 ;;		___lwmod
  2752 ;;		_eeprom_write
  2753 ;; This function is called by:
  2754 ;;		_main
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           
  2759                           ;psect for function _Write_EEPROM_Price
  2760  15B5                     _Write_EEPROM_Price:	
  2761                           
  2762                           ;incstack = 0
  2763                           ; Regs used in _Write_EEPROM_Price: [wreg+status,2+status,0+pclath+cstack]
  2764                           ;Write_EEPROM_Price@a1 stored from wreg
  2765  15B5  1283               	bcf	3,5	;RP0=0, select bank0
  2766  15B6  1303               	bcf	3,6	;RP1=0, select bank0
  2767  15B7  00E3               	movwf	Write_EEPROM_Price@a1
  2768                           
  2769                           ;newmain.c: 1197: eeprom_write(a1,(data_value/100));
  2770  15B8  3064               	movlw	100
  2771  15B9  00CD               	movwf	___lwdiv@divisor
  2772  15BA  3000               	movlw	0
  2773  15BB  00CE               	movwf	___lwdiv@divisor+1
  2774  15BC  0861               	movf	Write_EEPROM_Price@data_value+1,w
  2775  15BD  00D0               	movwf	___lwdiv@dividend+1
  2776  15BE  0860               	movf	Write_EEPROM_Price@data_value,w
  2777  15BF  00CF               	movwf	___lwdiv@dividend
  2778  15C0  160A  118A  2437  160A  118A  	fcall	___lwdiv
  2779  15C5  1283               	bcf	3,5	;RP0=0, select bank0
  2780  15C6  1303               	bcf	3,6	;RP1=0, select bank0
  2781  15C7  084D               	movf	?___lwdiv,w
  2782  15C8  00E2               	movwf	??_Write_EEPROM_Price
  2783  15C9  0862               	movf	??_Write_EEPROM_Price,w
  2784  15CA  00DB               	movwf	eeprom_write@value
  2785  15CB  0863               	movf	Write_EEPROM_Price@a1,w
  2786  15CC  160A  118A  22F2  160A  118A  	fcall	_eeprom_write
  2787                           
  2788                           ;newmain.c: 1198: eeprom_write(a2,((data_value/10)%10));
  2789  15D1  300A               	movlw	10
  2790  15D2  1283               	bcf	3,5	;RP0=0, select bank0
  2791  15D3  1303               	bcf	3,6	;RP1=0, select bank0
  2792  15D4  00D5               	movwf	___lwmod@divisor
  2793  15D5  3000               	movlw	0
  2794  15D6  00D6               	movwf	___lwmod@divisor+1
  2795  15D7  300A               	movlw	10
  2796  15D8  00CD               	movwf	___lwdiv@divisor
  2797  15D9  3000               	movlw	0
  2798  15DA  00CE               	movwf	___lwdiv@divisor+1
  2799  15DB  0861               	movf	Write_EEPROM_Price@data_value+1,w
  2800  15DC  00D0               	movwf	___lwdiv@dividend+1
  2801  15DD  0860               	movf	Write_EEPROM_Price@data_value,w
  2802  15DE  00CF               	movwf	___lwdiv@dividend
  2803  15DF  160A  118A  2437  160A  118A  	fcall	___lwdiv
  2804  15E4  1283               	bcf	3,5	;RP0=0, select bank0
  2805  15E5  1303               	bcf	3,6	;RP1=0, select bank0
  2806  15E6  084E               	movf	?___lwdiv+1,w
  2807  15E7  00D8               	movwf	___lwmod@dividend+1
  2808  15E8  084D               	movf	?___lwdiv,w
  2809  15E9  00D7               	movwf	___lwmod@dividend
  2810  15EA  160A  118A  2322  160A  118A  	fcall	___lwmod
  2811  15EF  1283               	bcf	3,5	;RP0=0, select bank0
  2812  15F0  1303               	bcf	3,6	;RP1=0, select bank0
  2813  15F1  0855               	movf	?___lwmod,w
  2814  15F2  00E2               	movwf	??_Write_EEPROM_Price
  2815  15F3  0862               	movf	??_Write_EEPROM_Price,w
  2816  15F4  00DB               	movwf	eeprom_write@value
  2817  15F5  085E               	movf	Write_EEPROM_Price@a2,w
  2818  15F6  160A  118A  22F2  160A  118A  	fcall	_eeprom_write
  2819                           
  2820                           ;newmain.c: 1199: eeprom_write(a3,(data_value%10));
  2821  15FB  300A               	movlw	10
  2822  15FC  1283               	bcf	3,5	;RP0=0, select bank0
  2823  15FD  1303               	bcf	3,6	;RP1=0, select bank0
  2824  15FE  00D5               	movwf	___lwmod@divisor
  2825  15FF  3000               	movlw	0
  2826  1600  00D6               	movwf	___lwmod@divisor+1
  2827  1601  0861               	movf	Write_EEPROM_Price@data_value+1,w
  2828  1602  00D8               	movwf	___lwmod@dividend+1
  2829  1603  0860               	movf	Write_EEPROM_Price@data_value,w
  2830  1604  00D7               	movwf	___lwmod@dividend
  2831  1605  160A  118A  2322  160A  118A  	fcall	___lwmod
  2832  160A  1283               	bcf	3,5	;RP0=0, select bank0
  2833  160B  1303               	bcf	3,6	;RP1=0, select bank0
  2834  160C  0855               	movf	?___lwmod,w
  2835  160D  00E2               	movwf	??_Write_EEPROM_Price
  2836  160E  0862               	movf	??_Write_EEPROM_Price,w
  2837  160F  00DB               	movwf	eeprom_write@value
  2838  1610  085F               	movf	Write_EEPROM_Price@a3,w
  2839  1611  160A  118A  22F2   	fcall	_eeprom_write
  2840  1614  0008               	return
  2841  1615                     __end_of_Write_EEPROM_Price:	
  2842                           
  2843                           	psect	text9
  2844  1356                     __ptext9:	
  2845 ;; *************** function _Write_EEPROM *****************
  2846 ;; Defined at:
  2847 ;;		line 1182 in file "newmain.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  a1              1    wreg     unsigned char 
  2850 ;;  a2              1   17[BANK0 ] unsigned char 
  2851 ;;  data_value      2   18[BANK0 ] unsigned int 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  a1              1   21[BANK0 ] unsigned char 
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		wreg, status,2, status,0, pclath, cstack
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2863 ;;      Params:         0       3       0       0       0
  2864 ;;      Locals:         0       1       0       0       0
  2865 ;;      Temps:          0       1       0       0       0
  2866 ;;      Totals:         0       5       0       0       0
  2867 ;;Total ram usage:        5 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    3
  2870 ;; This function calls:
  2871 ;;		___lwdiv
  2872 ;;		___lwmod
  2873 ;;		_eeprom_write
  2874 ;; This function is called by:
  2875 ;;		_main
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           
  2880                           ;psect for function _Write_EEPROM
  2881  1356                     _Write_EEPROM:	
  2882                           
  2883                           ;incstack = 0
  2884                           ; Regs used in _Write_EEPROM: [wreg+status,2+status,0+pclath+cstack]
  2885                           ;Write_EEPROM@a1 stored from wreg
  2886  1356  1283               	bcf	3,5	;RP0=0, select bank0
  2887  1357  1303               	bcf	3,6	;RP1=0, select bank0
  2888  1358  00E2               	movwf	Write_EEPROM@a1
  2889                           
  2890                           ;newmain.c: 1184: eeprom_write(a1,(data_value/10));
  2891  1359  300A               	movlw	10
  2892  135A  00CD               	movwf	___lwdiv@divisor
  2893  135B  3000               	movlw	0
  2894  135C  00CE               	movwf	___lwdiv@divisor+1
  2895  135D  0860               	movf	Write_EEPROM@data_value+1,w
  2896  135E  00D0               	movwf	___lwdiv@dividend+1
  2897  135F  085F               	movf	Write_EEPROM@data_value,w
  2898  1360  00CF               	movwf	___lwdiv@dividend
  2899  1361  160A  118A  2437  160A  118A  	fcall	___lwdiv
  2900  1366  1283               	bcf	3,5	;RP0=0, select bank0
  2901  1367  1303               	bcf	3,6	;RP1=0, select bank0
  2902  1368  084D               	movf	?___lwdiv,w
  2903  1369  00E1               	movwf	??_Write_EEPROM
  2904  136A  0861               	movf	??_Write_EEPROM,w
  2905  136B  00DB               	movwf	eeprom_write@value
  2906  136C  0862               	movf	Write_EEPROM@a1,w
  2907  136D  160A  118A  22F2  160A  118A  	fcall	_eeprom_write
  2908                           
  2909                           ;newmain.c: 1185: eeprom_write(a2,(data_value%10));
  2910  1372  300A               	movlw	10
  2911  1373  1283               	bcf	3,5	;RP0=0, select bank0
  2912  1374  1303               	bcf	3,6	;RP1=0, select bank0
  2913  1375  00D5               	movwf	___lwmod@divisor
  2914  1376  3000               	movlw	0
  2915  1377  00D6               	movwf	___lwmod@divisor+1
  2916  1378  0860               	movf	Write_EEPROM@data_value+1,w
  2917  1379  00D8               	movwf	___lwmod@dividend+1
  2918  137A  085F               	movf	Write_EEPROM@data_value,w
  2919  137B  00D7               	movwf	___lwmod@dividend
  2920  137C  160A  118A  2322  160A  118A  	fcall	___lwmod
  2921  1381  1283               	bcf	3,5	;RP0=0, select bank0
  2922  1382  1303               	bcf	3,6	;RP1=0, select bank0
  2923  1383  0855               	movf	?___lwmod,w
  2924  1384  00E1               	movwf	??_Write_EEPROM
  2925  1385  0861               	movf	??_Write_EEPROM,w
  2926  1386  00DB               	movwf	eeprom_write@value
  2927  1387  085E               	movf	Write_EEPROM@a2,w
  2928  1388  160A  118A  22F2   	fcall	_eeprom_write
  2929  138B  0008               	return
  2930  138C                     __end_of_Write_EEPROM:	
  2931                           
  2932                           	psect	text10
  2933  12F2                     __ptext10:	
  2934 ;; *************** function _eeprom_write *****************
  2935 ;; Defined at:
  2936 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.44\sources\pic\eewrite.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;  addr            1    wreg     unsigned char 
  2939 ;;  value           1   14[BANK0 ] unsigned char 
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;  addr            1   16[BANK0 ] unsigned char 
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1    wreg      void 
  2944 ;; Registers used:
  2945 ;;		wreg, status,2, status,0
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2951 ;;      Params:         0       1       0       0       0
  2952 ;;      Locals:         0       1       0       0       0
  2953 ;;      Temps:          0       1       0       0       0
  2954 ;;      Totals:         0       3       0       0       0
  2955 ;;Total ram usage:        3 bytes
  2956 ;; Hardware stack levels used:    1
  2957 ;; Hardware stack levels required when called:    2
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_Write_EEPROM
  2962 ;;		_Write_EEPROM_Price
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           
  2967                           ;psect for function _eeprom_write
  2968  12F2                     _eeprom_write:	
  2969                           
  2970                           ;incstack = 0
  2971                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2972                           ;eeprom_write@addr stored from wreg
  2973  12F2  1283               	bcf	3,5	;RP0=0, select bank0
  2974  12F3  1303               	bcf	3,6	;RP1=0, select bank0
  2975  12F4  00DD               	movwf	eeprom_write@addr
  2976  12F5                     l772:	
  2977  12F5  1683               	bsf	3,5	;RP0=1, select bank3
  2978  12F6  1703               	bsf	3,6	;RP1=1, select bank3
  2979  12F7  188C               	btfsc	12,1	;volsfr
  2980  12F8  2AF5               	goto	l772
  2981  12F9  1283               	bcf	3,5	;RP0=0, select bank0
  2982  12FA  1303               	bcf	3,6	;RP1=0, select bank0
  2983  12FB  085D               	movf	eeprom_write@addr,w
  2984  12FC  1283               	bcf	3,5	;RP0=0, select bank2
  2985  12FD  1703               	bsf	3,6	;RP1=1, select bank2
  2986  12FE  008D               	movwf	13	;volatile
  2987  12FF  1283               	bcf	3,5	;RP0=0, select bank0
  2988  1300  1303               	bcf	3,6	;RP1=0, select bank0
  2989  1301  085B               	movf	eeprom_write@value,w
  2990  1302  1283               	bcf	3,5	;RP0=0, select bank2
  2991  1303  1703               	bsf	3,6	;RP1=1, select bank2
  2992  1304  008C               	movwf	12	;volatile
  2993  1305  303F               	movlw	63
  2994  1306  1283               	bcf	3,5	;RP0=0, select bank0
  2995  1307  1303               	bcf	3,6	;RP1=0, select bank0
  2996  1308  00DC               	movwf	??_eeprom_write
  2997  1309  085C               	movf	??_eeprom_write,w
  2998  130A  1683               	bsf	3,5	;RP0=1, select bank3
  2999  130B  1703               	bsf	3,6	;RP1=1, select bank3
  3000  130C  058C               	andwf	12,f	;volsfr
  3001  130D  1283               	bcf	3,5	;RP0=0, select bank0
  3002  130E  1303               	bcf	3,6	;RP1=0, select bank0
  3003  130F  1003               	bcf	3,0	;volatile
  3004  1310  1B8B               	btfsc	11,7	;volatile
  3005  1311  1403               	bsf	3,0	;volatile
  3006  1312  138B               	bcf	11,7	;volatile
  3007  1313  1683               	bsf	3,5	;RP0=1, select bank3
  3008  1314  1703               	bsf	3,6	;RP1=1, select bank3
  3009  1315  150C               	bsf	12,2	;volsfr
  3010  1316  3055               	movlw	85
  3011  1317  008D               	movwf	13	;volsfr
  3012  1318  30AA               	movlw	170
  3013  1319  008D               	movwf	13	;volsfr
  3014  131A  148C               	bsf	12,1	;volsfr
  3015  131B  110C               	bcf	12,2	;volsfr
  3016  131C  1283               	bcf	3,5	;RP0=0, select bank0
  3017  131D  1303               	bcf	3,6	;RP1=0, select bank0
  3018  131E  1C03               	btfss	3,0	;volatile
  3019  131F  0008               	return
  3020  1320  178B               	bsf	11,7	;volatile
  3021  1321  0008               	return
  3022  1322                     __end_of_eeprom_write:	
  3023                           
  3024                           	psect	text11
  3025  1322                     __ptext11:	
  3026 ;; *************** function ___lwmod *****************
  3027 ;; Defined at:
  3028 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\lwmod.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  divisor         2    8[BANK0 ] unsigned int 
  3031 ;;  dividend        2   10[BANK0 ] unsigned int 
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;  counter         1   13[BANK0 ] unsigned char 
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  2    8[BANK0 ] unsigned int 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3043 ;;      Params:         0       4       0       0       0
  3044 ;;      Locals:         0       1       0       0       0
  3045 ;;      Temps:          0       1       0       0       0
  3046 ;;      Totals:         0       6       0       0       0
  3047 ;;Total ram usage:        6 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; Hardware stack levels required when called:    2
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_Write_EEPROM
  3054 ;;		_Write_EEPROM_Price
  3055 ;;		_sprintf
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           
  3060                           ;psect for function ___lwmod
  3061  1322                     ___lwmod:	
  3062                           
  3063                           ;incstack = 0
  3064                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3065  1322  1283               	bcf	3,5	;RP0=0, select bank0
  3066  1323  1303               	bcf	3,6	;RP1=0, select bank0
  3067  1324  0855               	movf	___lwmod@divisor,w
  3068  1325  0456               	iorwf	___lwmod@divisor+1,w
  3069  1326  1903               	btfsc	3,2
  3070  1327  2B51               	goto	l3214
  3071  1328  01DA               	clrf	___lwmod@counter
  3072  1329  0ADA               	incf	___lwmod@counter,f
  3073  132A                     l3204:	
  3074  132A  1BD6               	btfsc	___lwmod@divisor+1,7
  3075  132B  2B38               	goto	l3206
  3076  132C  3001               	movlw	1
  3077  132D                     u2385:	
  3078  132D  1003               	clrc
  3079  132E  0DD5               	rlf	___lwmod@divisor,f
  3080  132F  0DD6               	rlf	___lwmod@divisor+1,f
  3081  1330  3EFF               	addlw	-1
  3082  1331  1D03               	skipz
  3083  1332  2B2D               	goto	u2385
  3084  1333  3001               	movlw	1
  3085  1334  00D9               	movwf	??___lwmod
  3086  1335  0859               	movf	??___lwmod,w
  3087  1336  07DA               	addwf	___lwmod@counter,f
  3088  1337  2B2A               	goto	l3204
  3089  1338                     l3206:	
  3090  1338  0856               	movf	___lwmod@divisor+1,w
  3091  1339  0258               	subwf	___lwmod@dividend+1,w
  3092  133A  1D03               	skipz
  3093  133B  2B3E               	goto	u2405
  3094  133C  0855               	movf	___lwmod@divisor,w
  3095  133D  0257               	subwf	___lwmod@dividend,w
  3096  133E                     u2405:	
  3097  133E  1C03               	skipc
  3098  133F  2B46               	goto	l3210
  3099  1340  0855               	movf	___lwmod@divisor,w
  3100  1341  02D7               	subwf	___lwmod@dividend,f
  3101  1342  0856               	movf	___lwmod@divisor+1,w
  3102  1343  1C03               	skipc
  3103  1344  03D8               	decf	___lwmod@dividend+1,f
  3104  1345  02D8               	subwf	___lwmod@dividend+1,f
  3105  1346                     l3210:	
  3106  1346  3001               	movlw	1
  3107  1347                     u2415:	
  3108  1347  1003               	clrc
  3109  1348  0CD6               	rrf	___lwmod@divisor+1,f
  3110  1349  0CD5               	rrf	___lwmod@divisor,f
  3111  134A  3EFF               	addlw	-1
  3112  134B  1D03               	skipz
  3113  134C  2B47               	goto	u2415
  3114  134D  3001               	movlw	1
  3115  134E  02DA               	subwf	___lwmod@counter,f
  3116  134F  1D03               	btfss	3,2
  3117  1350  2B38               	goto	l3206
  3118  1351                     l3214:	
  3119  1351  0858               	movf	___lwmod@dividend+1,w
  3120  1352  00D6               	movwf	?___lwmod+1
  3121  1353  0857               	movf	___lwmod@dividend,w
  3122  1354  00D5               	movwf	?___lwmod
  3123  1355  0008               	return
  3124  1356                     __end_of___lwmod:	
  3125                           
  3126                           	psect	text12
  3127  1437                     __ptext12:	
  3128 ;; *************** function ___lwdiv *****************
  3129 ;; Defined at:
  3130 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\lwdiv.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;  divisor         2    0[BANK0 ] unsigned int 
  3133 ;;  dividend        2    2[BANK0 ] unsigned int 
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;  quotient        2    5[BANK0 ] unsigned int 
  3136 ;;  counter         1    7[BANK0 ] unsigned char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  2    0[BANK0 ] unsigned int 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3146 ;;      Params:         0       4       0       0       0
  3147 ;;      Locals:         0       3       0       0       0
  3148 ;;      Temps:          0       1       0       0       0
  3149 ;;      Totals:         0       8       0       0       0
  3150 ;;Total ram usage:        8 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    2
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_Write_EEPROM
  3157 ;;		_Write_EEPROM_Price
  3158 ;;		_sprintf
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           
  3163                           ;psect for function ___lwdiv
  3164  1437                     ___lwdiv:	
  3165                           
  3166                           ;incstack = 0
  3167                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3168  1437  1283               	bcf	3,5	;RP0=0, select bank0
  3169  1438  1303               	bcf	3,6	;RP1=0, select bank0
  3170  1439  01D2               	clrf	___lwdiv@quotient
  3171  143A  01D3               	clrf	___lwdiv@quotient+1
  3172  143B  084D               	movf	___lwdiv@divisor,w
  3173  143C  044E               	iorwf	___lwdiv@divisor+1,w
  3174  143D  1903               	btfsc	3,2
  3175  143E  2C70               	goto	l3192
  3176  143F  01D4               	clrf	___lwdiv@counter
  3177  1440  0AD4               	incf	___lwdiv@counter,f
  3178  1441                     l3180:	
  3179  1441  1BCE               	btfsc	___lwdiv@divisor+1,7
  3180  1442  2C4F               	goto	l3182
  3181  1443  3001               	movlw	1
  3182  1444                     u2315:	
  3183  1444  1003               	clrc
  3184  1445  0DCD               	rlf	___lwdiv@divisor,f
  3185  1446  0DCE               	rlf	___lwdiv@divisor+1,f
  3186  1447  3EFF               	addlw	-1
  3187  1448  1D03               	skipz
  3188  1449  2C44               	goto	u2315
  3189  144A  3001               	movlw	1
  3190  144B  00D1               	movwf	??___lwdiv
  3191  144C  0851               	movf	??___lwdiv,w
  3192  144D  07D4               	addwf	___lwdiv@counter,f
  3193  144E  2C41               	goto	l3180
  3194  144F                     l3182:	
  3195  144F  3001               	movlw	1
  3196  1450                     u2335:	
  3197  1450  1003               	clrc
  3198  1451  0DD2               	rlf	___lwdiv@quotient,f
  3199  1452  0DD3               	rlf	___lwdiv@quotient+1,f
  3200  1453  3EFF               	addlw	-1
  3201  1454  1D03               	skipz
  3202  1455  2C50               	goto	u2335
  3203  1456  084E               	movf	___lwdiv@divisor+1,w
  3204  1457  0250               	subwf	___lwdiv@dividend+1,w
  3205  1458  1D03               	skipz
  3206  1459  2C5C               	goto	u2345
  3207  145A  084D               	movf	___lwdiv@divisor,w
  3208  145B  024F               	subwf	___lwdiv@dividend,w
  3209  145C                     u2345:	
  3210  145C  1C03               	skipc
  3211  145D  2C65               	goto	l3188
  3212  145E  084D               	movf	___lwdiv@divisor,w
  3213  145F  02CF               	subwf	___lwdiv@dividend,f
  3214  1460  084E               	movf	___lwdiv@divisor+1,w
  3215  1461  1C03               	skipc
  3216  1462  03D0               	decf	___lwdiv@dividend+1,f
  3217  1463  02D0               	subwf	___lwdiv@dividend+1,f
  3218  1464  1452               	bsf	___lwdiv@quotient,0
  3219  1465                     l3188:	
  3220  1465  3001               	movlw	1
  3221  1466                     u2355:	
  3222  1466  1003               	clrc
  3223  1467  0CCE               	rrf	___lwdiv@divisor+1,f
  3224  1468  0CCD               	rrf	___lwdiv@divisor,f
  3225  1469  3EFF               	addlw	-1
  3226  146A  1D03               	skipz
  3227  146B  2C66               	goto	u2355
  3228  146C  3001               	movlw	1
  3229  146D  02D4               	subwf	___lwdiv@counter,f
  3230  146E  1D03               	btfss	3,2
  3231  146F  2C4F               	goto	l3182
  3232  1470                     l3192:	
  3233  1470  0853               	movf	___lwdiv@quotient+1,w
  3234  1471  00CE               	movwf	?___lwdiv+1
  3235  1472  0852               	movf	___lwdiv@quotient,w
  3236  1473  00CD               	movwf	?___lwdiv
  3237  1474  0008               	return
  3238  1475                     __end_of___lwdiv:	
  3239                           
  3240                           	psect	text13
  3241  14B8                     __ptext13:	
  3242 ;; *************** function _Set_Channel *****************
  3243 ;; Defined at:
  3244 ;;		line 1226 in file "newmain.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  data            2    0[BANK0 ] unsigned int 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;		None
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		wreg, status,2, status,0
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3258 ;;      Params:         0       2       0       0       0
  3259 ;;      Locals:         0       0       0       0       0
  3260 ;;      Temps:          0       0       0       0       0
  3261 ;;      Totals:         0       2       0       0       0
  3262 ;;Total ram usage:        2 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    2
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		_main
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           
  3273                           ;psect for function _Set_Channel
  3274  14B8                     _Set_Channel:	
  3275                           
  3276                           ;newmain.c: 1228: if(data==10)
  3277                           
  3278                           ;incstack = 0
  3279                           ; Regs used in _Set_Channel: [wreg+status,2+status,0]
  3280  14B8  300A               	movlw	10
  3281  14B9  1283               	bcf	3,5	;RP0=0, select bank0
  3282  14BA  1303               	bcf	3,6	;RP1=0, select bank0
  3283  14BB  064D               	xorwf	Set_Channel@data,w
  3284  14BC  044E               	iorwf	Set_Channel@data+1,w
  3285  14BD  1D03               	btfss	3,2
  3286  14BE  2CC4               	goto	l3524
  3287                           
  3288                           ;newmain.c: 1229: {
  3289                           ;newmain.c: 1230: RB2=0;RB3=1;RB4=1;RB5=1;
  3290  14BF  1106               	bcf	6,2	;volatile
  3291  14C0  1586               	bsf	6,3	;volatile
  3292  14C1  1606               	bsf	6,4	;volatile
  3293  14C2  1686               	bsf	6,5	;volatile
  3294                           
  3295                           ;newmain.c: 1231: }
  3296  14C3  0008               	return
  3297  14C4                     l3524:	
  3298                           
  3299                           ;newmain.c: 1232: else if(data>=20 && data<=40)
  3300  14C4  3000               	movlw	0
  3301  14C5  024E               	subwf	Set_Channel@data+1,w
  3302  14C6  3014               	movlw	20
  3303  14C7  1903               	skipnz
  3304  14C8  024D               	subwf	Set_Channel@data,w
  3305  14C9  1C03               	skipc
  3306  14CA  2CD7               	goto	l3530
  3307  14CB  3000               	movlw	0
  3308  14CC  024E               	subwf	Set_Channel@data+1,w
  3309  14CD  3029               	movlw	41
  3310  14CE  1903               	skipnz
  3311  14CF  024D               	subwf	Set_Channel@data,w
  3312  14D0  1803               	skipnc
  3313  14D1  2CD7               	goto	l3530
  3314                           
  3315                           ;newmain.c: 1233: {
  3316                           ;newmain.c: 1234: RB2=0;RB3=0;RB4=1;RB5=1;
  3317  14D2  1106               	bcf	6,2	;volatile
  3318  14D3  1186               	bcf	6,3	;volatile
  3319  14D4  1606               	bsf	6,4	;volatile
  3320  14D5  1686               	bsf	6,5	;volatile
  3321                           
  3322                           ;newmain.c: 1235: }
  3323  14D6  0008               	return
  3324  14D7                     l3530:	
  3325                           
  3326                           ;newmain.c: 1236: else if(data>=50 && data<=90)
  3327  14D7  3000               	movlw	0
  3328  14D8  024E               	subwf	Set_Channel@data+1,w
  3329  14D9  3032               	movlw	50
  3330  14DA  1903               	skipnz
  3331  14DB  024D               	subwf	Set_Channel@data,w
  3332  14DC  1C03               	skipc
  3333  14DD  2CEA               	goto	l3536
  3334  14DE  3000               	movlw	0
  3335  14DF  024E               	subwf	Set_Channel@data+1,w
  3336  14E0  305B               	movlw	91
  3337  14E1  1903               	skipnz
  3338  14E2  024D               	subwf	Set_Channel@data,w
  3339  14E3  1803               	skipnc
  3340  14E4  2CEA               	goto	l3536
  3341                           
  3342                           ;newmain.c: 1237: {
  3343                           ;newmain.c: 1238: RB2=0;RB3=0;RB4=0;RB5=1;
  3344  14E5  1106               	bcf	6,2	;volatile
  3345  14E6  1186               	bcf	6,3	;volatile
  3346  14E7  1206               	bcf	6,4	;volatile
  3347  14E8  1686               	bsf	6,5	;volatile
  3348                           
  3349                           ;newmain.c: 1239: }
  3350  14E9  0008               	return
  3351  14EA                     l3536:	
  3352                           
  3353                           ;newmain.c: 1240: else if(data>=100)
  3354  14EA  3000               	movlw	0
  3355  14EB  024E               	subwf	Set_Channel@data+1,w
  3356  14EC  3064               	movlw	100
  3357  14ED  1903               	skipnz
  3358  14EE  024D               	subwf	Set_Channel@data,w
  3359  14EF  1C03               	skipc
  3360  14F0  2CF6               	goto	l697
  3361                           
  3362                           ;newmain.c: 1241: {
  3363                           ;newmain.c: 1242: RB2=0;RB3=0;RB4=0;RB5=0;
  3364  14F1  1106               	bcf	6,2	;volatile
  3365  14F2  1186               	bcf	6,3	;volatile
  3366  14F3  1206               	bcf	6,4	;volatile
  3367  14F4  1286               	bcf	6,5	;volatile
  3368                           
  3369                           ;newmain.c: 1243: }
  3370  14F5  0008               	return
  3371  14F6                     l697:	
  3372                           
  3373                           ;newmain.c: 1244: else
  3374                           ;newmain.c: 1245: {
  3375                           ;newmain.c: 1246: RB2=1;RB3=1;RB4=1;RB5=1;
  3376  14F6  1506               	bsf	6,2	;volatile
  3377  14F7  1586               	bsf	6,3	;volatile
  3378  14F8  1606               	bsf	6,4	;volatile
  3379  14F9  1686               	bsf	6,5	;volatile
  3380  14FA  0008               	return
  3381  14FB                     __end_of_Set_Channel:	
  3382                           
  3383                           	psect	text14
  3384  1556                     __ptext14:	
  3385 ;; *************** function _STOCK_EMPTY_ROUTINE *****************
  3386 ;; Defined at:
  3387 ;;		line 1212 in file "newmain.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;		None
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;		None
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3401 ;;      Params:         0       0       0       0       0
  3402 ;;      Locals:         0       0       0       0       0
  3403 ;;      Temps:          0       3       0       0       0
  3404 ;;      Totals:         0       3       0       0       0
  3405 ;;Total ram usage:        3 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; Hardware stack levels required when called:    5
  3408 ;; This function calls:
  3409 ;;		_LCD_Clear
  3410 ;;		_LCD_CmdWrite
  3411 ;;		_LCD_DisplayString
  3412 ;;		_buzzer
  3413 ;; This function is called by:
  3414 ;;		_main
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           
  3419                           ;psect for function _STOCK_EMPTY_ROUTINE
  3420  1556                     _STOCK_EMPTY_ROUTINE:	
  3421                           
  3422                           ;newmain.c: 1214: LCD_Clear();
  3423                           
  3424                           ;incstack = 0
  3425                           ; Regs used in _STOCK_EMPTY_ROUTINE: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  3426  1556  160A  158A  26F5  160A  118A  	fcall	_LCD_Clear
  3427                           
  3428                           ;newmain.c: 1215: LCD_DisplayString("  STOCK EMPTY!!  ");
  3429  155B  3041               	movlw	low (STR_37| (0+32768))
  3430  155C  1283               	bcf	3,5	;RP0=0, select bank0
  3431  155D  1303               	bcf	3,6	;RP1=0, select bank0
  3432  155E  00D0               	movwf	LCD_DisplayString@s
  3433  155F  3090               	movlw	high (STR_37| (0+32768))
  3434  1560  00D1               	movwf	LCD_DisplayString@s+1
  3435  1561  160A  118A  2272  160A  118A  	fcall	_LCD_DisplayString
  3436                           
  3437                           ;newmain.c: 1216: LCD_CmdWrite(0XC0);
  3438  1566  30C0               	movlw	192
  3439  1567  160A  158A  2762  160A  118A  	fcall	_LCD_CmdWrite
  3440                           
  3441                           ;newmain.c: 1217: LCD_DisplayString(" CHOOSE AGAIN...  ");
  3442  156C  301C               	movlw	low (STR_38| (0+32768))
  3443  156D  1283               	bcf	3,5	;RP0=0, select bank0
  3444  156E  1303               	bcf	3,6	;RP1=0, select bank0
  3445  156F  00D0               	movwf	LCD_DisplayString@s
  3446  1570  3090               	movlw	high (STR_38| (0+32768))
  3447  1571  00D1               	movwf	LCD_DisplayString@s+1
  3448  1572  160A  118A  2272  160A  118A  	fcall	_LCD_DisplayString
  3449                           
  3450                           ;newmain.c: 1218: buzzer(70);
  3451  1577  3046               	movlw	70
  3452  1578  1283               	bcf	3,5	;RP0=0, select bank0
  3453  1579  1303               	bcf	3,6	;RP1=0, select bank0
  3454  157A  00CD               	movwf	buzzer@a
  3455  157B  3000               	movlw	0
  3456  157C  00CE               	movwf	buzzer@a+1
  3457  157D  160A  158A  279C  160A  118A  	fcall	_buzzer
  3458                           
  3459                           ;newmain.c: 1219: _delay((unsigned long)((60)*(4000000/4000.0)));
  3460  1582  304E               	movlw	78
  3461  1583  1283               	bcf	3,5	;RP0=0, select bank0
  3462  1584  1303               	bcf	3,6	;RP1=0, select bank0
  3463  1585  00D3               	movwf	??_STOCK_EMPTY_ROUTINE+1
  3464  1586  30EA               	movlw	234
  3465  1587  00D2               	movwf	??_STOCK_EMPTY_ROUTINE
  3466  1588                     u4707:	
  3467  1588  0BD2               	decfsz	??_STOCK_EMPTY_ROUTINE,f
  3468  1589  2D88               	goto	u4707
  3469  158A  0BD3               	decfsz	??_STOCK_EMPTY_ROUTINE+1,f
  3470  158B  2D88               	goto	u4707
  3471  158C  0000               	nop
  3472                           
  3473                           ;newmain.c: 1220: buzzer(70);
  3474  158D  3046               	movlw	70
  3475  158E  1283               	bcf	3,5	;RP0=0, select bank0
  3476  158F  1303               	bcf	3,6	;RP1=0, select bank0
  3477  1590  00CD               	movwf	buzzer@a
  3478  1591  3000               	movlw	0
  3479  1592  00CE               	movwf	buzzer@a+1
  3480  1593  160A  158A  279C  160A  118A  	fcall	_buzzer
  3481                           
  3482                           ;newmain.c: 1221: _delay((unsigned long)((1500)*(4000000/4000.0)));
  3483  1598  3008               	movlw	8
  3484  1599  1283               	bcf	3,5	;RP0=0, select bank0
  3485  159A  1303               	bcf	3,6	;RP1=0, select bank0
  3486  159B  00D4               	movwf	??_STOCK_EMPTY_ROUTINE+2
  3487  159C  309D               	movlw	157
  3488  159D  00D3               	movwf	??_STOCK_EMPTY_ROUTINE+1
  3489  159E  3005               	movlw	5
  3490  159F  00D2               	movwf	??_STOCK_EMPTY_ROUTINE
  3491  15A0                     u4717:	
  3492  15A0  0BD2               	decfsz	??_STOCK_EMPTY_ROUTINE,f
  3493  15A1  2DA0               	goto	u4717
  3494  15A2  0BD3               	decfsz	??_STOCK_EMPTY_ROUTINE+1,f
  3495  15A3  2DA0               	goto	u4717
  3496  15A4  0BD4               	decfsz	??_STOCK_EMPTY_ROUTINE+2,f
  3497  15A5  2DA0               	goto	u4717
  3498                           
  3499                           ;newmain.c: 1222: buzzer(50);
  3500  15A6  3032               	movlw	50
  3501  15A7  1283               	bcf	3,5	;RP0=0, select bank0
  3502  15A8  1303               	bcf	3,6	;RP1=0, select bank0
  3503  15A9  00CD               	movwf	buzzer@a
  3504  15AA  3000               	movlw	0
  3505  15AB  00CE               	movwf	buzzer@a+1
  3506  15AC  160A  158A  279C  160A  118A  	fcall	_buzzer
  3507                           
  3508                           ;newmain.c: 1223: LCD_Clear();
  3509  15B1  160A  158A  26F5   	fcall	_LCD_Clear
  3510  15B4  0008               	return
  3511  15B5                     __end_of_STOCK_EMPTY_ROUTINE:	
  3512                           
  3513                           	psect	text15
  3514  1F9C                     __ptext15:	
  3515 ;; *************** function _buzzer *****************
  3516 ;; Defined at:
  3517 ;;		line 1173 in file "newmain.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;  a               2    0[BANK0 ] unsigned int 
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;  i               2    3[BANK0 ] int 
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      void 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3531 ;;      Params:         0       2       0       0       0
  3532 ;;      Locals:         0       2       0       0       0
  3533 ;;      Temps:          0       1       0       0       0
  3534 ;;      Totals:         0       5       0       0       0
  3535 ;;Total ram usage:        5 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; Hardware stack levels required when called:    2
  3538 ;; This function calls:
  3539 ;;		Nothing
  3540 ;; This function is called by:
  3541 ;;		_main
  3542 ;;		_STOCK_EMPTY_ROUTINE
  3543 ;;		_escprocess
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           
  3548                           ;psect for function _buzzer
  3549  1F9C                     _buzzer:	
  3550                           
  3551                           ;newmain.c: 1175: RD1=1;
  3552                           
  3553                           ;incstack = 0
  3554                           ; Regs used in _buzzer: [wreg+status,2]
  3555  1F9C  1283               	bcf	3,5	;RP0=0, select bank0
  3556  1F9D  1303               	bcf	3,6	;RP1=0, select bank0
  3557  1F9E  1488               	bsf	8,1	;volatile
  3558                           
  3559                           ;newmain.c: 1176: for(int i=0;i<=a;i++)
  3560  1F9F  01D0               	clrf	buzzer@i
  3561  1FA0  01D1               	clrf	buzzer@i+1
  3562  1FA1                     l670:	
  3563  1FA1  0851               	movf	buzzer@i+1,w
  3564  1FA2  024E               	subwf	buzzer@a+1,w
  3565  1FA3  1D03               	skipz
  3566  1FA4  2FA7               	goto	u2445
  3567  1FA5  0850               	movf	buzzer@i,w
  3568  1FA6  024D               	subwf	buzzer@a,w
  3569  1FA7                     u2445:	
  3570  1FA7  1C03               	btfss	3,0
  3571  1FA8  2FBA               	goto	l672
  3572                           
  3573                           ;newmain.c: 1177: _delay((unsigned long)((1)*(4000000/4000.0)));
  3574  1FA9  30C7               	movlw	199
  3575  1FAA  1283               	bcf	3,5	;RP0=0, select bank0
  3576  1FAB  1303               	bcf	3,6	;RP1=0, select bank0
  3577  1FAC  00CF               	movwf	??_buzzer
  3578  1FAD                     u4727:	
  3579  1FAD  2FAE               	nop2
  3580  1FAE  0BCF               	decfsz	??_buzzer,f
  3581  1FAF  2FAD               	goto	u4727
  3582  1FB0  2FB1               	nop2
  3583  1FB1  3001               	movlw	1
  3584  1FB2  1283               	bcf	3,5	;RP0=0, select bank0
  3585  1FB3  1303               	bcf	3,6	;RP1=0, select bank0
  3586  1FB4  07D0               	addwf	buzzer@i,f
  3587  1FB5  1803               	skipnc
  3588  1FB6  0AD1               	incf	buzzer@i+1,f
  3589  1FB7  3000               	movlw	0
  3590  1FB8  07D1               	addwf	buzzer@i+1,f
  3591  1FB9  2FA1               	goto	l670
  3592  1FBA                     l672:	
  3593                           
  3594                           ;newmain.c: 1178: RD1=0;
  3595  1FBA  1088               	bcf	8,1	;volatile
  3596  1FBB  0008               	return
  3597  1FBC                     __end_of_buzzer:	
  3598                           
  3599                           	psect	text16
  3600  1272                     __ptext16:	
  3601 ;; *************** function _LCD_DisplayString *****************
  3602 ;; Defined at:
  3603 ;;		line 1129 in file "newmain.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  s               2    3[BANK0 ] PTR const unsigned char 
  3606 ;;		 -> STR_38(19), STR_37(18), dispvalue(10), STR_34(17), 
  3607 ;;		 -> STR_33(11), STR_32(5), STR_31(9), STR_30(10), 
  3608 ;;		 -> STR_29(7), STR_28(17), STR_27(16), STR_26(18), 
  3609 ;;		 -> STR_25(17), STR_24(3), STR_23(17), STR_22(17), 
  3610 ;;		 -> STR_21(17), STR_20(17), STR_19(18), STR_18(18), 
  3611 ;;		 -> STR_17(17), STR_16(16), STR_15(16), STR_14(17), 
  3612 ;;		 -> STR_13(3), STR_12(12), STR_11(17), STR_10(4), 
  3613 ;;		 -> STR_9(6), STR_8(17), STR_7(16), STR_6(17), 
  3614 ;;		 -> STR_5(17), STR_4(18), STR_3(17), STR_2(18), 
  3615 ;;		 -> STR_1(17), 
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;		None
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      void 
  3620 ;; Registers used:
  3621 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3627 ;;      Params:         0       2       0       0       0
  3628 ;;      Locals:         0       0       0       0       0
  3629 ;;      Temps:          0       0       0       0       0
  3630 ;;      Totals:         0       2       0       0       0
  3631 ;;Total ram usage:        2 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; Hardware stack levels required when called:    4
  3634 ;; This function calls:
  3635 ;;		_LCD_DataWrite
  3636 ;; This function is called by:
  3637 ;;		_main
  3638 ;;		_display
  3639 ;;		_display_price
  3640 ;;		_STOCK_EMPTY_ROUTINE
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           
  3645                           ;psect for function _LCD_DisplayString
  3646  1272                     _LCD_DisplayString:	
  3647  1272                     l3224:	
  3648                           ;newmain.c: 1131: while(*s)
  3649                           
  3650                           ;incstack = 0
  3651                           ; Regs used in _LCD_DisplayString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3652                           
  3653  1272  1283               	bcf	3,5	;RP0=0, select bank0
  3654  1273  1303               	bcf	3,6	;RP1=0, select bank0
  3655  1274  0851               	movf	LCD_DisplayString@s+1,w
  3656  1275  00FF               	movwf	127
  3657  1276  0850               	movf	LCD_DisplayString@s,w
  3658  1277  0084               	movwf	4
  3659  1278  160A  118A  2000  160A  118A  	fcall	stringtab
  3660  127D  3A00               	xorlw	0
  3661  127E  1903               	btfsc	3,2
  3662  127F  0008               	return
  3663                           
  3664                           ;newmain.c: 1132: LCD_DataWrite(*s++);
  3665  1280  1283               	bcf	3,5	;RP0=0, select bank0
  3666  1281  1303               	bcf	3,6	;RP1=0, select bank0
  3667  1282  0851               	movf	LCD_DisplayString@s+1,w
  3668  1283  00FF               	movwf	127
  3669  1284  0850               	movf	LCD_DisplayString@s,w
  3670  1285  0084               	movwf	4
  3671  1286  160A  118A  2000  160A  118A  	fcall	stringtab
  3672  128B  160A  158A  277F  160A  118A  	fcall	_LCD_DataWrite
  3673  1290  3001               	movlw	1
  3674  1291  1283               	bcf	3,5	;RP0=0, select bank0
  3675  1292  1303               	bcf	3,6	;RP1=0, select bank0
  3676  1293  07D0               	addwf	LCD_DisplayString@s,f
  3677  1294  1803               	skipnc
  3678  1295  0AD1               	incf	LCD_DisplayString@s+1,f
  3679  1296  2A72               	goto	l3224
  3680  1297                     __end_of_LCD_DisplayString:	
  3681                           
  3682                           	psect	text17
  3683  1EF5                     __ptext17:	
  3684 ;; *************** function _LCD_Clear *****************
  3685 ;; Defined at:
  3686 ;;		line 1136 in file "newmain.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;		None
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;		None
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1    wreg      void 
  3693 ;; Registers used:
  3694 ;;		wreg, status,2, status,0, pclath, cstack
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3700 ;;      Params:         0       0       0       0       0
  3701 ;;      Locals:         0       0       0       0       0
  3702 ;;      Temps:          0       2       0       0       0
  3703 ;;      Totals:         0       2       0       0       0
  3704 ;;Total ram usage:        2 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; Hardware stack levels required when called:    4
  3707 ;; This function calls:
  3708 ;;		_LCD_CmdWrite
  3709 ;; This function is called by:
  3710 ;;		_main
  3711 ;;		_STOCK_EMPTY_ROUTINE
  3712 ;;		_escprocess
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           
  3717                           ;psect for function _LCD_Clear
  3718  1EF5                     _LCD_Clear:	
  3719                           
  3720                           ;newmain.c: 1138: LCD_CmdWrite(0x01);
  3721                           
  3722                           ;incstack = 0
  3723                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  3724  1EF5  3001               	movlw	1
  3725  1EF6  160A  158A  2762  160A  158A  	fcall	_LCD_CmdWrite
  3726                           
  3727                           ;newmain.c: 1139: _delay((unsigned long)((2)*(4000000/4000.0)));
  3728  1EFB  3003               	movlw	3
  3729  1EFC  1283               	bcf	3,5	;RP0=0, select bank0
  3730  1EFD  1303               	bcf	3,6	;RP1=0, select bank0
  3731  1EFE  00D1               	movwf	??_LCD_Clear+1
  3732  1EFF  3097               	movlw	151
  3733  1F00  00D0               	movwf	??_LCD_Clear
  3734  1F01                     u4737:	
  3735  1F01  0BD0               	decfsz	??_LCD_Clear,f
  3736  1F02  2F01               	goto	u4737
  3737  1F03  0BD1               	decfsz	??_LCD_Clear+1,f
  3738  1F04  2F01               	goto	u4737
  3739  1F05  0008               	return
  3740  1F06                     __end_of_LCD_Clear:	
  3741                           
  3742                           	psect	text18
  3743  1615                     __ptext18:	
  3744 ;; *************** function _Read_EEPROM_Price *****************
  3745 ;; Defined at:
  3746 ;;		line 1202 in file "newmain.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;  b1              1    wreg     unsigned char 
  3749 ;;  b2              1    6[BANK0 ] unsigned char 
  3750 ;;  b3              1    7[BANK0 ] unsigned char 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  b1              1   12[BANK0 ] unsigned char 
  3753 ;;  c3              2   17[BANK0 ] unsigned int 
  3754 ;;  c2              2   15[BANK0 ] unsigned int 
  3755 ;;  c1              2   13[BANK0 ] unsigned int 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  2    6[BANK0 ] unsigned int 
  3758 ;; Registers used:
  3759 ;;		wreg, status,2, status,0, pclath, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3765 ;;      Params:         0       2       0       0       0
  3766 ;;      Locals:         0       7       0       0       0
  3767 ;;      Temps:          0       4       0       0       0
  3768 ;;      Totals:         0      13       0       0       0
  3769 ;;Total ram usage:       13 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:    3
  3772 ;; This function calls:
  3773 ;;		___wmul
  3774 ;;		_eeprom_read
  3775 ;; This function is called by:
  3776 ;;		_main
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           
  3781                           ;psect for function _Read_EEPROM_Price
  3782  1615                     _Read_EEPROM_Price:	
  3783                           
  3784                           ;incstack = 0
  3785                           ; Regs used in _Read_EEPROM_Price: [wreg+status,2+status,0+pclath+cstack]
  3786                           ;Read_EEPROM_Price@b1 stored from wreg
  3787  1615  1283               	bcf	3,5	;RP0=0, select bank0
  3788  1616  1303               	bcf	3,6	;RP1=0, select bank0
  3789  1617  00D9               	movwf	Read_EEPROM_Price@b1
  3790                           
  3791                           ;newmain.c: 1204: unsigned int c1=0,c2=0,c3=0;
  3792  1618  01DA               	clrf	Read_EEPROM_Price@c1
  3793  1619  01DB               	clrf	Read_EEPROM_Price@c1+1
  3794  161A  01DC               	clrf	Read_EEPROM_Price@c2
  3795  161B  01DD               	clrf	Read_EEPROM_Price@c2+1
  3796  161C  01DE               	clrf	Read_EEPROM_Price@c3
  3797  161D  01DF               	clrf	Read_EEPROM_Price@c3+1
  3798                           
  3799                           ;newmain.c: 1205: c1=eeprom_read(b1);
  3800  161E  0859               	movf	Read_EEPROM_Price@b1,w
  3801  161F  160A  118A  2229  160A  118A  	fcall	_eeprom_read
  3802  1624  1283               	bcf	3,5	;RP0=0, select bank0
  3803  1625  1303               	bcf	3,6	;RP1=0, select bank0
  3804  1626  00D5               	movwf	??_Read_EEPROM_Price
  3805  1627  01D6               	clrf	??_Read_EEPROM_Price+1
  3806  1628  0855               	movf	??_Read_EEPROM_Price,w
  3807  1629  00DA               	movwf	Read_EEPROM_Price@c1
  3808  162A  0856               	movf	??_Read_EEPROM_Price+1,w
  3809  162B  00DB               	movwf	Read_EEPROM_Price@c1+1
  3810                           
  3811                           ;newmain.c: 1206: c2=eeprom_read(b2);
  3812  162C  0853               	movf	Read_EEPROM_Price@b2,w
  3813  162D  160A  118A  2229  160A  118A  	fcall	_eeprom_read
  3814  1632  1283               	bcf	3,5	;RP0=0, select bank0
  3815  1633  1303               	bcf	3,6	;RP1=0, select bank0
  3816  1634  00D5               	movwf	??_Read_EEPROM_Price
  3817  1635  01D6               	clrf	??_Read_EEPROM_Price+1
  3818  1636  0855               	movf	??_Read_EEPROM_Price,w
  3819  1637  00DC               	movwf	Read_EEPROM_Price@c2
  3820  1638  0856               	movf	??_Read_EEPROM_Price+1,w
  3821  1639  00DD               	movwf	Read_EEPROM_Price@c2+1
  3822                           
  3823                           ;newmain.c: 1207: c3=eeprom_read(b3);
  3824  163A  0854               	movf	Read_EEPROM_Price@b3,w
  3825  163B  160A  118A  2229  160A  118A  	fcall	_eeprom_read
  3826  1640  1283               	bcf	3,5	;RP0=0, select bank0
  3827  1641  1303               	bcf	3,6	;RP1=0, select bank0
  3828  1642  00D5               	movwf	??_Read_EEPROM_Price
  3829  1643  01D6               	clrf	??_Read_EEPROM_Price+1
  3830  1644  0855               	movf	??_Read_EEPROM_Price,w
  3831  1645  00DE               	movwf	Read_EEPROM_Price@c3
  3832  1646  0856               	movf	??_Read_EEPROM_Price+1,w
  3833  1647  00DF               	movwf	Read_EEPROM_Price@c3+1
  3834                           
  3835                           ;newmain.c: 1208: return ((c1*100)+(c2*10)+c3);
  3836  1648  085B               	movf	Read_EEPROM_Price@c1+1,w
  3837  1649  00CE               	movwf	___wmul@multiplier+1
  3838  164A  085A               	movf	Read_EEPROM_Price@c1,w
  3839  164B  00CD               	movwf	___wmul@multiplier
  3840  164C  3064               	movlw	100
  3841  164D  00CF               	movwf	___wmul@multiplicand
  3842  164E  3000               	movlw	0
  3843  164F  00D0               	movwf	___wmul@multiplicand+1
  3844  1650  160A  158A  27DD  160A  118A  	fcall	___wmul
  3845  1655  1283               	bcf	3,5	;RP0=0, select bank0
  3846  1656  1303               	bcf	3,6	;RP1=0, select bank0
  3847  1657  084D               	movf	?___wmul,w
  3848  1658  00D5               	movwf	??_Read_EEPROM_Price
  3849  1659  084E               	movf	?___wmul+1,w
  3850  165A  00D6               	movwf	??_Read_EEPROM_Price+1
  3851  165B  085D               	movf	Read_EEPROM_Price@c2+1,w
  3852  165C  00CE               	movwf	___wmul@multiplier+1
  3853  165D  085C               	movf	Read_EEPROM_Price@c2,w
  3854  165E  00CD               	movwf	___wmul@multiplier
  3855  165F  300A               	movlw	10
  3856  1660  00CF               	movwf	___wmul@multiplicand
  3857  1661  3000               	movlw	0
  3858  1662  00D0               	movwf	___wmul@multiplicand+1
  3859  1663  160A  158A  27DD   	fcall	___wmul
  3860  1666  1283               	bcf	3,5	;RP0=0, select bank0
  3861  1667  1303               	bcf	3,6	;RP1=0, select bank0
  3862  1668  084D               	movf	?___wmul,w
  3863  1669  0755               	addwf	??_Read_EEPROM_Price,w
  3864  166A  00D7               	movwf	??_Read_EEPROM_Price+2
  3865  166B  084E               	movf	?___wmul+1,w
  3866  166C  1803               	skipnc
  3867  166D  0A4E               	incf	?___wmul+1,w
  3868  166E  0756               	addwf	??_Read_EEPROM_Price+1,w
  3869  166F  00D8               	movwf	??_Read_EEPROM_Price+3
  3870  1670  085E               	movf	Read_EEPROM_Price@c3,w
  3871  1671  0757               	addwf	??_Read_EEPROM_Price+2,w
  3872  1672  00D3               	movwf	?_Read_EEPROM_Price
  3873  1673  085F               	movf	Read_EEPROM_Price@c3+1,w
  3874  1674  1803               	skipnc
  3875  1675  0A5F               	incf	Read_EEPROM_Price@c3+1,w
  3876  1676  0758               	addwf	??_Read_EEPROM_Price+3,w
  3877  1677  00D4               	movwf	?_Read_EEPROM_Price+1
  3878  1678  0008               	return
  3879  1679                     __end_of_Read_EEPROM_Price:	
  3880                           
  3881                           	psect	text19
  3882  13FE                     __ptext19:	
  3883 ;; *************** function _Read_EEPROM *****************
  3884 ;; Defined at:
  3885 ;;		line 1188 in file "newmain.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;  b1              1    wreg     unsigned char 
  3888 ;;  b2              1    6[BANK0 ] unsigned char 
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;  b1              1   10[BANK0 ] unsigned char 
  3891 ;;  c2              2   13[BANK0 ] unsigned int 
  3892 ;;  c1              2   11[BANK0 ] unsigned int 
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  2    6[BANK0 ] unsigned int 
  3895 ;; Registers used:
  3896 ;;		wreg, status,2, status,0, pclath, cstack
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3902 ;;      Params:         0       2       0       0       0
  3903 ;;      Locals:         0       5       0       0       0
  3904 ;;      Temps:          0       2       0       0       0
  3905 ;;      Totals:         0       9       0       0       0
  3906 ;;Total ram usage:        9 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; Hardware stack levels required when called:    3
  3909 ;; This function calls:
  3910 ;;		___wmul
  3911 ;;		_eeprom_read
  3912 ;; This function is called by:
  3913 ;;		_main
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           
  3918                           ;psect for function _Read_EEPROM
  3919  13FE                     _Read_EEPROM:	
  3920                           
  3921                           ;incstack = 0
  3922                           ; Regs used in _Read_EEPROM: [wreg+status,2+status,0+pclath+cstack]
  3923                           ;Read_EEPROM@b1 stored from wreg
  3924  13FE  1283               	bcf	3,5	;RP0=0, select bank0
  3925  13FF  1303               	bcf	3,6	;RP1=0, select bank0
  3926  1400  00D7               	movwf	Read_EEPROM@b1
  3927                           
  3928                           ;newmain.c: 1190: unsigned int c1=0,c2=0;
  3929  1401  01D8               	clrf	Read_EEPROM@c1
  3930  1402  01D9               	clrf	Read_EEPROM@c1+1
  3931  1403  01DA               	clrf	Read_EEPROM@c2
  3932  1404  01DB               	clrf	Read_EEPROM@c2+1
  3933                           
  3934                           ;newmain.c: 1191: c1=eeprom_read(b1);
  3935  1405  0857               	movf	Read_EEPROM@b1,w
  3936  1406  160A  118A  2229  160A  118A  	fcall	_eeprom_read
  3937  140B  1283               	bcf	3,5	;RP0=0, select bank0
  3938  140C  1303               	bcf	3,6	;RP1=0, select bank0
  3939  140D  00D5               	movwf	??_Read_EEPROM
  3940  140E  01D6               	clrf	??_Read_EEPROM+1
  3941  140F  0855               	movf	??_Read_EEPROM,w
  3942  1410  00D8               	movwf	Read_EEPROM@c1
  3943  1411  0856               	movf	??_Read_EEPROM+1,w
  3944  1412  00D9               	movwf	Read_EEPROM@c1+1
  3945                           
  3946                           ;newmain.c: 1192: c2=eeprom_read(b2);
  3947  1413  0853               	movf	Read_EEPROM@b2,w
  3948  1414  160A  118A  2229  160A  118A  	fcall	_eeprom_read
  3949  1419  1283               	bcf	3,5	;RP0=0, select bank0
  3950  141A  1303               	bcf	3,6	;RP1=0, select bank0
  3951  141B  00D5               	movwf	??_Read_EEPROM
  3952  141C  01D6               	clrf	??_Read_EEPROM+1
  3953  141D  0855               	movf	??_Read_EEPROM,w
  3954  141E  00DA               	movwf	Read_EEPROM@c2
  3955  141F  0856               	movf	??_Read_EEPROM+1,w
  3956  1420  00DB               	movwf	Read_EEPROM@c2+1
  3957                           
  3958                           ;newmain.c: 1193: return ((c1*10)+c2);
  3959  1421  0859               	movf	Read_EEPROM@c1+1,w
  3960  1422  00CE               	movwf	___wmul@multiplier+1
  3961  1423  0858               	movf	Read_EEPROM@c1,w
  3962  1424  00CD               	movwf	___wmul@multiplier
  3963  1425  300A               	movlw	10
  3964  1426  00CF               	movwf	___wmul@multiplicand
  3965  1427  3000               	movlw	0
  3966  1428  00D0               	movwf	___wmul@multiplicand+1
  3967  1429  160A  158A  27DD   	fcall	___wmul
  3968  142C  1283               	bcf	3,5	;RP0=0, select bank0
  3969  142D  1303               	bcf	3,6	;RP1=0, select bank0
  3970  142E  085A               	movf	Read_EEPROM@c2,w
  3971  142F  074D               	addwf	?___wmul,w
  3972  1430  00D3               	movwf	?_Read_EEPROM
  3973  1431  085B               	movf	Read_EEPROM@c2+1,w
  3974  1432  1803               	skipnc
  3975  1433  0A5B               	incf	Read_EEPROM@c2+1,w
  3976  1434  074E               	addwf	?___wmul+1,w
  3977  1435  00D4               	movwf	?_Read_EEPROM+1
  3978  1436  0008               	return
  3979  1437                     __end_of_Read_EEPROM:	
  3980                           
  3981                           	psect	text20
  3982  1229                     __ptext20:	
  3983 ;; *************** function _eeprom_read *****************
  3984 ;; Defined at:
  3985 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.44\sources\pic\eeread.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;  addr            1    wreg     unsigned char 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  addr            1    1[BANK0 ] unsigned char 
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      unsigned char 
  3992 ;; Registers used:
  3993 ;;		wreg, status,2, status,0
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3999 ;;      Params:         0       0       0       0       0
  4000 ;;      Locals:         0       1       0       0       0
  4001 ;;      Temps:          0       1       0       0       0
  4002 ;;      Totals:         0       2       0       0       0
  4003 ;;Total ram usage:        2 bytes
  4004 ;; Hardware stack levels used:    1
  4005 ;; Hardware stack levels required when called:    2
  4006 ;; This function calls:
  4007 ;;		Nothing
  4008 ;; This function is called by:
  4009 ;;		_Read_EEPROM
  4010 ;;		_Read_EEPROM_Price
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           
  4015                           ;psect for function _eeprom_read
  4016  1229                     _eeprom_read:	
  4017                           
  4018                           ;incstack = 0
  4019                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4020                           ;eeprom_read@addr stored from wreg
  4021  1229  1283               	bcf	3,5	;RP0=0, select bank0
  4022  122A  1303               	bcf	3,6	;RP1=0, select bank0
  4023  122B  00CE               	movwf	eeprom_read@addr
  4024  122C  2A2F               	goto	l750
  4025  122D                     u2601:	
  4026  122D  1283               	bcf	3,5	;RP0=0, select bank0
  4027  122E  1303               	bcf	3,6	;RP1=0, select bank0
  4028  122F                     l750:	
  4029  122F  0064               	clrwdt	;# 
  4030  1230  1683               	bsf	3,5	;RP0=1, select bank3
  4031  1231  1703               	bsf	3,6	;RP1=1, select bank3
  4032  1232  188C               	btfsc	12,1	;volsfr
  4033  1233  2A2D               	goto	u2601
  4034  1234  1283               	bcf	3,5	;RP0=0, select bank0
  4035  1235  1303               	bcf	3,6	;RP1=0, select bank0
  4036  1236  084E               	movf	eeprom_read@addr,w
  4037  1237  1283               	bcf	3,5	;RP0=0, select bank2
  4038  1238  1703               	bsf	3,6	;RP1=1, select bank2
  4039  1239  008D               	movwf	13	;volatile
  4040  123A  303F               	movlw	63
  4041  123B  1283               	bcf	3,5	;RP0=0, select bank0
  4042  123C  1303               	bcf	3,6	;RP1=0, select bank0
  4043  123D  00CD               	movwf	??_eeprom_read
  4044  123E  084D               	movf	??_eeprom_read,w
  4045  123F  1683               	bsf	3,5	;RP0=1, select bank3
  4046  1240  1703               	bsf	3,6	;RP1=1, select bank3
  4047  1241  058C               	andwf	12,f	;volsfr
  4048  1242  140C               	bsf	12,0	;volsfr
  4049  1243  1003               	clrc
  4050  1244  180C               	btfsc	12,0	;volsfr
  4051  1245  1403               	setc
  4052  1246  3000               	movlw	0
  4053  1247  1803               	skipnc
  4054  1248  3001               	movlw	1
  4055  1249  1283               	bcf	3,5	;RP0=0, select bank2
  4056  124A  1703               	bsf	3,6	;RP1=1, select bank2
  4057  124B  080C               	movf	12,w	;volatile
  4058  124C  0008               	return
  4059  124D                     __end_of_eeprom_read:	
  4060                           
  4061                           	psect	text21
  4062  1FDD                     __ptext21:	
  4063 ;; *************** function ___wmul *****************
  4064 ;; Defined at:
  4065 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\Umul16.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4068 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;  product         2    4[BANK0 ] unsigned int 
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  2    0[BANK0 ] unsigned int 
  4073 ;; Registers used:
  4074 ;;		wreg, status,2, status,0
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4080 ;;      Params:         0       4       0       0       0
  4081 ;;      Locals:         0       2       0       0       0
  4082 ;;      Temps:          0       0       0       0       0
  4083 ;;      Totals:         0       6       0       0       0
  4084 ;;Total ram usage:        6 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; Hardware stack levels required when called:    2
  4087 ;; This function calls:
  4088 ;;		Nothing
  4089 ;; This function is called by:
  4090 ;;		_Read_EEPROM
  4091 ;;		_Read_EEPROM_Price
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           
  4096                           ;psect for function ___wmul
  4097  1FDD                     ___wmul:	
  4098                           
  4099                           ;incstack = 0
  4100                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4101  1FDD  1283               	bcf	3,5	;RP0=0, select bank0
  4102  1FDE  1303               	bcf	3,6	;RP1=0, select bank0
  4103  1FDF  01D1               	clrf	___wmul@product
  4104  1FE0  01D2               	clrf	___wmul@product+1
  4105  1FE1                     l3338:	
  4106  1FE1  1C4D               	btfss	___wmul@multiplier,0
  4107  1FE2  2FE9               	goto	l862
  4108  1FE3  084F               	movf	___wmul@multiplicand,w
  4109  1FE4  07D1               	addwf	___wmul@product,f
  4110  1FE5  1803               	skipnc
  4111  1FE6  0AD2               	incf	___wmul@product+1,f
  4112  1FE7  0850               	movf	___wmul@multiplicand+1,w
  4113  1FE8  07D2               	addwf	___wmul@product+1,f
  4114  1FE9                     l862:	
  4115  1FE9  3001               	movlw	1
  4116  1FEA                     u2625:	
  4117  1FEA  1003               	clrc
  4118  1FEB  0DCF               	rlf	___wmul@multiplicand,f
  4119  1FEC  0DD0               	rlf	___wmul@multiplicand+1,f
  4120  1FED  3EFF               	addlw	-1
  4121  1FEE  1D03               	skipz
  4122  1FEF  2FEA               	goto	u2625
  4123  1FF0  3001               	movlw	1
  4124  1FF1                     u2635:	
  4125  1FF1  1003               	clrc
  4126  1FF2  0CCE               	rrf	___wmul@multiplier+1,f
  4127  1FF3  0CCD               	rrf	___wmul@multiplier,f
  4128  1FF4  3EFF               	addlw	-1
  4129  1FF5  1D03               	skipz
  4130  1FF6  2FF1               	goto	u2635
  4131  1FF7  084D               	movf	___wmul@multiplier,w
  4132  1FF8  044E               	iorwf	___wmul@multiplier+1,w
  4133  1FF9  1D03               	btfss	3,2
  4134  1FFA  2FE1               	goto	l3338
  4135  1FFB  0852               	movf	___wmul@product+1,w
  4136  1FFC  00CE               	movwf	?___wmul+1
  4137  1FFD  0851               	movf	___wmul@product,w
  4138  1FFE  00CD               	movwf	?___wmul
  4139  1FFF  0008               	return
  4140  2000                     __end_of___wmul:	
  4141                           
  4142                           	psect	text22
  4143  124D                     __ptext22:	
  4144 ;; *************** function _PORT_Init *****************
  4145 ;; Defined at:
  4146 ;;		line 1041 in file "newmain.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;		None
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;		None
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  1    wreg      void 
  4153 ;; Registers used:
  4154 ;;		wreg, status,2
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4160 ;;      Params:         0       0       0       0       0
  4161 ;;      Locals:         0       0       0       0       0
  4162 ;;      Temps:          0       0       0       0       0
  4163 ;;      Totals:         0       0       0       0       0
  4164 ;;Total ram usage:        0 bytes
  4165 ;; Hardware stack levels used:    1
  4166 ;; Hardware stack levels required when called:    2
  4167 ;; This function calls:
  4168 ;;		Nothing
  4169 ;; This function is called by:
  4170 ;;		_main
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           
  4175                           ;psect for function _PORT_Init
  4176  124D                     _PORT_Init:	
  4177                           
  4178                           ;newmain.c: 1043: TRISA = 0X37;
  4179                           
  4180                           ;incstack = 0
  4181                           ; Regs used in _PORT_Init: [wreg+status,2]
  4182  124D  3037               	movlw	55
  4183  124E  1683               	bsf	3,5	;RP0=1, select bank1
  4184  124F  1303               	bcf	3,6	;RP1=0, select bank1
  4185  1250  0085               	movwf	5	;volatile
  4186                           
  4187                           ;newmain.c: 1044: TRISB = 0XC1;
  4188  1251  30C1               	movlw	193
  4189  1252  0086               	movwf	6	;volatile
  4190                           
  4191                           ;newmain.c: 1045: TRISC = 0XA0;
  4192  1253  30A0               	movlw	160
  4193  1254  0087               	movwf	7	;volatile
  4194                           
  4195                           ;newmain.c: 1046: TRISD = 0XA8;
  4196  1255  30A8               	movlw	168
  4197  1256  0088               	movwf	8	;volatile
  4198                           
  4199                           ;newmain.c: 1047: TRISE = 0X0F;
  4200  1257  300F               	movlw	15
  4201  1258  0089               	movwf	9	;volatile
  4202                           
  4203                           ;newmain.c: 1048: PORTB = 0X00;
  4204  1259  1283               	bcf	3,5	;RP0=0, select bank0
  4205  125A  1303               	bcf	3,6	;RP1=0, select bank0
  4206  125B  0186               	clrf	6	;volatile
  4207                           
  4208                           ;newmain.c: 1049: PORTC = 0X00;
  4209  125C  0187               	clrf	7	;volatile
  4210                           
  4211                           ;newmain.c: 1050: PORTA = 0X00;
  4212  125D  0185               	clrf	5	;volatile
  4213                           
  4214                           ;newmain.c: 1051: PORTD = 0X00;
  4215  125E  0188               	clrf	8	;volatile
  4216                           
  4217                           ;newmain.c: 1052: PORTE = 0X00;
  4218  125F  0189               	clrf	9	;volatile
  4219                           
  4220                           ;newmain.c: 1053: OPTION_REG = 0X87;
  4221  1260  3087               	movlw	135
  4222  1261  1683               	bsf	3,5	;RP0=1, select bank1
  4223  1262  1303               	bcf	3,6	;RP1=0, select bank1
  4224  1263  0081               	movwf	1	;volatile
  4225                           
  4226                           ;newmain.c: 1054: INTCON = 0X90;
  4227  1264  3090               	movlw	144
  4228  1265  008B               	movwf	11	;volatile
  4229                           
  4230                           ;newmain.c: 1055: ANSEL = 0X00;
  4231  1266  1683               	bsf	3,5	;RP0=1, select bank3
  4232  1267  1703               	bsf	3,6	;RP1=1, select bank3
  4233  1268  0188               	clrf	8	;volatile
  4234                           
  4235                           ;newmain.c: 1056: ANSELH = 0X00;
  4236  1269  0189               	clrf	9	;volatile
  4237                           
  4238                           ;newmain.c: 1057: WPUB = 0XC1;
  4239  126A  30C1               	movlw	193
  4240  126B  1683               	bsf	3,5	;RP0=1, select bank1
  4241  126C  1303               	bcf	3,6	;RP1=0, select bank1
  4242  126D  0095               	movwf	21	;volatile
  4243                           
  4244                           ;newmain.c: 1058: IOCB = 0X00;
  4245  126E  0196               	clrf	22	;volatile
  4246                           
  4247                           ;newmain.c: 1059: OSCCON = 0X65;
  4248  126F  3065               	movlw	101
  4249  1270  008F               	movwf	15	;volatile
  4250  1271  0008               	return
  4251  1272                     __end_of_PORT_Init:	
  4252                           
  4253                           	psect	text23
  4254  13C5                     __ptext23:	
  4255 ;; *************** function _LCD_Init *****************
  4256 ;; Defined at:
  4257 ;;		line 1101 in file "newmain.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;		None
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;		None
  4262 ;; Return value:  Size  Location     Type
  4263 ;;                  1    wreg      void 
  4264 ;; Registers used:
  4265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4266 ;; Tracked objects:
  4267 ;;		On entry : 0/0
  4268 ;;		On exit  : 0/0
  4269 ;;		Unchanged: 0/0
  4270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4271 ;;      Params:         0       0       0       0       0
  4272 ;;      Locals:         0       0       0       0       0
  4273 ;;      Temps:          0       1       0       0       0
  4274 ;;      Totals:         0       1       0       0       0
  4275 ;;Total ram usage:        1 bytes
  4276 ;; Hardware stack levels used:    1
  4277 ;; Hardware stack levels required when called:    5
  4278 ;; This function calls:
  4279 ;;		_LCD_BuildChar
  4280 ;;		_LCD_CmdWrite
  4281 ;; This function is called by:
  4282 ;;		_main
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           
  4287                           ;psect for function _LCD_Init
  4288  13C5                     _LCD_Init:	
  4289                           
  4290                           ;newmain.c: 1105: RA6 = 0;
  4291                           
  4292                           ;incstack = 0
  4293                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4294  13C5  1283               	bcf	3,5	;RP0=0, select bank0
  4295  13C6  1303               	bcf	3,6	;RP1=0, select bank0
  4296  13C7  1305               	bcf	5,6	;volatile
  4297                           
  4298                           ;newmain.c: 1106: RA7 = 0;
  4299  13C8  1385               	bcf	5,7	;volatile
  4300                           
  4301                           ;newmain.c: 1107: RC0 = 0;
  4302  13C9  1007               	bcf	7,0	;volatile
  4303                           
  4304                           ;newmain.c: 1108: RC1 = 0;
  4305  13CA  1087               	bcf	7,1	;volatile
  4306                           
  4307                           ;newmain.c: 1109: RC2 = 0;
  4308  13CB  1107               	bcf	7,2	;volatile
  4309                           
  4310                           ;newmain.c: 1110: RC3 = 0;
  4311  13CC  1187               	bcf	7,3	;volatile
  4312                           
  4313                           ;newmain.c: 1111: TRISA6 = 0;
  4314  13CD  1683               	bsf	3,5	;RP0=1, select bank1
  4315  13CE  1303               	bcf	3,6	;RP1=0, select bank1
  4316  13CF  1305               	bcf	5,6	;volatile
  4317                           
  4318                           ;newmain.c: 1112: TRISA7 = 0;
  4319  13D0  1385               	bcf	5,7	;volatile
  4320                           
  4321                           ;newmain.c: 1113: TRISC0 = 0;
  4322  13D1  1007               	bcf	7,0	;volatile
  4323                           
  4324                           ;newmain.c: 1114: TRISC1 = 0;
  4325  13D2  1087               	bcf	7,1	;volatile
  4326                           
  4327                           ;newmain.c: 1115: TRISC2 = 0;
  4328  13D3  1107               	bcf	7,2	;volatile
  4329                           
  4330                           ;newmain.c: 1116: TRISC3 = 0;
  4331  13D4  1187               	bcf	7,3	;volatile
  4332                           
  4333                           ;newmain.c: 1118: LCD_CmdWrite(0x02);
  4334  13D5  3002               	movlw	2
  4335  13D6  160A  158A  2762  160A  118A  	fcall	_LCD_CmdWrite
  4336                           
  4337                           ;newmain.c: 1119: LCD_CmdWrite(0x28);
  4338  13DB  3028               	movlw	40
  4339  13DC  160A  158A  2762  160A  118A  	fcall	_LCD_CmdWrite
  4340                           
  4341                           ;newmain.c: 1120: LCD_CmdWrite(0x0c);
  4342  13E1  300C               	movlw	12
  4343  13E2  160A  158A  2762  160A  118A  	fcall	_LCD_CmdWrite
  4344                           
  4345                           ;newmain.c: 1121: LCD_CmdWrite(0x01);
  4346  13E7  3001               	movlw	1
  4347  13E8  160A  158A  2762  160A  118A  	fcall	_LCD_CmdWrite
  4348                           
  4349                           ;newmain.c: 1122: LCD_CmdWrite(0x06);
  4350  13ED  3006               	movlw	6
  4351  13EE  160A  158A  2762  160A  118A  	fcall	_LCD_CmdWrite
  4352                           
  4353                           ;newmain.c: 1124: LCD_BuildChar(0,RupeeSymbol);
  4354  13F3  30A0               	movlw	(low (_RupeeSymbol| 0))& (0+255)
  4355  13F4  1283               	bcf	3,5	;RP0=0, select bank0
  4356  13F5  1303               	bcf	3,6	;RP1=0, select bank0
  4357  13F6  00D4               	movwf	??_LCD_Init
  4358  13F7  0854               	movf	??_LCD_Init,w
  4359  13F8  00D0               	movwf	LCD_BuildChar@p
  4360  13F9  3000               	movlw	0
  4361  13FA  160A  118A  238C   	fcall	_LCD_BuildChar
  4362  13FD  0008               	return
  4363  13FE                     __end_of_LCD_Init:	
  4364                           
  4365                           	psect	text24
  4366  138C                     __ptext24:	
  4367 ;; *************** function _LCD_BuildChar *****************
  4368 ;; Defined at:
  4369 ;;		line 1162 in file "newmain.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;  loc             1    wreg     unsigned char 
  4372 ;;  p               1    3[BANK0 ] PTR unsigned char 
  4373 ;;		 -> RupeeSymbol(8), 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  loc             1    5[BANK0 ] unsigned char 
  4376 ;;  i               1    6[BANK0 ] unsigned char 
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  1    wreg      void 
  4379 ;; Registers used:
  4380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4386 ;;      Params:         0       1       0       0       0
  4387 ;;      Locals:         0       2       0       0       0
  4388 ;;      Temps:          0       1       0       0       0
  4389 ;;      Totals:         0       4       0       0       0
  4390 ;;Total ram usage:        4 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; Hardware stack levels required when called:    4
  4393 ;; This function calls:
  4394 ;;		_LCD_CmdWrite
  4395 ;;		_LCD_DataWrite
  4396 ;; This function is called by:
  4397 ;;		_LCD_Init
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           
  4402                           ;psect for function _LCD_BuildChar
  4403  138C                     _LCD_BuildChar:	
  4404                           
  4405                           ;incstack = 0
  4406                           ; Regs used in _LCD_BuildChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4407                           ;LCD_BuildChar@loc stored from wreg
  4408  138C  1283               	bcf	3,5	;RP0=0, select bank0
  4409  138D  1303               	bcf	3,6	;RP1=0, select bank0
  4410  138E  00D2               	movwf	LCD_BuildChar@loc
  4411                           
  4412                           ;newmain.c: 1164: unsigned char i;
  4413                           ;newmain.c: 1165: if(loc<8)
  4414  138F  3008               	movlw	8
  4415  1390  0252               	subwf	LCD_BuildChar@loc,w
  4416  1391  1803               	skipnc
  4417  1392  2BC0               	goto	l3252
  4418                           
  4419                           ;newmain.c: 1166: {
  4420                           ;newmain.c: 1167: LCD_CmdWrite(0X40+(loc*8));
  4421  1393  0852               	movf	LCD_BuildChar@loc,w
  4422  1394  00D1               	movwf	??_LCD_BuildChar
  4423  1395  3002               	movlw	2
  4424  1396                     u2465:	
  4425  1396  1003               	clrc
  4426  1397  0DD1               	rlf	??_LCD_BuildChar,f
  4427  1398  3EFF               	addlw	-1
  4428  1399  1D03               	skipz
  4429  139A  2B96               	goto	u2465
  4430  139B  1003               	clrc
  4431  139C  0D51               	rlf	??_LCD_BuildChar,w
  4432  139D  3E40               	addlw	64
  4433  139E  160A  158A  2762  160A  118A  	fcall	_LCD_CmdWrite
  4434                           
  4435                           ;newmain.c: 1168: for(i=0;i<=8;i++)
  4436  13A3  1283               	bcf	3,5	;RP0=0, select bank0
  4437  13A4  1303               	bcf	3,6	;RP1=0, select bank0
  4438  13A5  01D3               	clrf	LCD_BuildChar@i
  4439  13A6  3009               	movlw	9
  4440  13A7  0253               	subwf	LCD_BuildChar@i,w
  4441  13A8  1803               	btfsc	3,0
  4442  13A9  2BC0               	goto	l3252
  4443  13AA                     l3246:	
  4444                           
  4445                           ;newmain.c: 1169: LCD_DataWrite(p[i]);
  4446  13AA  0853               	movf	LCD_BuildChar@i,w
  4447  13AB  0750               	addwf	LCD_BuildChar@p,w
  4448  13AC  00D1               	movwf	??_LCD_BuildChar
  4449  13AD  0851               	movf	??_LCD_BuildChar,w
  4450  13AE  0084               	movwf	4
  4451  13AF  1383               	bcf	3,7	;select IRP bank0
  4452  13B0  0800               	movf	0,w
  4453  13B1  160A  158A  277F  160A  118A  	fcall	_LCD_DataWrite
  4454  13B6  3001               	movlw	1
  4455  13B7  1283               	bcf	3,5	;RP0=0, select bank0
  4456  13B8  1303               	bcf	3,6	;RP1=0, select bank0
  4457  13B9  00D1               	movwf	??_LCD_BuildChar
  4458  13BA  0851               	movf	??_LCD_BuildChar,w
  4459  13BB  07D3               	addwf	LCD_BuildChar@i,f
  4460  13BC  3009               	movlw	9
  4461  13BD  0253               	subwf	LCD_BuildChar@i,w
  4462  13BE  1C03               	skipc
  4463  13BF  2BAA               	goto	l3246
  4464  13C0                     l3252:	
  4465                           
  4466                           ;newmain.c: 1170: }
  4467                           ;newmain.c: 1171: LCD_CmdWrite(0x80);
  4468  13C0  3080               	movlw	128
  4469  13C1  160A  158A  2762   	fcall	_LCD_CmdWrite
  4470  13C4  0008               	return
  4471  13C5                     __end_of_LCD_BuildChar:	
  4472                           
  4473                           	psect	text25
  4474  1F7F                     __ptext25:	
  4475 ;; *************** function _LCD_DataWrite *****************
  4476 ;; Defined at:
  4477 ;;		line 1086 in file "newmain.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;  LCDChar         1    wreg     unsigned char 
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;  LCDChar         1    2[BANK0 ] unsigned char 
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  1    wreg      void 
  4484 ;; Registers used:
  4485 ;;		wreg, status,2, status,0, pclath, cstack
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4491 ;;      Params:         0       0       0       0       0
  4492 ;;      Locals:         0       1       0       0       0
  4493 ;;      Temps:          0       1       0       0       0
  4494 ;;      Totals:         0       2       0       0       0
  4495 ;;Total ram usage:        2 bytes
  4496 ;; Hardware stack levels used:    1
  4497 ;; Hardware stack levels required when called:    3
  4498 ;; This function calls:
  4499 ;;		_ToggleEpinOfLCD
  4500 ;; This function is called by:
  4501 ;;		_main
  4502 ;;		_LCD_DisplayString
  4503 ;;		_displaypass
  4504 ;;		_LCD_BuildChar
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           
  4509                           ;psect for function _LCD_DataWrite
  4510  1F7F                     _LCD_DataWrite:	
  4511                           
  4512                           ;incstack = 0
  4513                           ; Regs used in _LCD_DataWrite: [wreg+status,2+status,0+pclath+cstack]
  4514                           ;LCD_DataWrite@LCDChar stored from wreg
  4515  1F7F  1283               	bcf	3,5	;RP0=0, select bank0
  4516  1F80  1303               	bcf	3,6	;RP1=0, select bank0
  4517  1F81  00CF               	movwf	LCD_DataWrite@LCDChar
  4518                           
  4519                           ;newmain.c: 1088: RA7 = 1;
  4520  1F82  1785               	bsf	5,7	;volatile
  4521                           
  4522                           ;newmain.c: 1090: PORTC = ((LCDChar>>4)&0x0F);
  4523  1F83  084F               	movf	LCD_DataWrite@LCDChar,w
  4524  1F84  00CE               	movwf	??_LCD_DataWrite
  4525  1F85  3004               	movlw	4
  4526  1F86                     u2295:	
  4527  1F86  1003               	clrc
  4528  1F87  0CCE               	rrf	??_LCD_DataWrite,f
  4529  1F88  3EFF               	addlw	-1
  4530  1F89  1D03               	skipz
  4531  1F8A  2F86               	goto	u2295
  4532  1F8B  084E               	movf	??_LCD_DataWrite,w
  4533  1F8C  390F               	andlw	15
  4534  1F8D  0087               	movwf	7	;volatile
  4535                           
  4536                           ;newmain.c: 1091: ToggleEpinOfLCD();
  4537  1F8E  160A  158A  2717  160A  158A  	fcall	_ToggleEpinOfLCD
  4538                           
  4539                           ;newmain.c: 1094: PORTC = (LCDChar&0x0F);
  4540  1F93  1283               	bcf	3,5	;RP0=0, select bank0
  4541  1F94  1303               	bcf	3,6	;RP1=0, select bank0
  4542  1F95  084F               	movf	LCD_DataWrite@LCDChar,w
  4543  1F96  390F               	andlw	15
  4544  1F97  0087               	movwf	7	;volatile
  4545                           
  4546                           ;newmain.c: 1095: ToggleEpinOfLCD();
  4547  1F98  160A  158A  2717   	fcall	_ToggleEpinOfLCD
  4548  1F9B  0008               	return
  4549  1F9C                     __end_of_LCD_DataWrite:	
  4550                           
  4551                           	psect	text26
  4552  1F62                     __ptext26:	
  4553 ;; *************** function _LCD_CmdWrite *****************
  4554 ;; Defined at:
  4555 ;;		line 1071 in file "newmain.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;  Command         1    wreg     unsigned char 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  Command         1    2[BANK0 ] unsigned char 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  1    wreg      void 
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0, pclath, cstack
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4569 ;;      Params:         0       0       0       0       0
  4570 ;;      Locals:         0       1       0       0       0
  4571 ;;      Temps:          0       1       0       0       0
  4572 ;;      Totals:         0       2       0       0       0
  4573 ;;Total ram usage:        2 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    3
  4576 ;; This function calls:
  4577 ;;		_ToggleEpinOfLCD
  4578 ;; This function is called by:
  4579 ;;		_main
  4580 ;;		_LCD_Init
  4581 ;;		_LCD_Clear
  4582 ;;		_LCD_BuildChar
  4583 ;;		_STOCK_EMPTY_ROUTINE
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           
  4588                           ;psect for function _LCD_CmdWrite
  4589  1F62                     _LCD_CmdWrite:	
  4590                           
  4591                           ;incstack = 0
  4592                           ; Regs used in _LCD_CmdWrite: [wreg+status,2+status,0+pclath+cstack]
  4593                           ;LCD_CmdWrite@Command stored from wreg
  4594  1F62  1283               	bcf	3,5	;RP0=0, select bank0
  4595  1F63  1303               	bcf	3,6	;RP1=0, select bank0
  4596  1F64  00CF               	movwf	LCD_CmdWrite@Command
  4597                           
  4598                           ;newmain.c: 1073: RA7 = 0;
  4599  1F65  1385               	bcf	5,7	;volatile
  4600                           
  4601                           ;newmain.c: 1076: PORTC = ((Command>>4)&0x0F);
  4602  1F66  084F               	movf	LCD_CmdWrite@Command,w
  4603  1F67  00CE               	movwf	??_LCD_CmdWrite
  4604  1F68  3004               	movlw	4
  4605  1F69                     u2285:	
  4606  1F69  1003               	clrc
  4607  1F6A  0CCE               	rrf	??_LCD_CmdWrite,f
  4608  1F6B  3EFF               	addlw	-1
  4609  1F6C  1D03               	skipz
  4610  1F6D  2F69               	goto	u2285
  4611  1F6E  084E               	movf	??_LCD_CmdWrite,w
  4612  1F6F  390F               	andlw	15
  4613  1F70  0087               	movwf	7	;volatile
  4614                           
  4615                           ;newmain.c: 1077: ToggleEpinOfLCD();
  4616  1F71  160A  158A  2717  160A  158A  	fcall	_ToggleEpinOfLCD
  4617                           
  4618                           ;newmain.c: 1080: PORTC = (Command&0x0F);
  4619  1F76  1283               	bcf	3,5	;RP0=0, select bank0
  4620  1F77  1303               	bcf	3,6	;RP1=0, select bank0
  4621  1F78  084F               	movf	LCD_CmdWrite@Command,w
  4622  1F79  390F               	andlw	15
  4623  1F7A  0087               	movwf	7	;volatile
  4624                           
  4625                           ;newmain.c: 1081: ToggleEpinOfLCD();
  4626  1F7B  160A  158A  2717   	fcall	_ToggleEpinOfLCD
  4627  1F7E  0008               	return
  4628  1F7F                     __end_of_LCD_CmdWrite:	
  4629                           
  4630                           	psect	text27
  4631  1F17                     __ptext27:	
  4632 ;; *************** function _ToggleEpinOfLCD *****************
  4633 ;; Defined at:
  4634 ;;		line 1062 in file "newmain.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;		None
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;		None
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1    wreg      void 
  4641 ;; Registers used:
  4642 ;;		wreg
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4648 ;;      Params:         0       0       0       0       0
  4649 ;;      Locals:         0       0       0       0       0
  4650 ;;      Temps:          0       1       0       0       0
  4651 ;;      Totals:         0       1       0       0       0
  4652 ;;Total ram usage:        1 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; Hardware stack levels required when called:    2
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_LCD_CmdWrite
  4659 ;;		_LCD_DataWrite
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           
  4664                           ;psect for function _ToggleEpinOfLCD
  4665  1F17                     _ToggleEpinOfLCD:	
  4666                           
  4667                           ;newmain.c: 1064: RA6 = 1;
  4668                           
  4669                           ;incstack = 0
  4670                           ; Regs used in _ToggleEpinOfLCD: [wreg]
  4671  1F17  1283               	bcf	3,5	;RP0=0, select bank0
  4672  1F18  1303               	bcf	3,6	;RP1=0, select bank0
  4673  1F19  1705               	bsf	5,6	;volatile
  4674                           
  4675                           ;newmain.c: 1065: _delay((unsigned long)((1)*(4000000/4000.0)));
  4676  1F1A  30C7               	movlw	199
  4677  1F1B  1283               	bcf	3,5	;RP0=0, select bank0
  4678  1F1C  1303               	bcf	3,6	;RP1=0, select bank0
  4679  1F1D  00CD               	movwf	??_ToggleEpinOfLCD
  4680  1F1E                     u4747:	
  4681  1F1E  2F1F               	nop2
  4682  1F1F  0BCD               	decfsz	??_ToggleEpinOfLCD,f
  4683  1F20  2F1E               	goto	u4747
  4684  1F21  2F22               	nop2
  4685                           
  4686                           ;newmain.c: 1066: RA6 = 0;
  4687  1F22  1283               	bcf	3,5	;RP0=0, select bank0
  4688  1F23  1303               	bcf	3,6	;RP1=0, select bank0
  4689  1F24  1305               	bcf	5,6	;volatile
  4690                           
  4691                           ;newmain.c: 1067: _delay((unsigned long)((1)*(4000000/4000.0)));
  4692  1F25  30C7               	movlw	199
  4693  1F26  1283               	bcf	3,5	;RP0=0, select bank0
  4694  1F27  1303               	bcf	3,6	;RP1=0, select bank0
  4695  1F28  00CD               	movwf	??_ToggleEpinOfLCD
  4696  1F29                     u4757:	
  4697  1F29  2F2A               	nop2
  4698  1F2A  0BCD               	decfsz	??_ToggleEpinOfLCD,f
  4699  1F2B  2F29               	goto	u4757
  4700  1F2C  2F2D               	nop2
  4701  1F2D  0008               	return
  4702  1F2E                     __end_of_ToggleEpinOfLCD:	
  4703                           
  4704                           	psect	text28
  4705  1475                     __ptext28:	
  4706 ;; *************** function _COINCOUNTER *****************
  4707 ;; Defined at:
  4708 ;;		line 134 in file "newmain.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;		None
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;		None
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  1    wreg      void 
  4715 ;; Registers used:
  4716 ;;		wreg, status,2, status,0, pclath, cstack
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4722 ;;      Params:         0       0       0       0       0
  4723 ;;      Locals:         0       0       0       0       0
  4724 ;;      Temps:          6       0       0       0       0
  4725 ;;      Totals:         6       0       0       0       0
  4726 ;;Total ram usage:        6 bytes
  4727 ;; Hardware stack levels used:    1
  4728 ;; Hardware stack levels required when called:    1
  4729 ;; This function calls:
  4730 ;;		_Monitor_Balance
  4731 ;; This function is called by:
  4732 ;;		Interrupt level 1
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736                           
  4737                           ;psect for function _COINCOUNTER
  4738  1475                     _COINCOUNTER:	
  4739                           
  4740                           ;newmain.c: 136: if(INTF==1)
  4741  1475  1C8B               	btfss	11,1	;volatile
  4742  1476  2CAB               	goto	i1l239
  4743                           
  4744                           ;newmain.c: 137: {
  4745                           ;newmain.c: 138: INTF=0;
  4746  1477  108B               	bcf	11,1	;volatile
  4747                           
  4748                           ;newmain.c: 139: coin_input=1;
  4749  1478  1570               	bsf	_coin_input/(0+8),_coin_input& (0+7)
  4750                           
  4751                           ;newmain.c: 140: count=count+10;
  4752  1479  087A               	movf	_count,w
  4753  147A  3E0A               	addlw	10
  4754  147B  00FA               	movwf	_count
  4755  147C  087B               	movf	_count+1,w
  4756  147D  1803               	skipnc
  4757  147E  3E01               	addlw	1
  4758  147F  3E00               	addlw	0
  4759  1480  00FB               	movwf	_count+1
  4760                           
  4761                           ;newmain.c: 141: balance=rupee-count;
  4762  1481  097A               	comf	_count,w
  4763  1482  00F4               	movwf	??_COINCOUNTER
  4764  1483  097B               	comf	_count+1,w
  4765  1484  00F5               	movwf	??_COINCOUNTER+1
  4766  1485  0AF4               	incf	??_COINCOUNTER,f
  4767  1486  1903               	skipnz
  4768  1487  0AF5               	incf	??_COINCOUNTER+1,f
  4769  1488  087C               	movf	_rupee,w
  4770  1489  0774               	addwf	??_COINCOUNTER,w
  4771  148A  00B8               	movwf	_balance
  4772  148B  087D               	movf	_rupee+1,w
  4773  148C  1803               	skipnc
  4774  148D  0A7D               	incf	_rupee+1,w
  4775  148E  0775               	addwf	??_COINCOUNTER+1,w
  4776  148F  00B9               	movwf	_balance+1
  4777                           
  4778                           ;newmain.c: 142: Monitor_Balance(balance);
  4779  1490  0839               	movf	_balance+1,w
  4780  1491  00F3               	movwf	Monitor_Balance@amount+1
  4781  1492  0838               	movf	_balance,w
  4782  1493  00F2               	movwf	Monitor_Balance@amount
  4783  1494  160A  118A  2297  160A  118A  	fcall	_Monitor_Balance
  4784                           
  4785                           ;newmain.c: 144: if(count==rupee)
  4786  1499  087D               	movf	_rupee+1,w
  4787  149A  067B               	xorwf	_count+1,w
  4788  149B  1D03               	skipz
  4789  149C  2C9F               	goto	u295_25
  4790  149D  087C               	movf	_rupee,w
  4791  149E  067A               	xorwf	_count,w
  4792  149F                     u295_25:	
  4793  149F  1D03               	skipz
  4794  14A0  2CAB               	goto	i1l239
  4795                           
  4796                           ;newmain.c: 145: {
  4797                           ;newmain.c: 146: INTE=0;
  4798  14A1  120B               	bcf	11,4	;volatile
  4799                           
  4800                           ;newmain.c: 147: count=0;
  4801  14A2  01FA               	clrf	_count
  4802  14A3  01FB               	clrf	_count+1
  4803                           
  4804                           ;newmain.c: 148: balance=0;
  4805  14A4  1283               	bcf	3,5	;RP0=0, select bank0
  4806  14A5  1303               	bcf	3,6	;RP1=0, select bank0
  4807  14A6  01B8               	clrf	_balance
  4808  14A7  01B9               	clrf	_balance+1
  4809                           
  4810                           ;newmain.c: 149: coin_input=0;
  4811  14A8  1170               	bcf	_coin_input/(0+8),_coin_input& (0+7)
  4812                           
  4813                           ;newmain.c: 150: RB1=1;
  4814  14A9  1486               	bsf	6,1	;volatile
  4815                           
  4816                           ;newmain.c: 151: motor=1;
  4817  14AA  14F0               	bsf	_motor/(0+8),_motor& (0+7)
  4818  14AB                     i1l239:	
  4819  14AB  0879               	movf	??_COINCOUNTER+5,w
  4820  14AC  1283               	bcf	3,5	;RP0=0, select bank0
  4821  14AD  1303               	bcf	3,6	;RP1=0, select bank0
  4822  14AE  00FF               	movwf	127
  4823  14AF  0878               	movf	??_COINCOUNTER+4,w
  4824  14B0  008A               	movwf	10
  4825  14B1  0877               	movf	??_COINCOUNTER+3,w
  4826  14B2  0084               	movwf	4
  4827  14B3  0E76               	swapf	(??_COINCOUNTER+2)^(0+-128),w
  4828  14B4  0083               	movwf	3
  4829  14B5  0EFE               	swapf	126,f
  4830  14B6  0E7E               	swapf	126,w
  4831  14B7  0009               	retfie
  4832  14B8                     __end_of_COINCOUNTER:	
  4833                           
  4834                           	psect	intentry
  4835  0004                     __pintentry:	
  4836                           ;incstack = 0
  4837                           ; Regs used in _COINCOUNTER: [wreg+status,2+status,0+pclath+cstack]
  4838                           
  4839  0004                     interrupt_function:	
  4840  007E                     saved_w	set	btemp
  4841  0004  00FE               	movwf	btemp
  4842  0005  0E03               	swapf	3,w
  4843  0006  00F6               	movwf	??_COINCOUNTER+2
  4844  0007  0804               	movf	4,w
  4845  0008  00F7               	movwf	??_COINCOUNTER+3
  4846  0009  080A               	movf	10,w
  4847  000A  00F8               	movwf	??_COINCOUNTER+4
  4848  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4849  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4850  000D  087F               	movf	btemp+1,w
  4851  000E  00F9               	movwf	??_COINCOUNTER+5
  4852  000F  160A  118A  2C75   	ljmp	_COINCOUNTER
  4853                           
  4854                           	psect	text29
  4855  1297                     __ptext29:	
  4856 ;; *************** function _Monitor_Balance *****************
  4857 ;; Defined at:
  4858 ;;		line 1250 in file "newmain.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;  amount          2    0[COMMON] unsigned int 
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;		None
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  1    wreg      void 
  4865 ;; Registers used:
  4866 ;;		wreg, status,2, status,0
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4872 ;;      Params:         2       0       0       0       0
  4873 ;;      Locals:         0       0       0       0       0
  4874 ;;      Temps:          0       0       0       0       0
  4875 ;;      Totals:         2       0       0       0       0
  4876 ;;Total ram usage:        2 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; This function calls:
  4879 ;;		Nothing
  4880 ;; This function is called by:
  4881 ;;		_COINCOUNTER
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           
  4886                           ;psect for function _Monitor_Balance
  4887  1297                     _Monitor_Balance:	
  4888                           
  4889                           ;newmain.c: 1252: if(amount<= 90) { RB5 = 1;}
  4890                           
  4891                           ;incstack = 0
  4892                           ; Regs used in _Monitor_Balance: [wreg+status,2+status,0]
  4893  1297  3000               	movlw	0
  4894  1298  0273               	subwf	Monitor_Balance@amount+1,w
  4895  1299  305B               	movlw	91
  4896  129A  1903               	skipnz
  4897  129B  0272               	subwf	Monitor_Balance@amount,w
  4898  129C  1803               	skipnc
  4899  129D  2AA1               	goto	i1l3436
  4900  129E  1283               	bcf	3,5	;RP0=0, select bank0
  4901  129F  1303               	bcf	3,6	;RP1=0, select bank0
  4902  12A0  1686               	bsf	6,5	;volatile
  4903  12A1                     i1l3436:	
  4904                           
  4905                           ;newmain.c: 1253: if(amount<= 40) { RB5 = 1; RB4=1; }
  4906  12A1  3000               	movlw	0
  4907  12A2  0273               	subwf	Monitor_Balance@amount+1,w
  4908  12A3  3029               	movlw	41
  4909  12A4  1903               	skipnz
  4910  12A5  0272               	subwf	Monitor_Balance@amount,w
  4911  12A6  1803               	skipnc
  4912  12A7  2AAC               	goto	i1l3440
  4913  12A8  1283               	bcf	3,5	;RP0=0, select bank0
  4914  12A9  1303               	bcf	3,6	;RP1=0, select bank0
  4915  12AA  1686               	bsf	6,5	;volatile
  4916  12AB  1606               	bsf	6,4	;volatile
  4917  12AC                     i1l3440:	
  4918                           
  4919                           ;newmain.c: 1254: if(amount<= 10) { RB5 = 1; RB4=1; RB3=1; }
  4920  12AC  3000               	movlw	0
  4921  12AD  0273               	subwf	Monitor_Balance@amount+1,w
  4922  12AE  300B               	movlw	11
  4923  12AF  1903               	skipnz
  4924  12B0  0272               	subwf	Monitor_Balance@amount,w
  4925  12B1  1803               	skipnc
  4926  12B2  2AB8               	goto	i1l3444
  4927  12B3  1283               	bcf	3,5	;RP0=0, select bank0
  4928  12B4  1303               	bcf	3,6	;RP1=0, select bank0
  4929  12B5  1686               	bsf	6,5	;volatile
  4930  12B6  1606               	bsf	6,4	;volatile
  4931  12B7  1586               	bsf	6,3	;volatile
  4932  12B8                     i1l3444:	
  4933                           
  4934                           ;newmain.c: 1255: if(amount==0) { RB5 = 1; RB4=1; RB3=1; RB2=1; }
  4935  12B8  0872               	movf	Monitor_Balance@amount,w
  4936  12B9  0473               	iorwf	Monitor_Balance@amount+1,w
  4937  12BA  1D03               	btfss	3,2
  4938  12BB  0008               	return
  4939  12BC  1283               	bcf	3,5	;RP0=0, select bank0
  4940  12BD  1303               	bcf	3,6	;RP1=0, select bank0
  4941  12BE  1686               	bsf	6,5	;volatile
  4942  12BF  1606               	bsf	6,4	;volatile
  4943  12C0  1586               	bsf	6,3	;volatile
  4944  12C1  1506               	bsf	6,2	;volatile
  4945  12C2  0008               	return
  4946  12C3                     __end_of_Monitor_Balance:	
  4947  007E                     btemp	set	126	;btemp
  4948  007E                     wtemp0	set	126
  4949                           
  4950                           	psect	maintext_split_1
  4951  0D04                     l248:	
  4952                           
  4953                           ;newmain.c: 202: }
  4954                           ;newmain.c: 205: RB1=1;INTE=0;
  4955  0D04  1486               	bsf	6,1	;volatile
  4956  0D05  120B               	bcf	11,4	;volatile
  4957                           
  4958                           ;newmain.c: 207: padcount1=Read_EEPROM(0,1);
  4959  0D06  01D3               	clrf	Read_EEPROM@b2
  4960  0D07  0AD3               	incf	Read_EEPROM@b2,f
  4961  0D08  3000               	movlw	0
  4962  0D09  160A  118A  23FE  120A  158A  	fcall	_Read_EEPROM
  4963  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  4964  0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  4965  0D10  0854               	movf	?_Read_EEPROM+1,w
  4966  0D11  00C1               	movwf	_padcount1+1
  4967  0D12  0853               	movf	?_Read_EEPROM,w
  4968  0D13  00C0               	movwf	_padcount1
  4969                           
  4970                           ;newmain.c: 208: padcount2=Read_EEPROM(4,5);
  4971  0D14  3005               	movlw	5
  4972  0D15  00EB               	movwf	??_main
  4973  0D16  086B               	movf	??_main,w
  4974  0D17  00D3               	movwf	Read_EEPROM@b2
  4975  0D18  3004               	movlw	4
  4976  0D19  160A  118A  23FE  120A  158A  	fcall	_Read_EEPROM
  4977  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  4978  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  4979  0D20  0854               	movf	?_Read_EEPROM+1,w
  4980  0D21  00BD               	movwf	_padcount2+1
  4981  0D22  0853               	movf	?_Read_EEPROM,w
  4982  0D23  00BC               	movwf	_padcount2
  4983                           
  4984                           ;newmain.c: 209: padcount3=Read_EEPROM(8,9);
  4985  0D24  3009               	movlw	9
  4986  0D25  00EB               	movwf	??_main
  4987  0D26  086B               	movf	??_main,w
  4988  0D27  00D3               	movwf	Read_EEPROM@b2
  4989  0D28  3008               	movlw	8
  4990  0D29  160A  118A  23FE  120A  158A  	fcall	_Read_EEPROM
  4991  0D2E  1283               	bcf	3,5	;RP0=0, select bank0
  4992  0D2F  1303               	bcf	3,6	;RP1=0, select bank0
  4993  0D30  0854               	movf	?_Read_EEPROM+1,w
  4994  0D31  00B5               	movwf	_padcount3+1
  4995  0D32  0853               	movf	?_Read_EEPROM,w
  4996  0D33  00B4               	movwf	_padcount3
  4997                           
  4998                           ;newmain.c: 210: padcount4=Read_EEPROM(0X0C,0X0D);
  4999  0D34  300D               	movlw	13
  5000  0D35  00EB               	movwf	??_main
  5001  0D36  086B               	movf	??_main,w
  5002  0D37  00D3               	movwf	Read_EEPROM@b2
  5003  0D38  300C               	movlw	12
  5004  0D39  160A  118A  23FE  120A  158A  	fcall	_Read_EEPROM
  5005  0D3E  1283               	bcf	3,5	;RP0=0, select bank0
  5006  0D3F  1303               	bcf	3,6	;RP1=0, select bank0
  5007  0D40  0854               	movf	?_Read_EEPROM+1,w
  5008  0D41  00B1               	movwf	_padcount4+1
  5009  0D42  0853               	movf	?_Read_EEPROM,w
  5010  0D43  00B0               	movwf	_padcount4
  5011                           
  5012                           ;newmain.c: 211: padcount5=Read_EEPROM(0X10,0X11);
  5013  0D44  3011               	movlw	17
  5014  0D45  00EB               	movwf	??_main
  5015  0D46  086B               	movf	??_main,w
  5016  0D47  00D3               	movwf	Read_EEPROM@b2
  5017  0D48  3010               	movlw	16
  5018  0D49  160A  118A  23FE  120A  158A  	fcall	_Read_EEPROM
  5019  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  5020  0D4F  1303               	bcf	3,6	;RP1=0, select bank0
  5021  0D50  0854               	movf	?_Read_EEPROM+1,w
  5022  0D51  00AD               	movwf	_padcount5+1
  5023  0D52  0853               	movf	?_Read_EEPROM,w
  5024  0D53  00AC               	movwf	_padcount5
  5025                           
  5026                           ;newmain.c: 213: rupee1=Read_EEPROM_Price(0x14,0x15,0X16);
  5027  0D54  3015               	movlw	21
  5028  0D55  00EB               	movwf	??_main
  5029  0D56  086B               	movf	??_main,w
  5030  0D57  00D3               	movwf	Read_EEPROM_Price@b2
  5031  0D58  3016               	movlw	22
  5032  0D59  00EC               	movwf	??_main+1
  5033  0D5A  086C               	movf	??_main+1,w
  5034  0D5B  00D4               	movwf	Read_EEPROM_Price@b3
  5035  0D5C  3014               	movlw	20
  5036  0D5D  160A  118A  2615  120A  158A  	fcall	_Read_EEPROM_Price
  5037  0D62  1283               	bcf	3,5	;RP0=0, select bank0
  5038  0D63  1303               	bcf	3,6	;RP1=0, select bank0
  5039  0D64  0854               	movf	?_Read_EEPROM_Price+1,w
  5040  0D65  00BF               	movwf	_rupee1+1
  5041  0D66  0853               	movf	?_Read_EEPROM_Price,w
  5042  0D67  00BE               	movwf	_rupee1
  5043                           
  5044                           ;newmain.c: 214: rupee2=Read_EEPROM_Price(0X17,0X18,0X19);
  5045  0D68  3018               	movlw	24
  5046  0D69  00EB               	movwf	??_main
  5047  0D6A  086B               	movf	??_main,w
  5048  0D6B  00D3               	movwf	Read_EEPROM_Price@b2
  5049  0D6C  3019               	movlw	25
  5050  0D6D  00EC               	movwf	??_main+1
  5051  0D6E  086C               	movf	??_main+1,w
  5052  0D6F  00D4               	movwf	Read_EEPROM_Price@b3
  5053  0D70  3017               	movlw	23
  5054  0D71  160A  118A  2615  120A  158A  	fcall	_Read_EEPROM_Price
  5055  0D76  1283               	bcf	3,5	;RP0=0, select bank0
  5056  0D77  1303               	bcf	3,6	;RP1=0, select bank0
  5057  0D78  0854               	movf	?_Read_EEPROM_Price+1,w
  5058  0D79  00BB               	movwf	_rupee2+1
  5059  0D7A  0853               	movf	?_Read_EEPROM_Price,w
  5060  0D7B  00BA               	movwf	_rupee2
  5061                           
  5062                           ;newmain.c: 215: rupee3=Read_EEPROM_Price(0X1A,0X1B,0X1C);
  5063  0D7C  301B               	movlw	27
  5064  0D7D  00EB               	movwf	??_main
  5065  0D7E  086B               	movf	??_main,w
  5066  0D7F  00D3               	movwf	Read_EEPROM_Price@b2
  5067  0D80  301C               	movlw	28
  5068  0D81  00EC               	movwf	??_main+1
  5069  0D82  086C               	movf	??_main+1,w
  5070  0D83  00D4               	movwf	Read_EEPROM_Price@b3
  5071  0D84  301A               	movlw	26
  5072  0D85  160A  118A  2615  120A  158A  	fcall	_Read_EEPROM_Price
  5073  0D8A  1283               	bcf	3,5	;RP0=0, select bank0
  5074  0D8B  1303               	bcf	3,6	;RP1=0, select bank0
  5075  0D8C  0854               	movf	?_Read_EEPROM_Price+1,w
  5076  0D8D  00B3               	movwf	_rupee3+1
  5077  0D8E  0853               	movf	?_Read_EEPROM_Price,w
  5078  0D8F  00B2               	movwf	_rupee3
  5079                           
  5080                           ;newmain.c: 216: rupee4=Read_EEPROM_Price(0X1D,0X1E,0X1F);
  5081  0D90  301E               	movlw	30
  5082  0D91  00EB               	movwf	??_main
  5083  0D92  086B               	movf	??_main,w
  5084  0D93  00D3               	movwf	Read_EEPROM_Price@b2
  5085  0D94  301F               	movlw	31
  5086  0D95  00EC               	movwf	??_main+1
  5087  0D96  086C               	movf	??_main+1,w
  5088  0D97  00D4               	movwf	Read_EEPROM_Price@b3
  5089  0D98  301D               	movlw	29
  5090  0D99  160A  118A  2615  120A  158A  	fcall	_Read_EEPROM_Price
  5091  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  5092  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  5093  0DA0  0854               	movf	?_Read_EEPROM_Price+1,w
  5094  0DA1  00AF               	movwf	_rupee4+1
  5095  0DA2  0853               	movf	?_Read_EEPROM_Price,w
  5096  0DA3  00AE               	movwf	_rupee4
  5097                           
  5098                           ;newmain.c: 217: rupee5=Read_EEPROM_Price(0X20,0X21,0X22);
  5099  0DA4  3021               	movlw	33
  5100  0DA5  00EB               	movwf	??_main
  5101  0DA6  086B               	movf	??_main,w
  5102  0DA7  00D3               	movwf	Read_EEPROM_Price@b2
  5103  0DA8  3022               	movlw	34
  5104  0DA9  00EC               	movwf	??_main+1
  5105  0DAA  086C               	movf	??_main+1,w
  5106  0DAB  00D4               	movwf	Read_EEPROM_Price@b3
  5107  0DAC  3020               	movlw	32
  5108  0DAD  160A  118A  2615  120A  158A  	fcall	_Read_EEPROM_Price
  5109  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  5110  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  5111  0DB4  0854               	movf	?_Read_EEPROM_Price+1,w
  5112  0DB5  00AB               	movwf	_rupee5+1
  5113  0DB6  0853               	movf	?_Read_EEPROM_Price,w
  5114  0DB7  00AA               	movwf	_rupee5
  5115                           
  5116                           ;newmain.c: 221: LCD_DisplayString("   WELCOME TO   ");
  5117  0DB8  30BD               	movlw	low (STR_5| (0+32768))
  5118  0DB9  00D0               	movwf	LCD_DisplayString@s
  5119  0DBA  3090               	movlw	high (STR_5| (0+32768))
  5120  0DBB  00D1               	movwf	LCD_DisplayString@s+1
  5121  0DBC  160A  118A  2272  120A  158A  	fcall	_LCD_DisplayString
  5122                           
  5123                           ;newmain.c: 222: LCD_CmdWrite(0XC0);
  5124  0DC1  30C0               	movlw	192
  5125  0DC2  160A  158A  2762  120A  158A  	fcall	_LCD_CmdWrite
  5126                           
  5127                           ;newmain.c: 223: LCD_DisplayString("DHARSAN MACHINES");
  5128  0DC7  3067               	movlw	low (STR_6| (0+32768))
  5129  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  5130  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  5131  0DCA  00D0               	movwf	LCD_DisplayString@s
  5132  0DCB  3091               	movlw	high (STR_6| (0+32768))
  5133  0DCC  00D1               	movwf	LCD_DisplayString@s+1
  5134  0DCD  160A  118A  2272  120A  158A  	fcall	_LCD_DisplayString
  5135                           
  5136                           ;newmain.c: 224: buzzer(2000);
  5137  0DD2  30D0               	movlw	208
  5138  0DD3  1283               	bcf	3,5	;RP0=0, select bank0
  5139  0DD4  1303               	bcf	3,6	;RP1=0, select bank0
  5140  0DD5  00CD               	movwf	buzzer@a
  5141  0DD6  3007               	movlw	7
  5142  0DD7  00CE               	movwf	buzzer@a+1
  5143  0DD8  160A  158A  279C  120A  158A  	fcall	_buzzer
  5144                           
  5145                           ;newmain.c: 225: _delay((unsigned long)((1000)*(4000000/4000.0)));
  5146  0DDD  3006               	movlw	6
  5147  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  5148  0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  5149  0DE0  00ED               	movwf	??_main+2
  5150  0DE1  3013               	movlw	19
  5151  0DE2  00EC               	movwf	??_main+1
  5152  0DE3  30AD               	movlw	173
  5153  0DE4  00EB               	movwf	??_main
  5154  0DE5                     u4597:	
  5155  0DE5  0BEB               	decfsz	??_main,f
  5156  0DE6  2DE5               	goto	u4597
  5157  0DE7  0BEC               	decfsz	??_main+1,f
  5158  0DE8  2DE5               	goto	u4597
  5159  0DE9  0BED               	decfsz	??_main+2,f
  5160  0DEA  2DE5               	goto	u4597
  5161                           
  5162                           ;newmain.c: 226: buzzer(50);
  5163  0DEB  3032               	movlw	50
  5164  0DEC  1283               	bcf	3,5	;RP0=0, select bank0
  5165  0DED  1303               	bcf	3,6	;RP1=0, select bank0
  5166  0DEE  00CD               	movwf	buzzer@a
  5167  0DEF  3000               	movlw	0
  5168  0DF0  00CE               	movwf	buzzer@a+1
  5169  0DF1  160A  158A  279C  120A  158A  	fcall	_buzzer
  5170                           
  5171                           ;newmain.c: 227: LCD_Clear();
  5172  0DF6  160A  158A  26F5  120A  158A  	fcall	_LCD_Clear
  5173                           
  5174                           ;newmain.c: 228: run=1;
  5175  0DFB  15F0               	bsf	_run/(0+8),_run& (0+7)
  5176  0DFC                     l250:	
  5177                           ;newmain.c: 230: while(run)
  5178                           
  5179  0DFC  1DF0               	btfss	_run/(0+8),_run& (0+7)
  5180  0DFD  2FFD               	goto	L17
  5181                           
  5182                           ;newmain.c: 231: {
  5183                           ;newmain.c: 232: TRISA1 = 1;
  5184  0DFE  1683               	bsf	3,5	;RP0=1, select bank1
  5185  0DFF  1303               	bcf	3,6	;RP1=0, select bank1
  5186  0E00  1485               	bsf	5,1	;volatile
  5187                           
  5188                           ;newmain.c: 233: TRISA0 = 1;
  5189  0E01  1405               	bsf	5,0	;volatile
  5190                           
  5191                           ;newmain.c: 234: TRISA5 = 1;
  5192  0E02  1685               	bsf	5,5	;volatile
  5193                           
  5194                           ;newmain.c: 235: TRISB6 = 1;
  5195  0E03  1706               	bsf	6,6	;volatile
  5196                           
  5197                           ;newmain.c: 236: TRISB7 = 1;
  5198  0E04  1786               	bsf	6,7	;volatile
  5199  0E05                     l252:	
  5200                           ;newmain.c: 237: while(!status)
  5201                           
  5202  0E05  18F1               	btfsc	_status/(0+8),_status& (0+7)
  5203  0E06  2FE7               	goto	l4172
  5204                           
  5205                           ;newmain.c: 238: {
  5206                           ;newmain.c: 239: LCD_CmdWrite(0X80);
  5207  0E07  3080               	movlw	128
  5208  0E08  160A  158A  2762  120A  158A  	fcall	_LCD_CmdWrite
  5209                           
  5210                           ;newmain.c: 240: LCD_DisplayString("   SELECT ROW  ");
  5211  0E0D  309A               	movlw	low (STR_7| (0+32768))
  5212  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  5213  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  5214  0E10  00D0               	movwf	LCD_DisplayString@s
  5215  0E11  3091               	movlw	high (STR_7| (0+32768))
  5216  0E12  00D1               	movwf	LCD_DisplayString@s+1
  5217  0E13  160A  118A  2272  120A  158A  	fcall	_LCD_DisplayString
  5218                           
  5219                           ;newmain.c: 241: LCD_CmdWrite(0XC0);
  5220  0E18  30C0               	movlw	192
  5221  0E19  160A  158A  2762  120A  158A  	fcall	_LCD_CmdWrite
  5222                           
  5223                           ;newmain.c: 242: LCD_DisplayString("_1__2__3__4__5__");
  5224  0E1E  3089               	movlw	low (STR_8| (0+32768))
  5225  0E1F  1283               	bcf	3,5	;RP0=0, select bank0
  5226  0E20  1303               	bcf	3,6	;RP1=0, select bank0
  5227  0E21  00D0               	movwf	LCD_DisplayString@s
  5228  0E22  3091               	movlw	high (STR_8| (0+32768))
  5229  0E23  00D1               	movwf	LCD_DisplayString@s+1
  5230  0E24  160A  118A  2272  120A  158A  	fcall	_LCD_DisplayString
  5231                           
  5232                           ;newmain.c: 244: if(!RA1)
  5233  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  5234  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  5235  0E2B  1885               	btfsc	5,1	;volatile
  5236  0E2C  2E7F               	goto	l3752
  5237  0E2D                     l255:	
  5238                           ;newmain.c: 245: {
  5239                           ;newmain.c: 246: while(!RA1);
  5240                           
  5241  0E2D  1C85               	btfss	5,1	;volatile
  5242  0E2E  2E2D               	goto	l255
  5243  0E2F                     l3732:	
  5244                           ;newmain.c: 247: M1:
  5245                           
  5246                           
  5247                           ;newmain.c: 248: if(padcount1==0)
  5248  0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  5249  0E30  1303               	bcf	3,6	;RP1=0, select bank0
  5250  0E31  0840               	movf	_padcount1,w
  5251  0E32  0441               	iorwf	_padcount1+1,w
  5252  0E33  1D03               	btfss	3,2
  5253  0E34  2E3B               	goto	l259
  5254                           
  5255                           ;newmain.c: 249: {
  5256                           ;newmain.c: 250: STOCK_EMPTY_ROUTINE();
  5257  0E35  160A  118A  2556  120A  158A  	fcall	_STOCK_EMPTY_ROUTINE
  5258                           
  5259                           ;newmain.c: 251: break;
  5260  0E3A  2FE7               	goto	l4172
  5261  0E3B                     l259:	
  5262                           
  5263                           ;newmain.c: 252: }
  5264                           ;newmain.c: 253: INTE=1;status=1;
  5265  0E3B  160B               	bsf	11,4	;volatile
  5266  0E3C  14F1               	bsf	_status/(0+8),_status& (0+7)
  5267                           
  5268                           ;newmain.c: 254: stock=1;
  5269  0E3D  3001               	movlw	1
  5270  0E3E  00A2               	movwf	_stock
  5271  0E3F  3000               	movlw	0
  5272  0E40  00A3               	movwf	_stock+1
  5273                           
  5274                           ;newmain.c: 255: padcount=padcount1;
  5275  0E41  0841               	movf	_padcount1+1,w
  5276  0E42  00B7               	movwf	_padcount+1
  5277  0E43  0840               	movf	_padcount1,w
  5278  0E44  00B6               	movwf	_padcount
  5279                           
  5280                           ;newmain.c: 256: rupee=rupee1;
  5281  0E45  083F               	movf	_rupee1+1,w
  5282  0E46  00FD               	movwf	_rupee+1
  5283  0E47  083E               	movf	_rupee1,w
  5284  0E48  00FC               	movwf	_rupee
  5285                           
  5286                           ;newmain.c: 257: if(RD7==0)
  5287  0E49  1F88               	btfss	8,7	;volatile
  5288                           
  5289                           ;newmain.c: 258: RB1=0;
  5290  0E4A  1086               	bcf	6,1	;volatile
  5291                           
  5292                           ;newmain.c: 259: TRISA1 = 0;
  5293  0E4B  1683               	bsf	3,5	;RP0=1, select bank1
  5294  0E4C  1303               	bcf	3,6	;RP1=0, select bank1
  5295  0E4D  1085               	bcf	5,1	;volatile
  5296                           
  5297                           ;newmain.c: 260: RA1=0;
  5298  0E4E  1283               	bcf	3,5	;RP0=0, select bank0
  5299  0E4F  1303               	bcf	3,6	;RP1=0, select bank0
  5300  0E50  1085               	bcf	5,1	;volatile
  5301                           
  5302                           ;newmain.c: 261: TRISA0 = 1;
  5303  0E51  1683               	bsf	3,5	;RP0=1, select bank1
  5304  0E52  1303               	bcf	3,6	;RP1=0, select bank1
  5305  0E53  1405               	bsf	5,0	;volatile
  5306                           
  5307                           ;newmain.c: 262: TRISA5 = 1;
  5308  0E54  1685               	bsf	5,5	;volatile
  5309                           
  5310                           ;newmain.c: 263: TRISB6 = 1;
  5311  0E55  1706               	bsf	6,6	;volatile
  5312                           
  5313                           ;newmain.c: 264: TRISB7 = 1;
  5314  0E56  1786               	bsf	6,7	;volatile
  5315                           
  5316                           ;newmain.c: 265: Set_Channel(rupee);
  5317  0E57  087D               	movf	_rupee+1,w
  5318  0E58  1283               	bcf	3,5	;RP0=0, select bank0
  5319  0E59  1303               	bcf	3,6	;RP1=0, select bank0
  5320  0E5A  00CE               	movwf	Set_Channel@data+1
  5321  0E5B  087C               	movf	_rupee,w
  5322  0E5C  00CD               	movwf	Set_Channel@data
  5323  0E5D  160A  118A  24B8  120A  158A  	fcall	_Set_Channel
  5324                           
  5325                           ;newmain.c: 266: buzzer(50);count=0;coin_input=0;balance=0;
  5326  0E62  3032               	movlw	50
  5327  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  5328  0E64  1303               	bcf	3,6	;RP1=0, select bank0
  5329  0E65  00CD               	movwf	buzzer@a
  5330  0E66  3000               	movlw	0
  5331  0E67  00CE               	movwf	buzzer@a+1
  5332  0E68  160A  158A  279C  120A  158A  	fcall	_buzzer
  5333  0E6D  01FA               	clrf	_count
  5334  0E6E  01FB               	clrf	_count+1
  5335  0E6F  1170               	bcf	_coin_input/(0+8),_coin_input& (0+7)
  5336  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  5337  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  5338  0E72  01B8               	clrf	_balance
  5339  0E73  01B9               	clrf	_balance+1
  5340                           
  5341                           ;newmain.c: 267: LCD_Clear();
  5342  0E74  160A  158A  26F5  120A  158A  	fcall	_LCD_Clear
  5343                           
  5344                           ;newmain.c: 268: start = 1;
  5345  0E79  3001               	movlw	1
  5346  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  5347  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  5348  0E7C  00A0               	movwf	_start
  5349  0E7D  3000               	movlw	0
  5350  0E7E  00A1               	movwf	_start+1
  5351  0E7F                     l3752:	
  5352                           
  5353                           ;newmain.c: 269: }
  5354                           ;newmain.c: 271: if(!RA2)
  5355  0E7F  1905               	btfsc	5,2	;volatile
  5356  0E80  2ED3               	goto	l3776
  5357  0E81                     l263:	
  5358                           ;newmain.c: 272: {
  5359                           ;newmain.c: 273: while(!RA2);
  5360                           
  5361  0E81  1D05               	btfss	5,2	;volatile
  5362  0E82  2E81               	goto	l263
  5363  0E83                     l3756:	
  5364                           ;newmain.c: 274: M2:
  5365                           
  5366                           
  5367                           ;newmain.c: 275: if(padcount2==0)
  5368  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  5369  0E84  1303               	bcf	3,6	;RP1=0, select bank0
  5370  0E85  083C               	movf	_padcount2,w
  5371  0E86  043D               	iorwf	_padcount2+1,w
  5372  0E87  1D03               	btfss	3,2
  5373  0E88  2E8F               	goto	l267
  5374                           
  5375                           ;newmain.c: 276: {
  5376                           ;newmain.c: 277: STOCK_EMPTY_ROUTINE();
  5377  0E89  160A  118A  2556  120A  158A  	fcall	_STOCK_EMPTY_ROUTINE
  5378                           
  5379                           ;newmain.c: 278: break;
  5380  0E8E  2FE7               	goto	l4172
  5381  0E8F                     l267:	
  5382                           
  5383                           ;newmain.c: 279: }
  5384                           ;newmain.c: 280: INTE=1;
  5385  0E8F  160B               	bsf	11,4	;volatile
  5386                           
  5387                           ;newmain.c: 281: status=1;
  5388  0E90  14F1               	bsf	_status/(0+8),_status& (0+7)
  5389                           
  5390                           ;newmain.c: 282: stock=2;
  5391  0E91  3002               	movlw	2
  5392  0E92  00A2               	movwf	_stock
  5393  0E93  3000               	movlw	0
  5394  0E94  00A3               	movwf	_stock+1
  5395                           
  5396                           ;newmain.c: 283: padcount=padcount2;
  5397  0E95  083D               	movf	_padcount2+1,w
  5398  0E96  00B7               	movwf	_padcount+1
  5399  0E97  083C               	movf	_padcount2,w
  5400  0E98  00B6               	movwf	_padcount
  5401                           
  5402                           ;newmain.c: 284: rupee=rupee2;
  5403  0E99  083B               	movf	_rupee2+1,w
  5404  0E9A  00FD               	movwf	_rupee+1
  5405  0E9B  083A               	movf	_rupee2,w
  5406  0E9C  00FC               	movwf	_rupee
  5407                           
  5408                           ;newmain.c: 285: if(RD5==0)
  5409  0E9D  1E88               	btfss	8,5	;volatile
  5410                           
  5411                           ;newmain.c: 286: RB1=0;
  5412  0E9E  1086               	bcf	6,1	;volatile
  5413                           
  5414                           ;newmain.c: 287: TRISA0 = 0;
  5415  0E9F  1683               	bsf	3,5	;RP0=1, select bank1
  5416  0EA0  1303               	bcf	3,6	;RP1=0, select bank1
  5417  0EA1  1005               	bcf	5,0	;volatile
  5418                           
  5419                           ;newmain.c: 288: RA2=0;
  5420  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  5421  0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  5422  0EA4  1105               	bcf	5,2	;volatile
  5423                           
  5424                           ;newmain.c: 289: TRISA1 = 1;
  5425  0EA5  1683               	bsf	3,5	;RP0=1, select bank1
  5426  0EA6  1303               	bcf	3,6	;RP1=0, select bank1
  5427  0EA7  1485               	bsf	5,1	;volatile
  5428                           
  5429                           ;newmain.c: 290: TRISA5 = 1;
  5430  0EA8  1685               	bsf	5,5	;volatile
  5431                           
  5432                           ;newmain.c: 291: TRISB6 = 1;
  5433  0EA9  1706               	bsf	6,6	;volatile
  5434                           
  5435                           ;newmain.c: 292: TRISB7 = 1;
  5436  0EAA  1786               	bsf	6,7	;volatile
  5437                           
  5438                           ;newmain.c: 293: Set_Channel(rupee);
  5439  0EAB  087D               	movf	_rupee+1,w
  5440  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  5441  0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  5442  0EAE  00CE               	movwf	Set_Channel@data+1
  5443  0EAF  087C               	movf	_rupee,w
  5444  0EB0  00CD               	movwf	Set_Channel@data
  5445  0EB1  160A  118A  24B8  120A  158A  	fcall	_Set_Channel
  5446                           
  5447                           ;newmain.c: 294: buzzer(50);count=0;coin_input=0;balance=0;
  5448  0EB6  3032               	movlw	50
  5449  0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  5450  0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  5451  0EB9  00CD               	movwf	buzzer@a
  5452  0EBA  3000               	movlw	0
  5453  0EBB  00CE               	movwf	buzzer@a+1
  5454  0EBC  160A  158A  279C  120A  158A  	fcall	_buzzer
  5455  0EC1  01FA               	clrf	_count
  5456  0EC2  01FB               	clrf	_count+1
  5457  0EC3  1170               	bcf	_coin_input/(0+8),_coin_input& (0+7)
  5458  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  5459  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  5460  0EC6  01B8               	clrf	_balance
  5461  0EC7  01B9               	clrf	_balance+1
  5462                           
  5463                           ;newmain.c: 295: LCD_Clear();
  5464  0EC8  160A  158A  26F5  120A  158A  	fcall	_LCD_Clear
  5465                           
  5466                           ;newmain.c: 296: start = 2;
  5467  0ECD  3002               	movlw	2
  5468  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  5469  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  5470  0ED0  00A0               	movwf	_start
  5471  0ED1  3000               	movlw	0
  5472  0ED2  00A1               	movwf	_start+1
  5473  0ED3                     l3776:	
  5474                           
  5475                           ;newmain.c: 297: }
  5476                           ;newmain.c: 299: if(!RA5)
  5477  0ED3  1A85               	btfsc	5,5	;volatile
  5478  0ED4  2F27               	goto	l3800
  5479  0ED5                     l270:	
  5480                           ;newmain.c: 300: {
  5481                           ;newmain.c: 301: while(!RA5);
  5482                           
  5483  0ED5  1E85               	btfss	5,5	;volatile
  5484  0ED6  2ED5               	goto	l270
  5485  0ED7                     l3780:	
  5486                           ;newmain.c: 302: M3:
  5487                           
  5488                           
  5489                           ;newmain.c: 303: if(padcount3==0)
  5490  0ED7  1283               	bcf	3,5	;RP0=0, select bank0
  5491  0ED8  1303               	bcf	3,6	;RP1=0, select bank0
  5492  0ED9  0834               	movf	_padcount3,w
  5493  0EDA  0435               	iorwf	_padcount3+1,w
  5494  0EDB  1D03               	btfss	3,2
  5495  0EDC  2EE3               	goto	l274
  5496                           
  5497                           ;newmain.c: 304: {
  5498                           ;newmain.c: 305: STOCK_EMPTY_ROUTINE();break;
  5499  0EDD  160A  118A  2556  120A  158A  	fcall	_STOCK_EMPTY_ROUTINE
  5500  0EE2  2FE7               	goto	l4172
  5501  0EE3                     l274:	
  5502                           
  5503                           ;newmain.c: 306: }
  5504                           ;newmain.c: 307: INTE=1;status=1;
  5505  0EE3  160B               	bsf	11,4	;volatile
  5506  0EE4  14F1               	bsf	_status/(0+8),_status& (0+7)
  5507                           
  5508                           ;newmain.c: 308: stock=3;
  5509  0EE5  3003               	movlw	3
  5510  0EE6  00A2               	movwf	_stock
  5511  0EE7  3000               	movlw	0
  5512  0EE8  00A3               	movwf	_stock+1
  5513                           
  5514                           ;newmain.c: 309: padcount=padcount3;
  5515  0EE9  0835               	movf	_padcount3+1,w
  5516  0EEA  00B7               	movwf	_padcount+1
  5517  0EEB  0834               	movf	_padcount3,w
  5518  0EEC  00B6               	movwf	_padcount
  5519                           
  5520                           ;newmain.c: 310: rupee=rupee3;
  5521  0EED  0833               	movf	_rupee3+1,w
  5522  0EEE  00FD               	movwf	_rupee+1
  5523  0EEF  0832               	movf	_rupee3,w
  5524  0EF0  00FC               	movwf	_rupee
  5525                           
  5526                           ;newmain.c: 311: if(RC7==0)
  5527  0EF1  1F87               	btfss	7,7	;volatile
  5528                           
  5529                           ;newmain.c: 312: RB1=0;
  5530  0EF2  1086               	bcf	6,1	;volatile
  5531                           
  5532                           ;newmain.c: 313: TRISA5 = 0;
  5533  0EF3  1683               	bsf	3,5	;RP0=1, select bank1
  5534  0EF4  1303               	bcf	3,6	;RP1=0, select bank1
  5535  0EF5  1285               	bcf	5,5	;volatile
  5536                           
  5537                           ;newmain.c: 314: RA5=0;
  5538  0EF6  1283               	bcf	3,5	;RP0=0, select bank0
  5539  0EF7  1303               	bcf	3,6	;RP1=0, select bank0
  5540  0EF8  1285               	bcf	5,5	;volatile
  5541                           
  5542                           ;newmain.c: 315: TRISA1 = 1;
  5543  0EF9  1683               	bsf	3,5	;RP0=1, select bank1
  5544  0EFA  1303               	bcf	3,6	;RP1=0, select bank1
  5545  0EFB  1485               	bsf	5,1	;volatile
  5546                           
  5547                           ;newmain.c: 316: TRISA0 = 1;
  5548  0EFC  1405               	bsf	5,0	;volatile
  5549                           
  5550                           ;newmain.c: 317: TRISB6 = 1;
  5551  0EFD  1706               	bsf	6,6	;volatile
  5552                           
  5553                           ;newmain.c: 318: TRISB7 = 1;
  5554  0EFE  1786               	bsf	6,7	;volatile
  5555                           
  5556                           ;newmain.c: 319: Set_Channel(rupee);
  5557  0EFF  087D               	movf	_rupee+1,w
  5558  0F00  1283               	bcf	3,5	;RP0=0, select bank0
  5559  0F01  1303               	bcf	3,6	;RP1=0, select bank0
  5560  0F02  00CE               	movwf	Set_Channel@data+1
  5561  0F03  087C               	movf	_rupee,w
  5562  0F04  00CD               	movwf	Set_Channel@data
  5563  0F05  160A  118A  24B8  120A  158A  	fcall	_Set_Channel
  5564                           
  5565                           ;newmain.c: 320: buzzer(50);count=0;coin_input=0;balance=0;
  5566  0F0A  3032               	movlw	50
  5567  0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  5568  0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  5569  0F0D  00CD               	movwf	buzzer@a
  5570  0F0E  3000               	movlw	0
  5571  0F0F  00CE               	movwf	buzzer@a+1
  5572  0F10  160A  158A  279C  120A  158A  	fcall	_buzzer
  5573  0F15  01FA               	clrf	_count
  5574  0F16  01FB               	clrf	_count+1
  5575  0F17  1170               	bcf	_coin_input/(0+8),_coin_input& (0+7)
  5576  0F18  1283               	bcf	3,5	;RP0=0, select bank0
  5577  0F19  1303               	bcf	3,6	;RP1=0, select bank0
  5578  0F1A  01B8               	clrf	_balance
  5579  0F1B  01B9               	clrf	_balance+1
  5580                           
  5581                           ;newmain.c: 321: LCD_Clear();
  5582  0F1C  160A  158A  26F5  120A  158A  	fcall	_LCD_Clear
  5583                           
  5584                           ;newmain.c: 322: start = 3;
  5585  0F21  3003               	movlw	3
  5586  0F22  1283               	bcf	3,5	;RP0=0, select bank0
  5587  0F23  1303               	bcf	3,6	;RP1=0, select bank0
  5588  0F24  00A0               	movwf	_start
  5589  0F25  3000               	movlw	0
  5590  0F26  00A1               	movwf	_start+1
  5591  0F27                     l3800:	
  5592                           
  5593                           ;newmain.c: 323: }
  5594                           ;newmain.c: 324: if(!RB6)
  5595  0F27  1B06               	btfsc	6,6	;volatile
  5596  0F28  2F7B               	goto	l3824
  5597  0F29                     l277:	
  5598                           ;newmain.c: 325: {
  5599                           ;newmain.c: 326: while(!RB6);
  5600                           
  5601  0F29  1F06               	btfss	6,6	;volatile
  5602  0F2A  2F29               	goto	l277
  5603  0F2B                     l3804:	
  5604                           ;newmain.c: 327: M4:
  5605                           
  5606                           
  5607                           ;newmain.c: 328: if(padcount4==0)
  5608  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  5609  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  5610  0F2D  0830               	movf	_padcount4,w
  5611  0F2E  0431               	iorwf	_padcount4+1,w
  5612  0F2F  1D03               	btfss	3,2
  5613  0F30  2F37               	goto	l281
  5614                           
  5615                           ;newmain.c: 329: {
  5616                           ;newmain.c: 330: STOCK_EMPTY_ROUTINE();break;
  5617  0F31  160A  118A  2556  120A  158A  	fcall	_STOCK_EMPTY_ROUTINE
  5618  0F36  2FE7               	goto	l4172
  5619  0F37                     l281:	
  5620                           
  5621                           ;newmain.c: 331: }
  5622                           ;newmain.c: 332: INTE=1;status=1;
  5623  0F37  160B               	bsf	11,4	;volatile
  5624  0F38  14F1               	bsf	_status/(0+8),_status& (0+7)
  5625                           
  5626                           ;newmain.c: 333: stock=4;
  5627  0F39  3004               	movlw	4
  5628  0F3A  00A2               	movwf	_stock
  5629  0F3B  3000               	movlw	0
  5630  0F3C  00A3               	movwf	_stock+1
  5631                           
  5632                           ;newmain.c: 334: padcount=padcount4;
  5633  0F3D  0831               	movf	_padcount4+1,w
  5634  0F3E  00B7               	movwf	_padcount+1
  5635  0F3F  0830               	movf	_padcount4,w
  5636  0F40  00B6               	movwf	_padcount
  5637                           
  5638                           ;newmain.c: 335: rupee=rupee4;
  5639  0F41  082F               	movf	_rupee4+1,w
  5640  0F42  00FD               	movwf	_rupee+1
  5641  0F43  082E               	movf	_rupee4,w
  5642  0F44  00FC               	movwf	_rupee
  5643                           
  5644                           ;newmain.c: 336: if(RC5==0)
  5645  0F45  1E87               	btfss	7,5	;volatile
  5646                           
  5647                           ;newmain.c: 337: RB1=0;
  5648  0F46  1086               	bcf	6,1	;volatile
  5649                           
  5650                           ;newmain.c: 338: TRISB6 = 0;
  5651  0F47  1683               	bsf	3,5	;RP0=1, select bank1
  5652  0F48  1303               	bcf	3,6	;RP1=0, select bank1
  5653  0F49  1306               	bcf	6,6	;volatile
  5654                           
  5655                           ;newmain.c: 339: RB6=0;
  5656  0F4A  1283               	bcf	3,5	;RP0=0, select bank0
  5657  0F4B  1303               	bcf	3,6	;RP1=0, select bank0
  5658  0F4C  1306               	bcf	6,6	;volatile
  5659                           
  5660                           ;newmain.c: 341: TRISA1 = 1;
  5661  0F4D  1683               	bsf	3,5	;RP0=1, select bank1
  5662  0F4E  1303               	bcf	3,6	;RP1=0, select bank1
  5663  0F4F  1485               	bsf	5,1	;volatile
  5664                           
  5665                           ;newmain.c: 342: TRISA0 = 1;
  5666  0F50  1405               	bsf	5,0	;volatile
  5667                           
  5668                           ;newmain.c: 343: TRISA5 = 1;
  5669  0F51  1685               	bsf	5,5	;volatile
  5670                           
  5671                           ;newmain.c: 344: TRISB7 = 1;
  5672  0F52  1786               	bsf	6,7	;volatile
  5673                           
  5674                           ;newmain.c: 345: Set_Channel(rupee);
  5675  0F53  087D               	movf	_rupee+1,w
  5676  0F54  1283               	bcf	3,5	;RP0=0, select bank0
  5677  0F55  1303               	bcf	3,6	;RP1=0, select bank0
  5678  0F56  00CE               	movwf	Set_Channel@data+1
  5679  0F57  087C               	movf	_rupee,w
  5680  0F58  00CD               	movwf	Set_Channel@data
  5681  0F59  160A  118A  24B8  120A  158A  	fcall	_Set_Channel
  5682                           
  5683                           ;newmain.c: 346: buzzer(50);count=0;coin_input=0;balance=0;
  5684  0F5E  3032               	movlw	50
  5685  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  5686  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  5687  0F61  00CD               	movwf	buzzer@a
  5688  0F62  3000               	movlw	0
  5689  0F63  00CE               	movwf	buzzer@a+1
  5690  0F64  160A  158A  279C  120A  158A  	fcall	_buzzer
  5691  0F69  01FA               	clrf	_count
  5692  0F6A  01FB               	clrf	_count+1
  5693  0F6B  1170               	bcf	_coin_input/(0+8),_coin_input& (0+7)
  5694  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  5695  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  5696  0F6E  01B8               	clrf	_balance
  5697  0F6F  01B9               	clrf	_balance+1
  5698                           
  5699                           ;newmain.c: 347: LCD_Clear();
  5700  0F70  160A  158A  26F5  120A  158A  	fcall	_LCD_Clear
  5701                           
  5702                           ;newmain.c: 348: start = 4;
  5703  0F75  3004               	movlw	4
  5704  0F76  1283               	bcf	3,5	;RP0=0, select bank0
  5705  0F77  1303               	bcf	3,6	;RP1=0, select bank0
  5706  0F78  00A0               	movwf	_start
  5707  0F79  3000               	movlw	0
  5708  0F7A  00A1               	movwf	_start+1
  5709  0F7B                     l3824:	
  5710                           
  5711                           ;newmain.c: 349: }
  5712                           ;newmain.c: 350: if(!RB7)
  5713  0F7B  1B86               	btfsc	6,7	;volatile
  5714  0F7C  2FCF               	goto	l3848
  5715  0F7D                     l284:	
  5716                           ;newmain.c: 351: {
  5717                           ;newmain.c: 352: while(!RB7);
  5718                           
  5719  0F7D  1F86               	btfss	6,7	;volatile
  5720  0F7E  2F7D               	goto	l284
  5721  0F7F                     l3828:	
  5722                           ;newmain.c: 353: M5:
  5723                           
  5724                           
  5725                           ;newmain.c: 354: if(padcount5==0)
  5726  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  5727  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  5728  0F81  082C               	movf	_padcount5,w
  5729  0F82  042D               	iorwf	_padcount5+1,w
  5730  0F83  1D03               	btfss	3,2
  5731  0F84  2F8B               	goto	l288
  5732                           
  5733                           ;newmain.c: 355: {
  5734                           ;newmain.c: 356: STOCK_EMPTY_ROUTINE();break;
  5735  0F85  160A  118A  2556  120A  158A  	fcall	_STOCK_EMPTY_ROUTINE
  5736  0F8A  2FE7               	goto	l4172
  5737  0F8B                     l288:	
  5738                           
  5739                           ;newmain.c: 357: }
  5740                           ;newmain.c: 360: INTE=1;status=1;
  5741  0F8B  160B               	bsf	11,4	;volatile
  5742  0F8C  14F1               	bsf	_status/(0+8),_status& (0+7)
  5743                           
  5744                           ;newmain.c: 361: stock=5;
  5745  0F8D  3005               	movlw	5
  5746  0F8E  00A2               	movwf	_stock
  5747  0F8F  3000               	movlw	0
  5748  0F90  00A3               	movwf	_stock+1
  5749                           
  5750                           ;newmain.c: 362: padcount=padcount5;
  5751  0F91  082D               	movf	_padcount5+1,w
  5752  0F92  00B7               	movwf	_padcount+1
  5753  0F93  082C               	movf	_padcount5,w
  5754  0F94  00B6               	movwf	_padcount
  5755                           
  5756                           ;newmain.c: 363: rupee=rupee5;
  5757  0F95  082B               	movf	_rupee5+1,w
  5758  0F96  00FD               	movwf	_rupee+1
  5759  0F97  082A               	movf	_rupee5,w
  5760  0F98  00FC               	movwf	_rupee
  5761                           
  5762                           ;newmain.c: 364: if(RD3==0)
  5763  0F99  1D88               	btfss	8,3	;volatile
  5764                           
  5765                           ;newmain.c: 365: RB1=0;
  5766  0F9A  1086               	bcf	6,1	;volatile
  5767                           
  5768                           ;newmain.c: 366: TRISB7 = 0;
  5769  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  5770  0F9C  1303               	bcf	3,6	;RP1=0, select bank1
  5771  0F9D  1386               	bcf	6,7	;volatile
  5772                           
  5773                           ;newmain.c: 367: RB7=0;
  5774  0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  5775  0F9F  1303               	bcf	3,6	;RP1=0, select bank0
  5776  0FA0  1386               	bcf	6,7	;volatile
  5777                           
  5778                           ;newmain.c: 368: TRISA1 = 1;
  5779  0FA1  1683               	bsf	3,5	;RP0=1, select bank1
  5780  0FA2  1303               	bcf	3,6	;RP1=0, select bank1
  5781  0FA3  1485               	bsf	5,1	;volatile
  5782                           
  5783                           ;newmain.c: 369: TRISA0 = 1;
  5784  0FA4  1405               	bsf	5,0	;volatile
  5785                           
  5786                           ;newmain.c: 370: TRISA5 = 1;
  5787  0FA5  1685               	bsf	5,5	;volatile
  5788                           
  5789                           ;newmain.c: 371: TRISB6 = 1;
  5790  0FA6  1706               	bsf	6,6	;volatile
  5791                           
  5792                           ;newmain.c: 372: Set_Channel(rupee);
  5793  0FA7  087D               	movf	_rupee+1,w
  5794  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  5795  0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  5796  0FAA  00CE               	movwf	Set_Channel@data+1
  5797  0FAB  087C               	movf	_rupee,w
  5798  0FAC  00CD               	movwf	Set_Channel@data
  5799  0FAD  160A  118A  24B8  120A  158A  	fcall	_Set_Channel
  5800                           
  5801                           ;newmain.c: 373: buzzer(50);count=0;coin_input=0;balance=0;
  5802  0FB2  3032               	movlw	50
  5803  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  5804  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  5805  0FB5  00CD               	movwf	buzzer@a
  5806  0FB6  3000               	movlw	0
  5807  0FB7  00CE               	movwf	buzzer@a+1
  5808  0FB8  160A  158A  279C  120A  158A  	fcall	_buzzer
  5809  0FBD  01FA               	clrf	_count
  5810  0FBE  01FB               	clrf	_count+1
  5811  0FBF  1170               	bcf	_coin_input/(0+8),_coin_input& (0+7)
  5812  0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  5813  0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  5814  0FC2  01B8               	clrf	_balance
  5815  0FC3  01B9               	clrf	_balance+1
  5816                           
  5817                           ;newmain.c: 374: LCD_Clear();
  5818  0FC4  160A  158A  26F5  120A  158A  	fcall	_LCD_Clear
  5819                           
  5820                           ;newmain.c: 375: start = 5;
  5821  0FC9  3005               	movlw	5
  5822  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  5823  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  5824  0FCC  00A0               	movwf	_start
  5825  0FCD  3000               	movlw	0
  5826  0FCE  00A1               	movwf	_start+1
  5827  0FCF                     l3848:	
  5828                           
  5829                           ;newmain.c: 376: }
  5830                           ;newmain.c: 377: if(RE3==0)
  5831  0FCF  1989               	btfsc	9,3	;volatile
  5832  0FD0  2E05               	goto	l252
  5833  0FD1                     l291:	
  5834                           ;newmain.c: 378: {
  5835                           ;newmain.c: 379: while(RE3==0);
  5836                           
  5837  0FD1  1D89               	btfss	9,3	;volatile
  5838  0FD2  2FD1               	goto	l291
  5839                           
  5840                           ;newmain.c: 380: status=0;
  5841  0FD3  10F1               	bcf	_status/(0+8),_status& (0+7)
  5842                           
  5843                           ;newmain.c: 381: menu=1;
  5844  0FD4  1471               	bsf	_menu/(0+8),_menu& (0+7)
  5845                           
  5846                           ;newmain.c: 382: buzzer(50);
  5847  0FD5  3032               	movlw	50
  5848  0FD6  00CD               	movwf	buzzer@a
  5849  0FD7  3000               	movlw	0
  5850  0FD8  00CE               	movwf	buzzer@a+1
  5851  0FD9  160A  158A  279C  120A  158A  	fcall	_buzzer
  5852                           
  5853                           ;newmain.c: 383: LCD_Clear();
  5854  0FDE  160A  158A  26F5  120A  158A  	fcall	_LCD_Clear
  5855                           
  5856                           ;newmain.c: 384: start = 0;
  5857  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  5858  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  5859  0FE5  01A0               	clrf	_start
  5860  0FE6  01A1               	clrf	_start+1
  5861  0FE7                     l4172:	
  5862                           ;newmain.c: 385: break;
  5863                           
  5864  0FE7  120A  118A  1CF1   	btfss	_status/(0+8),_status& (0+7)
  5865  0FEA  2A0B               	goto	l511
  5866                           
  5867                           ;newmain.c: 390: {
  5868                           ;newmain.c: 392: LCD_CmdWrite(0X80);
  5869                           
  5870                           ;newmain.c: 386: }
  5871                           ;newmain.c: 387: }
  5872                           ;newmain.c: 389: while(status)
  5873  0FEB  3080               	movlw	128
  5874  0FEC  160A  158A  2762  120A  158A  	fcall	_LCD_CmdWrite
  5875                           
  5876                           ;newmain.c: 393: LCD_DisplayString(" ROW_");
  5877  0FF1  3005               	movlw	low ((STR_29+1)| (0+32768))
  5878  0FF2  1283               	bcf	3,5	;RP0=0, select bank0
  5879  0FF3  1303               	bcf	3,6	;RP1=0, select bank0
  5880  0FF4  00D0               	movwf	LCD_DisplayString@s
  5881  0FF5  3092               	movlw	high ((STR_29+1)| (0+32768))
  5882  0FF6  00D1               	movwf	LCD_DisplayString@s+1
  5883  0FF7  160A  118A  2272   	fcall	_LCD_DisplayString
  5884                           
  5885                           ;newmain.c: 394: switch(stock)
  5886  0FFA  160A  118A  2E88   	goto	l3872
  5887  0FFD                     L17:	
  5888  0FFD                     L16:	
  5889  0FFD  120A  118A  2EB6   	ljmp	l628
  5890                           
  5891                           	psect	maintext_split_2
  5892  1679                     l3860:	
  5893                           ;newmain.c: 395: {
  5894                           ;newmain.c: 396: case 1: stock_data='1';break;
  5895                           
  5896  1679  3031               	movlw	49
  5897  167A  1283               	bcf	3,5	;RP0=0, select bank0
  5898  167B  1303               	bcf	3,6	;RP1=0, select bank0
  5899  167C  2E84               	goto	L4
  5900  167D                     l3862:	
  5901                           ;newmain.c: 397: case 2: stock_data='2';break;
  5902                           
  5903  167D  3032               	movlw	50
  5904  167E  2E84               	goto	L4
  5905  167F                     l3864:	
  5906                           ;newmain.c: 398: case 3: stock_data='3';break;
  5907                           
  5908  167F  3033               	movlw	51
  5909  1680  2E84               	goto	L4
  5910  1681                     l3866:	
  5911                           ;newmain.c: 399: case 4: stock_data='4';break;
  5912                           
  5913  1681  3034               	movlw	52
  5914  1682  2E84               	goto	L4
  5915  1683                     l3868:	
  5916                           ;newmain.c: 400: case 5: stock_data='5';break;
  5917                           
  5918  1683  3035               	movlw	53
  5919  1684                     L4:	
  5920  1684  00EB               	movwf	??_main
  5921  1685  086B               	movf	??_main,w
  5922  1686  00C2               	movwf	_stock_data
  5923                           
  5924                           ;newmain.c: 401: }
  5925  1687  2EA0               	goto	l3874
  5926  1688                     l3872:	
  5927                           
  5928                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5929                           ; Switch size 1, requested type "space"
  5930                           ; Number of cases is 1, Range of values is 0 to 0
  5931                           ; switch strategies available:
  5932                           ; Name         Instructions Cycles
  5933                           ; simple_byte            4     3 (average)
  5934                           ; direct_byte           11     8 (fixed)
  5935                           ; jumptable            260     6 (fixed)
  5936                           ;	Chosen strategy is simple_byte
  5937  1688  1283               	bcf	3,5	;RP0=0, select bank0
  5938  1689  1303               	bcf	3,6	;RP1=0, select bank0
  5939  168A  0823               	movf	_stock+1,w
  5940  168B  3A00               	xorlw	0	; case 0
  5941  168C  1903               	skipnz
  5942  168D  2E8F               	goto	l5050
  5943  168E  2EA0               	goto	l3874
  5944  168F                     l5050:	
  5945                           
  5946                           ; Switch size 1, requested type "space"
  5947                           ; Number of cases is 5, Range of values is 1 to 5
  5948                           ; switch strategies available:
  5949                           ; Name         Instructions Cycles
  5950                           ; simple_byte           16     9 (average)
  5951                           ; direct_byte           26    11 (fixed)
  5952                           ; jumptable            263     9 (fixed)
  5953                           ;	Chosen strategy is simple_byte
  5954  168F  0822               	movf	_stock,w
  5955  1690  3A01               	xorlw	1	; case 1
  5956  1691  1903               	skipnz
  5957  1692  2E79               	goto	l3860
  5958  1693  3A03               	xorlw	3	; case 2
  5959  1694  1903               	skipnz
  5960  1695  2E7D               	goto	l3862
  5961  1696  3A01               	xorlw	1	; case 3
  5962  1697  1903               	skipnz
  5963  1698  2E7F               	goto	l3864
  5964  1699  3A07               	xorlw	7	; case 4
  5965  169A  1903               	skipnz
  5966  169B  2E81               	goto	l3866
  5967  169C  3A01               	xorlw	1	; case 5
  5968  169D  1903               	skipnz
  5969  169E  2E83               	goto	l3868
  5970  169F  2EA0               	goto	l3874
  5971  16A0                     l3874:	
  5972                           
  5973                           ;newmain.c: 402: LCD_DataWrite(stock_data);
  5974  16A0  0842               	movf	_stock_data,w
  5975  16A1  160A  158A  277F  160A  118A  	fcall	_LCD_DataWrite
  5976                           
  5977                           ;newmain.c: 403: LCD_DataWrite(':');
  5978  16A6  303A               	movlw	58
  5979  16A7  160A  158A  277F  160A  118A  	fcall	_LCD_DataWrite
  5980                           
  5981                           ;newmain.c: 404: display(padcount);
  5982  16AC  1283               	bcf	3,5	;RP0=0, select bank0
  5983  16AD  1303               	bcf	3,6	;RP1=0, select bank0
  5984  16AE  0837               	movf	_padcount+1,w
  5985  16AF  00EA               	movwf	display@data+1
  5986  16B0  0836               	movf	_padcount,w
  5987  16B1  00E9               	movwf	display@data
  5988  16B2  160A  158A  272E  160A  118A  	fcall	_display
  5989                           
  5990                           ;newmain.c: 405: LCD_DisplayString(" / ");
  5991  16B7  3010               	movlw	low (STR_10| (0+32768))
  5992  16B8  1283               	bcf	3,5	;RP0=0, select bank0
  5993  16B9  1303               	bcf	3,6	;RP1=0, select bank0
  5994  16BA  00D0               	movwf	LCD_DisplayString@s
  5995  16BB  3092               	movlw	high (STR_10| (0+32768))
  5996  16BC  00D1               	movwf	LCD_DisplayString@s+1
  5997  16BD  160A  118A  2272  160A  118A  	fcall	_LCD_DisplayString
  5998                           
  5999                           ;newmain.c: 406: LCD_DataWrite(0x00);
  6000  16C2  3000               	movlw	0
  6001  16C3  160A  158A  277F  160A  118A  	fcall	_LCD_DataWrite
  6002                           
  6003                           ;newmain.c: 407: display_price(rupee);
  6004  16C8  087D               	movf	_rupee+1,w
  6005  16C9  1283               	bcf	3,5	;RP0=0, select bank0
  6006  16CA  1303               	bcf	3,6	;RP1=0, select bank0
  6007  16CB  00EA               	movwf	display_price@data+1
  6008  16CC  087C               	movf	_rupee,w
  6009  16CD  00E9               	movwf	display_price@data
  6010  16CE  160A  158A  2748  160A  118A  	fcall	_display_price
  6011                           
  6012                           ;newmain.c: 408: LCD_CmdWrite(0XC0);
  6013  16D3  30C0               	movlw	192
  6014  16D4  160A  158A  2762  160A  118A  	fcall	_LCD_CmdWrite
  6015                           
  6016                           ;newmain.c: 409: LCD_DisplayString(" INSERT NOTES...");
  6017  16D9  3034               	movlw	low (STR_11| (0+32768))
  6018  16DA  1283               	bcf	3,5	;RP0=0, select bank0
  6019  16DB  1303               	bcf	3,6	;RP1=0, select bank0
  6020  16DC  00D0               	movwf	LCD_DisplayString@s
  6021  16DD  3091               	movlw	high (STR_11| (0+32768))
  6022  16DE  00D1               	movwf	LCD_DisplayString@s+1
  6023  16DF  160A  118A  2272  160A  118A  	fcall	_LCD_DisplayString
  6024                           
  6025                           ;newmain.c: 412: if(!RA4)
  6026  16E4  1283               	bcf	3,5	;RP0=0, select bank0
  6027  16E5  1303               	bcf	3,6	;RP1=0, select bank0
  6028  16E6  1A05               	btfsc	5,4	;volatile
  6029  16E7  2F0E               	goto	l3910
  6030  16E8                     l304:	
  6031                           ;newmain.c: 413: {
  6032                           ;newmain.c: 414: while(!RA4);
  6033                           
  6034  16E8  1E05               	btfss	5,4	;volatile
  6035  16E9  2EE8               	goto	l304
  6036                           
  6037                           ;newmain.c: 415: padcount=0;rupee=0;stock=0;
  6038  16EA  01B6               	clrf	_padcount
  6039  16EB  01B7               	clrf	_padcount+1
  6040  16EC  01FC               	clrf	_rupee
  6041  16ED  01FD               	clrf	_rupee+1
  6042  16EE  01A2               	clrf	_stock
  6043  16EF  01A3               	clrf	_stock+1
  6044                           
  6045                           ;newmain.c: 416: INTE=0;RB1=1;
  6046  16F0  120B               	bcf	11,4	;volatile
  6047  16F1  1486               	bsf	6,1	;volatile
  6048                           
  6049                           ;newmain.c: 417: status=0;
  6050  16F2  10F1               	bcf	_status/(0+8),_status& (0+7)
  6051                           
  6052                           ;newmain.c: 418: TRISA1 = 1;
  6053  16F3  1683               	bsf	3,5	;RP0=1, select bank1
  6054  16F4  1303               	bcf	3,6	;RP1=0, select bank1
  6055  16F5  1485               	bsf	5,1	;volatile
  6056                           
  6057                           ;newmain.c: 419: TRISA0 = 1;
  6058  16F6  1405               	bsf	5,0	;volatile
  6059                           
  6060                           ;newmain.c: 420: TRISA5 = 1;
  6061  16F7  1685               	bsf	5,5	;volatile
  6062                           
  6063                           ;newmain.c: 421: TRISB6 = 1;
  6064  16F8  1706               	bsf	6,6	;volatile
  6065                           
  6066                           ;newmain.c: 422: TRISB7 = 1;
  6067  16F9  1786               	bsf	6,7	;volatile
  6068                           
  6069                           ;newmain.c: 423: LCD_Clear();
  6070  16FA  160A  158A  26F5  160A  118A  	fcall	_LCD_Clear
  6071                           
  6072                           ;newmain.c: 424: buzzer(50);
  6073  16FF  3032               	movlw	50
  6074  1700  1283               	bcf	3,5	;RP0=0, select bank0
  6075  1701  1303               	bcf	3,6	;RP1=0, select bank0
  6076  1702  00CD               	movwf	buzzer@a
  6077  1703  3000               	movlw	0
  6078  1704  00CE               	movwf	buzzer@a+1
  6079  1705  160A  158A  279C  160A  118A  	fcall	_buzzer
  6080                           
  6081                           ;newmain.c: 425: start = 0;
  6082  170A  1283               	bcf	3,5	;RP0=0, select bank0
  6083  170B  1303               	bcf	3,6	;RP1=0, select bank0
  6084  170C  01A0               	clrf	_start
  6085  170D  01A1               	clrf	_start+1
  6086  170E                     l3910:	
  6087                           
  6088                           ;newmain.c: 426: }
  6089                           ;newmain.c: 430: if(start == 1)
  6090  170E  0320               	decf	_start,w
  6091  170F  0421               	iorwf	_start+1,w
  6092  1710  1D03               	btfss	3,2
  6093  1711  2F49               	goto	l3936
  6094                           
  6095                           ;newmain.c: 431: {
  6096                           ;newmain.c: 432: if(RE3==0)
  6097  1712  1989               	btfsc	9,3	;volatile
  6098  1713  2F19               	goto	l308
  6099  1714                     l309:	
  6100                           ;newmain.c: 433: {
  6101                           ;newmain.c: 434: while(RE3==0);
  6102                           
  6103  1714  1D89               	btfss	9,3	;volatile
  6104  1715  2F14               	goto	l309
  6105  1716                     L25:	
  6106  1716  120A  158A  2966   	goto	L14
  6107  1719                     l308:	
  6108                           ;newmain.c: 440: break;
  6109                           
  6110                           ;newmain.c: 439: start = 0;
  6111                           
  6112                           ;newmain.c: 438: LCD_Clear();
  6113                           
  6114                           ;newmain.c: 437: buzzer(50);
  6115                           
  6116                           ;newmain.c: 436: menu=1;
  6117                           
  6118                           ;newmain.c: 435: status=0;
  6119                           
  6120                           
  6121                           ;newmain.c: 441: }
  6122                           ;newmain.c: 442: if(!RA2)
  6123  1719  1905               	btfsc	5,2	;volatile
  6124  171A  2F25               	goto	l313
  6125  171B                     l314:	
  6126                           ;newmain.c: 443: {
  6127                           ;newmain.c: 444: while(!RA2);
  6128                           
  6129  171B  1D05               	btfss	5,2	;volatile
  6130  171C  2F1B               	goto	l314
  6131                           
  6132                           ;newmain.c: 445: escprocess();
  6133  171D  160A  158A  27BC  160A  118A  	fcall	_escprocess
  6134  1722                     L22:	
  6135                           
  6136                           ;newmain.c: 446: goto M2;
  6137  1722  120A  158A  2E83   	goto	l3756
  6138  1725                     l313:	
  6139                           
  6140                           ;newmain.c: 447: }
  6141                           ;newmain.c: 448: if(!RA5)
  6142  1725  1A85               	btfsc	5,5	;volatile
  6143  1726  2F31               	goto	l317
  6144  1727                     l318:	
  6145                           ;newmain.c: 449: {
  6146                           ;newmain.c: 450: while(!RA5);
  6147                           
  6148  1727  1E85               	btfss	5,5	;volatile
  6149  1728  2F27               	goto	l318
  6150                           
  6151                           ;newmain.c: 451: escprocess();
  6152  1729  160A  158A  27BC  160A  118A  	fcall	_escprocess
  6153  172E                     L18:	
  6154                           
  6155                           ;newmain.c: 452: goto M3;
  6156  172E  120A  158A  2ED7   	goto	l3780
  6157  1731                     l317:	
  6158                           
  6159                           ;newmain.c: 453: }
  6160                           ;newmain.c: 454: if(!RB6)
  6161  1731  1B06               	btfsc	6,6	;volatile
  6162  1732  2F3D               	goto	l321
  6163  1733                     l322:	
  6164                           ;newmain.c: 455: {
  6165                           ;newmain.c: 456: while(!RB6);
  6166                           
  6167  1733  1F06               	btfss	6,6	;volatile
  6168  1734  2F33               	goto	l322
  6169                           
  6170                           ;newmain.c: 457: escprocess();
  6171  1735  160A  158A  27BC  160A  118A  	fcall	_escprocess
  6172  173A                     L19:	
  6173                           
  6174                           ;newmain.c: 458: goto M4;
  6175  173A  120A  158A  2F2B   	goto	l3804
  6176  173D                     l321:	
  6177                           
  6178                           ;newmain.c: 459: }
  6179                           ;newmain.c: 460: if(!RB7)
  6180  173D  1B86               	btfsc	6,7	;volatile
  6181  173E  2F49               	goto	l3936
  6182  173F                     l326:	
  6183                           ;newmain.c: 461: {
  6184                           ;newmain.c: 462: while(!RB7);
  6185                           
  6186  173F  1F86               	btfss	6,7	;volatile
  6187  1740  2F3F               	goto	l326
  6188                           
  6189                           ;newmain.c: 463: escprocess();
  6190  1741  160A  158A  27BC  160A  118A  	fcall	_escprocess
  6191  1746                     L20:	
  6192                           
  6193                           ;newmain.c: 464: goto M5;
  6194  1746  120A  158A  2F7F   	goto	l3828
  6195  1749                     l3936:	
  6196                           
  6197                           ;newmain.c: 465: }
  6198                           ;newmain.c: 466: }
  6199                           ;newmain.c: 467: if(start == 2)
  6200  1749  3002               	movlw	2
  6201  174A  1283               	bcf	3,5	;RP0=0, select bank0
  6202  174B  1303               	bcf	3,6	;RP1=0, select bank0
  6203  174C  0620               	xorwf	_start,w
  6204  174D  0421               	iorwf	_start+1,w
  6205  174E  1D03               	btfss	3,2
  6206  174F  2F95               	goto	l3964
  6207                           
  6208                           ;newmain.c: 468: {
  6209                           ;newmain.c: 469: if(RE3==0)
  6210  1750  1989               	btfsc	9,3	;volatile
  6211  1751  2F6B               	goto	l330
  6212  1752                     l331:	
  6213                           ;newmain.c: 470: {
  6214                           ;newmain.c: 471: while(RE3==0);
  6215                           
  6216  1752  1D89               	btfss	9,3	;volatile
  6217  1753  2F52               	goto	l331
  6218                           
  6219                           ;newmain.c: 472: status=0;
  6220  1754  10F1               	bcf	_status/(0+8),_status& (0+7)
  6221                           
  6222                           ;newmain.c: 473: menu=1;
  6223  1755  1471               	bsf	_menu/(0+8),_menu& (0+7)
  6224                           
  6225                           ;newmain.c: 474: buzzer(50);
  6226  1756  3032               	movlw	50
  6227  1757  00CD               	movwf	buzzer@a
  6228  1758  3000               	movlw	0
  6229  1759  00CE               	movwf	buzzer@a+1
  6230  175A  160A  158A  279C  160A  118A  	fcall	_buzzer
  6231                           
  6232                           ;newmain.c: 475: start = 0;
  6233  175F  1283               	bcf	3,5	;RP0=0, select bank0
  6234  1760  1303               	bcf	3,6	;RP1=0, select bank0
  6235  1761  01A0               	clrf	_start
  6236  1762  01A1               	clrf	_start+1
  6237                           
  6238                           ;newmain.c: 476: LCD_Clear();
  6239  1763  160A  158A  26F5  160A  118A  	fcall	_LCD_Clear
  6240                           
  6241                           ;newmain.c: 477: break;
  6242  1768  120A  118A  2A0B   	goto	l511
  6243  176B                     l330:	
  6244                           
  6245                           ;newmain.c: 478: }
  6246                           ;newmain.c: 480: if(!RA1)
  6247  176B  1885               	btfsc	5,1	;volatile
  6248  176C  2F77               	goto	l334
  6249  176D                     l335:	
  6250                           ;newmain.c: 481: {
  6251                           ;newmain.c: 482: while(!RA1);
  6252                           
  6253  176D  1C85               	btfss	5,1	;volatile
  6254  176E  2F6D               	goto	l335
  6255                           
  6256                           ;newmain.c: 483: escprocess();
  6257  176F  160A  158A  27BC  160A  118A  	fcall	_escprocess
  6258  1774                     L21:	
  6259                           
  6260                           ;newmain.c: 484: goto M1;
  6261  1774  120A  158A  2E2F   	goto	l3732
  6262  1777                     l334:	
  6263                           
  6264                           ;newmain.c: 485: }
  6265                           ;newmain.c: 486: if(!RA5)
  6266  1777  1A85               	btfsc	5,5	;volatile
  6267  1778  2F81               	goto	l338
  6268  1779                     l339:	
  6269                           ;newmain.c: 487: {
  6270                           ;newmain.c: 488: while(!RA5);
  6271                           
  6272  1779  1E85               	btfss	5,5	;volatile
  6273  177A  2F79               	goto	l339
  6274                           
  6275                           ;newmain.c: 489: escprocess();
  6276  177B  160A  158A  27BC  160A  118A  	fcall	_escprocess
  6277                           
  6278                           ;newmain.c: 490: goto M3;
  6279  1780  2F2E               	goto	L18
  6280  1781                     l338:	
  6281                           
  6282                           ;newmain.c: 491: }
  6283                           ;newmain.c: 492: if(!RB6)
  6284  1781  1B06               	btfsc	6,6	;volatile
  6285  1782  2F8B               	goto	l342
  6286  1783                     l343:	
  6287                           ;newmain.c: 493: {
  6288                           ;newmain.c: 494: while(!RB6);
  6289                           
  6290  1783  1F06               	btfss	6,6	;volatile
  6291  1784  2F83               	goto	l343
  6292                           
  6293                           ;newmain.c: 495: escprocess();
  6294  1785  160A  158A  27BC  160A  118A  	fcall	_escprocess
  6295                           
  6296                           ;newmain.c: 496: goto M4;
  6297  178A  2F3A               	goto	L19
  6298  178B                     l342:	
  6299                           
  6300                           ;newmain.c: 497: }
  6301                           ;newmain.c: 498: if(!RB7)
  6302  178B  1B86               	btfsc	6,7	;volatile
  6303  178C  2F95               	goto	l3964
  6304  178D                     l347:	
  6305                           ;newmain.c: 499: {
  6306                           ;newmain.c: 500: while(!RB7);
  6307                           
  6308  178D  1F86               	btfss	6,7	;volatile
  6309  178E  2F8D               	goto	l347
  6310                           
  6311                           ;newmain.c: 501: escprocess();
  6312  178F  160A  158A  27BC  160A  118A  	fcall	_escprocess
  6313                           
  6314                           ;newmain.c: 502: goto M5;
  6315  1794  2F46               	goto	L20
  6316  1795                     l3964:	
  6317                           
  6318                           ;newmain.c: 503: }
  6319                           ;newmain.c: 506: }
  6320                           ;newmain.c: 507: if(start == 3)
  6321  1795  3003               	movlw	3
  6322  1796  1283               	bcf	3,5	;RP0=0, select bank0
  6323  1797  1303               	bcf	3,6	;RP1=0, select bank0
  6324  1798  0620               	xorwf	_start,w
  6325  1799  0421               	iorwf	_start+1,w
  6326  179A  1D03               	btfss	3,2
  6327  179B  2FC9               	goto	l3990
  6328                           
  6329                           ;newmain.c: 508: {
  6330                           ;newmain.c: 509: if(RE3==0)
  6331  179C  1989               	btfsc	9,3	;volatile
  6332  179D  2FA1               	goto	l351
  6333  179E                     l352:	
  6334                           ;newmain.c: 510: {
  6335                           ;newmain.c: 511: while(RE3==0);
  6336                           
  6337  179E  1D89               	btfss	9,3	;volatile
  6338  179F  2F9E               	goto	l352
  6339  17A0  2F16               	goto	L25
  6340  17A1                     l351:	
  6341                           ;newmain.c: 517: break;
  6342                           
  6343                           ;newmain.c: 516: start = 0;
  6344                           
  6345                           ;newmain.c: 515: LCD_Clear();
  6346                           
  6347                           ;newmain.c: 514: buzzer(50);
  6348                           
  6349                           ;newmain.c: 513: menu=1;
  6350                           
  6351                           ;newmain.c: 512: status=0;
  6352                           
  6353                           
  6354                           ;newmain.c: 518: }
  6355                           ;newmain.c: 519: if(!RA1)
  6356  17A1  1885               	btfsc	5,1	;volatile
  6357  17A2  2FAB               	goto	l355
  6358  17A3                     l356:	
  6359                           ;newmain.c: 520: {
  6360                           ;newmain.c: 521: while(!RA1);
  6361                           
  6362  17A3  1C85               	btfss	5,1	;volatile
  6363  17A4  2FA3               	goto	l356
  6364                           
  6365                           ;newmain.c: 522: escprocess();
  6366  17A5  160A  158A  27BC  160A  118A  	fcall	_escprocess
  6367                           
  6368                           ;newmain.c: 523: goto M1;
  6369  17AA  2F74               	goto	L21
  6370  17AB                     l355:	
  6371                           
  6372                           ;newmain.c: 524: }
  6373                           ;newmain.c: 525: if(!RA2)
  6374  17AB  1905               	btfsc	5,2	;volatile
  6375  17AC  2FB5               	goto	l359
  6376  17AD                     l360:	
  6377                           ;newmain.c: 526: {
  6378                           ;newmain.c: 527: while(!RA2);
  6379                           
  6380  17AD  1D05               	btfss	5,2	;volatile
  6381  17AE  2FAD               	goto	l360
  6382                           
  6383                           ;newmain.c: 528: escprocess();
  6384  17AF  160A  158A  27BC  160A  118A  	fcall	_escprocess
  6385                           
  6386                           ;newmain.c: 529: goto M2;
  6387  17B4  2F22               	goto	L22
  6388  17B5                     l359:	
  6389                           
  6390                           ;newmain.c: 530: }
  6391                           ;newmain.c: 531: if(!RB6)
  6392  17B5  1B06               	btfsc	6,6	;volatile
  6393  17B6  2FBF               	goto	l363
  6394  17B7                     l364:	
  6395                           ;newmain.c: 532: {
  6396                           ;newmain.c: 533: while(!RB6);
  6397                           
  6398  17B7  1F06               	btfss	6,6	;volatile
  6399  17B8  2FB7               	goto	l364
  6400                           
  6401                           ;newmain.c: 534: escprocess();
  6402  17B9  160A  158A  27BC  160A  118A  	fcall	_escprocess
  6403                           
  6404                           ;newmain.c: 535: goto M4;
  6405  17BE  2F3A               	goto	L19
  6406  17BF                     l363:	
  6407                           
  6408                           ;newmain.c: 536: }
  6409                           ;newmain.c: 537: if(!RB7)
  6410  17BF  1B86               	btfsc	6,7	;volatile
  6411  17C0  2FC9               	goto	l3990
  6412  17C1                     l368:	
  6413                           ;newmain.c: 538: {
  6414                           ;newmain.c: 539: while(!RB7);
  6415                           
  6416  17C1  1F86               	btfss	6,7	;volatile
  6417  17C2  2FC1               	goto	l368
  6418                           
  6419                           ;newmain.c: 540: escprocess();
  6420  17C3  160A  158A  27BC  160A  118A  	fcall	_escprocess
  6421                           
  6422                           ;newmain.c: 541: goto M5;
  6423  17C8  2F46               	goto	L20
  6424  17C9                     l3990:	
  6425                           
  6426                           ;newmain.c: 542: }
  6427                           ;newmain.c: 543: }
  6428                           ;newmain.c: 544: if(start == 4)
  6429  17C9  3004               	movlw	4
  6430  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  6431  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  6432  17CC  0620               	xorwf	_start,w
  6433  17CD  0421               	iorwf	_start+1,w
  6434  17CE  1D03               	btfss	3,2
  6435  17CF  2FFD               	goto	L27
  6436                           
  6437                           ;newmain.c: 545: {
  6438                           ;newmain.c: 546: if(RE3==0)
  6439  17D0  1989               	btfsc	9,3	;volatile
  6440  17D1  2FD5               	goto	l372
  6441  17D2                     l373:	
  6442                           ;newmain.c: 547: {
  6443                           ;newmain.c: 548: while(RE3==0);
  6444                           
  6445  17D2  1D89               	btfss	9,3	;volatile
  6446  17D3  2FD2               	goto	l373
  6447  17D4  2F16               	goto	L25
  6448  17D5                     l372:	
  6449                           ;newmain.c: 554: break;
  6450                           
  6451                           ;newmain.c: 553: start = 0;
  6452                           
  6453                           ;newmain.c: 552: LCD_Clear();
  6454                           
  6455                           ;newmain.c: 551: buzzer(50);
  6456                           
  6457                           ;newmain.c: 550: menu=1;
  6458                           
  6459                           ;newmain.c: 549: status=0;
  6460                           
  6461                           
  6462                           ;newmain.c: 555: }
  6463                           ;newmain.c: 556: if(!RA1)
  6464  17D5  1885               	btfsc	5,1	;volatile
  6465  17D6  2FDF               	goto	l376
  6466  17D7                     l377:	
  6467                           ;newmain.c: 557: {
  6468                           ;newmain.c: 558: while(!RA1);
  6469                           
  6470  17D7  1C85               	btfss	5,1	;volatile
  6471  17D8  2FD7               	goto	l377
  6472                           
  6473                           ;newmain.c: 559: escprocess();
  6474  17D9  160A  158A  27BC  160A  118A  	fcall	_escprocess
  6475                           
  6476                           ;newmain.c: 560: goto M1;
  6477  17DE  2F74               	goto	L21
  6478  17DF                     l376:	
  6479                           
  6480                           ;newmain.c: 561: }
  6481                           ;newmain.c: 562: if(!RA2)
  6482  17DF  1905               	btfsc	5,2	;volatile
  6483  17E0  2FE9               	goto	l380
  6484  17E1                     l381:	
  6485                           ;newmain.c: 563: {
  6486                           ;newmain.c: 564: while(!RA2);
  6487                           
  6488  17E1  1D05               	btfss	5,2	;volatile
  6489  17E2  2FE1               	goto	l381
  6490                           
  6491                           ;newmain.c: 565: escprocess();
  6492  17E3  160A  158A  27BC  160A  118A  	fcall	_escprocess
  6493                           
  6494                           ;newmain.c: 566: goto M2;
  6495  17E8  2F22               	goto	L22
  6496  17E9                     l380:	
  6497                           
  6498                           ;newmain.c: 567: }
  6499                           ;newmain.c: 568: if(!RA5)
  6500  17E9  1A85               	btfsc	5,5	;volatile
  6501  17EA  2FF3               	goto	l384
  6502  17EB                     l385:	
  6503                           ;newmain.c: 569: {
  6504                           ;newmain.c: 570: while(!RA5);
  6505                           
  6506  17EB  1E85               	btfss	5,5	;volatile
  6507  17EC  2FEB               	goto	l385
  6508                           
  6509                           ;newmain.c: 571: escprocess();
  6510  17ED  160A  158A  27BC  160A  118A  	fcall	_escprocess
  6511                           
  6512                           ;newmain.c: 572: goto M3;
  6513  17F2  2F2E               	goto	L18
  6514  17F3                     l384:	
  6515                           
  6516                           ;newmain.c: 573: }
  6517                           ;newmain.c: 574: if(!RB7)
  6518  17F3  1B86               	btfsc	6,7	;volatile
  6519  17F4  2FFD               	goto	L27
  6520  17F5                     l389:	
  6521                           ;newmain.c: 575: {
  6522                           ;newmain.c: 576: while(!RB7);
  6523                           
  6524  17F5  1F86               	btfss	6,7	;volatile
  6525  17F6  2FF5               	goto	l389
  6526                           
  6527                           ;newmain.c: 577: escprocess();
  6528  17F7  160A  158A  27BC  160A  118A  	fcall	_escprocess
  6529                           
  6530                           ;newmain.c: 578: goto M5;
  6531  17FC  2F46               	goto	L20
  6532  17FD                     L27:	
  6533  17FD                     L26:	
  6534  17FD  120A  158A  295B   	ljmp	l4016
  6535                           
  6536                           	psect	maintext_split_3
  6537  095B                     l4016:	
  6538                           
  6539                           ;newmain.c: 579: }
  6540                           ;newmain.c: 581: }
  6541                           ;newmain.c: 582: if(start == 5)
  6542  095B  3005               	movlw	5
  6543  095C  1283               	bcf	3,5	;RP0=0, select bank0
  6544  095D  1303               	bcf	3,6	;RP1=0, select bank0
  6545  095E  0620               	xorwf	_start,w
  6546  095F  0421               	iorwf	_start+1,w
  6547  0960  1D03               	btfss	3,2
  6548  0961  29EB               	goto	l4052
  6549                           
  6550                           ;newmain.c: 583: {
  6551                           ;newmain.c: 584: if(RE3==0)
  6552  0962  1989               	btfsc	9,3	;volatile
  6553  0963  297D               	goto	l393
  6554  0964                     l394:	
  6555                           ;newmain.c: 585: {
  6556                           ;newmain.c: 586: while(RE3==0);
  6557                           
  6558  0964  1D89               	btfss	9,3	;volatile
  6559  0965  2964               	goto	l394
  6560  0966                     L14:	
  6561                           
  6562                           ;newmain.c: 587: status=0;
  6563  0966  10F1               	bcf	_status/(0+8),_status& (0+7)
  6564                           
  6565                           ;newmain.c: 588: menu=1;
  6566  0967  1471               	bsf	_menu/(0+8),_menu& (0+7)
  6567                           
  6568                           ;newmain.c: 589: buzzer(50);
  6569  0968  3032               	movlw	50
  6570  0969  00CD               	movwf	buzzer@a
  6571  096A  3000               	movlw	0
  6572  096B  00CE               	movwf	buzzer@a+1
  6573  096C  160A  158A  279C  120A  158A  	fcall	_buzzer
  6574                           
  6575                           ;newmain.c: 590: LCD_Clear();
  6576  0971  160A  158A  26F5  120A  158A  	fcall	_LCD_Clear
  6577                           
  6578                           ;newmain.c: 591: start = 0;
  6579  0976  1283               	bcf	3,5	;RP0=0, select bank0
  6580  0977  1303               	bcf	3,6	;RP1=0, select bank0
  6581  0978  01A0               	clrf	_start
  6582  0979  01A1               	clrf	_start+1
  6583                           
  6584                           ;newmain.c: 592: break;
  6585  097A  120A  118A  2A0B   	goto	l511
  6586  097D                     l393:	
  6587                           
  6588                           ;newmain.c: 593: }
  6589                           ;newmain.c: 594: if(!RA1)
  6590  097D  1885               	btfsc	5,1	;volatile
  6591  097E  2989               	goto	l397
  6592  097F                     l398:	
  6593                           ;newmain.c: 595: {
  6594                           ;newmain.c: 596: while(!RA1);
  6595                           
  6596  097F  1C85               	btfss	5,1	;volatile
  6597  0980  297F               	goto	l398
  6598                           
  6599                           ;newmain.c: 597: escprocess();
  6600  0981  160A  158A  27BC  120A  158A  	fcall	_escprocess
  6601                           
  6602                           ;newmain.c: 598: goto M1;
  6603  0986  160A  118A  2F74   	goto	L21
  6604  0989                     l397:	
  6605                           
  6606                           ;newmain.c: 599: }
  6607                           ;newmain.c: 600: if(!RA2)
  6608  0989  1905               	btfsc	5,2	;volatile
  6609  098A  2995               	goto	l401
  6610  098B                     l402:	
  6611                           ;newmain.c: 601: {
  6612                           ;newmain.c: 602: while(!RA2);
  6613                           
  6614  098B  1D05               	btfss	5,2	;volatile
  6615  098C  298B               	goto	l402
  6616                           
  6617                           ;newmain.c: 603: escprocess();
  6618  098D  160A  158A  27BC  120A  158A  	fcall	_escprocess
  6619                           
  6620                           ;newmain.c: 604: goto M2;
  6621  0992  160A  118A  2F22   	goto	L22
  6622  0995                     l401:	
  6623                           
  6624                           ;newmain.c: 605: }
  6625                           ;newmain.c: 606: if(!RA5)
  6626  0995  1A85               	btfsc	5,5	;volatile
  6627  0996  29A1               	goto	l405
  6628  0997                     l406:	
  6629                           ;newmain.c: 607: {
  6630                           ;newmain.c: 608: while(!RA5);
  6631                           
  6632  0997  1E85               	btfss	5,5	;volatile
  6633  0998  2997               	goto	l406
  6634                           
  6635                           ;newmain.c: 609: escprocess();
  6636  0999  160A  158A  27BC  120A  158A  	fcall	_escprocess
  6637                           
  6638                           ;newmain.c: 610: goto M3;
  6639  099E  160A  118A  2F2E   	goto	L18
  6640  09A1                     l405:	
  6641                           
  6642                           ;newmain.c: 611: }
  6643                           ;newmain.c: 612: if(!RB6)
  6644  09A1  1B06               	btfsc	6,6	;volatile
  6645  09A2  29EB               	goto	l4052
  6646  09A3                     l410:	
  6647                           ;newmain.c: 613: {
  6648                           ;newmain.c: 614: while(!RB6);
  6649                           
  6650  09A3  1F06               	btfss	6,6	;volatile
  6651  09A4  29A3               	goto	l410
  6652                           
  6653                           ;newmain.c: 615: escprocess();
  6654  09A5  160A  158A  27BC  120A  158A  	fcall	_escprocess
  6655                           
  6656                           ;newmain.c: 616: goto M4;
  6657  09AA  160A  118A  2F3A   	goto	L19
  6658  09AD                     l4042:	
  6659                           ;newmain.c: 617: }
  6660                           ;newmain.c: 619: }
  6661                           ;newmain.c: 620: while(coin_input)
  6662                           
  6663                           
  6664                           ;newmain.c: 621: {
  6665                           ;newmain.c: 622: LCD_CmdWrite(0X80);
  6666  09AD  3080               	movlw	128
  6667  09AE  160A  158A  2762  120A  158A  	fcall	_LCD_CmdWrite
  6668                           
  6669                           ;newmain.c: 623: LCD_DisplayString("  BALANCE: ");
  6670  09B3  30DA               	movlw	low (STR_12| (0+32768))
  6671  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  6672  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  6673  09B6  00D0               	movwf	LCD_DisplayString@s
  6674  09B7  3091               	movlw	high (STR_12| (0+32768))
  6675  09B8  00D1               	movwf	LCD_DisplayString@s+1
  6676  09B9  160A  118A  2272  120A  158A  	fcall	_LCD_DisplayString
  6677                           
  6678                           ;newmain.c: 624: LCD_DataWrite(0x00);
  6679  09BE  3000               	movlw	0
  6680  09BF  160A  158A  277F  120A  158A  	fcall	_LCD_DataWrite
  6681                           
  6682                           ;newmain.c: 625: display(balance);
  6683  09C4  1283               	bcf	3,5	;RP0=0, select bank0
  6684  09C5  1303               	bcf	3,6	;RP1=0, select bank0
  6685  09C6  0839               	movf	_balance+1,w
  6686  09C7  00EA               	movwf	display@data+1
  6687  09C8  0838               	movf	_balance,w
  6688  09C9  00E9               	movwf	display@data
  6689  09CA  160A  158A  272E  120A  158A  	fcall	_display
  6690                           
  6691                           ;newmain.c: 626: LCD_DisplayString("  ");
  6692  09CF  30A9               	movlw	low ((STR_21+14)| (0+32768))
  6693  09D0  1283               	bcf	3,5	;RP0=0, select bank0
  6694  09D1  1303               	bcf	3,6	;RP1=0, select bank0
  6695  09D2  00D0               	movwf	LCD_DisplayString@s
  6696  09D3  3090               	movlw	high ((STR_21+14)| (0+32768))
  6697  09D4  00D1               	movwf	LCD_DisplayString@s+1
  6698  09D5  160A  118A  2272  120A  158A  	fcall	_LCD_DisplayString
  6699                           
  6700                           ;newmain.c: 627: LCD_CmdWrite(0XC0);
  6701  09DA  30C0               	movlw	192
  6702  09DB  160A  158A  2762  120A  158A  	fcall	_LCD_CmdWrite
  6703                           
  6704                           ;newmain.c: 628: LCD_DisplayString(" INSERT NOTES.. ");
  6705  09E0  3012               	movlw	low (STR_14| (0+32768))
  6706  09E1  1283               	bcf	3,5	;RP0=0, select bank0
  6707  09E2  1303               	bcf	3,6	;RP1=0, select bank0
  6708  09E3  00D0               	movwf	LCD_DisplayString@s
  6709  09E4  3091               	movlw	high (STR_14| (0+32768))
  6710  09E5  00D1               	movwf	LCD_DisplayString@s+1
  6711  09E6  160A  118A  2272  120A  158A  	fcall	_LCD_DisplayString
  6712  09EB                     l4052:	
  6713  09EB  1970               	btfsc	_coin_input/(0+8),_coin_input& (0+7)
  6714  09EC  29AD               	goto	l4042
  6715                           
  6716                           ;newmain.c: 629: }
  6717                           ;newmain.c: 631: if((motor)&&(!coin_input))
  6718  09ED  18F0               	btfsc	_motor/(0+8),_motor& (0+7)
  6719  09EE  1970               	btfsc	_coin_input/(0+8),_coin_input& (0+7)
  6720  09EF  2AF8               	goto	L29
  6721                           
  6722                           ;newmain.c: 632: {
  6723                           ;newmain.c: 633: motor=0;
  6724  09F0  10F0               	bcf	_motor/(0+8),_motor& (0+7)
  6725                           
  6726                           ;newmain.c: 634: switch(stock)
  6727  09F1  2A03               	goto	l4060
  6728  09F2                     l419:	
  6729                           ;newmain.c: 635: {
  6730                           ;newmain.c: 636: case 1: while(RD7==1);break;
  6731                           
  6732  09F2  1283               	bcf	3,5	;RP0=0, select bank0
  6733  09F3  1303               	bcf	3,6	;RP1=0, select bank0
  6734  09F4  1F88               	btfss	8,7	;volatile
  6735  09F5  2A1B               	goto	l4062
  6736  09F6  29F2               	goto	l419
  6737  09F7                     l424:	
  6738                           ;newmain.c: 637: case 2: while(RD5==1);break;
  6739                           
  6740  09F7  1E88               	btfss	8,5	;volatile
  6741  09F8  2A1B               	goto	l4062
  6742  09F9  29F7               	goto	l424
  6743  09FA                     l428:	
  6744                           ;newmain.c: 638: case 3: while(RC7==1);break;
  6745                           
  6746  09FA  1F87               	btfss	7,7	;volatile
  6747  09FB  2A1B               	goto	l4062
  6748  09FC  29FA               	goto	l428
  6749  09FD                     l432:	
  6750                           ;newmain.c: 639: case 4: while(RC5==1);break;
  6751                           
  6752  09FD  1E87               	btfss	7,5	;volatile
  6753  09FE  2A1B               	goto	l4062
  6754  09FF  29FD               	goto	l432
  6755  0A00                     l436:	
  6756                           ;newmain.c: 640: case 5: while(RD3==1);break;
  6757                           
  6758  0A00  1D88               	btfss	8,3	;volatile
  6759  0A01  2A1B               	goto	l4062
  6760  0A02  2A00               	goto	l436
  6761  0A03                     l4060:	
  6762                           ;newmain.c: 641: }
  6763                           
  6764                           
  6765                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6766                           ; Switch size 1, requested type "space"
  6767                           ; Number of cases is 1, Range of values is 0 to 0
  6768                           ; switch strategies available:
  6769                           ; Name         Instructions Cycles
  6770                           ; simple_byte            4     3 (average)
  6771                           ; direct_byte           11     8 (fixed)
  6772                           ; jumptable            260     6 (fixed)
  6773                           ;	Chosen strategy is simple_byte
  6774  0A03  1283               	bcf	3,5	;RP0=0, select bank0
  6775  0A04  1303               	bcf	3,6	;RP1=0, select bank0
  6776  0A05  0823               	movf	_stock+1,w
  6777  0A06  3A00               	xorlw	0	; case 0
  6778  0A07  1903               	skipnz
  6779  0A08  2A0A               	goto	l5052
  6780  0A09  2A1B               	goto	l4062
  6781  0A0A                     l5052:	
  6782                           
  6783                           ; Switch size 1, requested type "space"
  6784                           ; Number of cases is 5, Range of values is 1 to 5
  6785                           ; switch strategies available:
  6786                           ; Name         Instructions Cycles
  6787                           ; simple_byte           16     9 (average)
  6788                           ; direct_byte           26    11 (fixed)
  6789                           ; jumptable            263     9 (fixed)
  6790                           ;	Chosen strategy is simple_byte
  6791  0A0A  0822               	movf	_stock,w
  6792  0A0B  3A01               	xorlw	1	; case 1
  6793  0A0C  1903               	skipnz
  6794  0A0D  29F2               	goto	l419
  6795  0A0E  3A03               	xorlw	3	; case 2
  6796  0A0F  1903               	skipnz
  6797  0A10  29F7               	goto	l424
  6798  0A11  3A01               	xorlw	1	; case 3
  6799  0A12  1903               	skipnz
  6800  0A13  29FA               	goto	l428
  6801  0A14  3A07               	xorlw	7	; case 4
  6802  0A15  1903               	skipnz
  6803  0A16  29FD               	goto	l432
  6804  0A17  3A01               	xorlw	1	; case 5
  6805  0A18  1903               	skipnz
  6806  0A19  2A00               	goto	l436
  6807  0A1A  2A1B               	goto	l4062
  6808  0A1B                     l4062:	
  6809                           
  6810                           ;newmain.c: 643: LCD_Clear();
  6811  0A1B  160A  158A  26F5  120A  158A  	fcall	_LCD_Clear
  6812                           
  6813                           ;newmain.c: 644: LCD_CmdWrite(0X80);
  6814  0A20  3080               	movlw	128
  6815  0A21  160A  158A  2762  120A  158A  	fcall	_LCD_CmdWrite
  6816                           
  6817                           ;newmain.c: 645: LCD_DisplayString("  PROCESSING...");
  6818  0A26  30AA               	movlw	low (STR_15| (0+32768))
  6819  0A27  1283               	bcf	3,5	;RP0=0, select bank0
  6820  0A28  1303               	bcf	3,6	;RP1=0, select bank0
  6821  0A29  00D0               	movwf	LCD_DisplayString@s
  6822  0A2A  3091               	movlw	high (STR_15| (0+32768))
  6823  0A2B  00D1               	movwf	LCD_DisplayString@s+1
  6824  0A2C  160A  118A  2272  120A  158A  	fcall	_LCD_DisplayString
  6825                           
  6826                           ;newmain.c: 646: LCD_CmdWrite(0XC0);
  6827  0A31  30C0               	movlw	192
  6828  0A32  160A  158A  2762  120A  158A  	fcall	_LCD_CmdWrite
  6829                           
  6830                           ;newmain.c: 647: LCD_DisplayString(" PLEASE WAIT...");
  6831  0A37  30BA               	movlw	low (STR_16| (0+32768))
  6832  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  6833  0A39  1303               	bcf	3,6	;RP1=0, select bank0
  6834  0A3A  00D0               	movwf	LCD_DisplayString@s
  6835  0A3B  3091               	movlw	high (STR_16| (0+32768))
  6836  0A3C  00D1               	movwf	LCD_DisplayString@s+1
  6837  0A3D  160A  118A  2272  120A  158A  	fcall	_LCD_DisplayString
  6838                           
  6839                           ;newmain.c: 648: buzzer(50);
  6840  0A42  3032               	movlw	50
  6841  0A43  1283               	bcf	3,5	;RP0=0, select bank0
  6842  0A44  1303               	bcf	3,6	;RP1=0, select bank0
  6843  0A45  00CD               	movwf	buzzer@a
  6844  0A46  3000               	movlw	0
  6845  0A47  00CE               	movwf	buzzer@a+1
  6846  0A48  160A  158A  279C  120A  158A  	fcall	_buzzer
  6847                           
  6848                           ;newmain.c: 650: switch(stock)
  6849  0A4D  2A58               	goto	l4072
  6850  0A4E                     l440:	
  6851                           ;newmain.c: 651: {
  6852                           ;newmain.c: 652: case 1: RD6=1;break;
  6853                           
  6854  0A4E  1708               	bsf	8,6	;volatile
  6855  0A4F  2A70               	goto	l4074
  6856  0A50                     l442:	
  6857                           ;newmain.c: 653: case 2: RD4=1;break;
  6858                           
  6859  0A50  1608               	bsf	8,4	;volatile
  6860  0A51  2A70               	goto	l4074
  6861  0A52                     l443:	
  6862                           ;newmain.c: 654: case 3: RC6=1;break;
  6863                           
  6864  0A52  1707               	bsf	7,6	;volatile
  6865  0A53  2A70               	goto	l4074
  6866  0A54                     l444:	
  6867                           ;newmain.c: 655: case 4: RC4=1;break;
  6868                           
  6869  0A54  1607               	bsf	7,4	;volatile
  6870  0A55  2A70               	goto	l4074
  6871  0A56                     l445:	
  6872                           ;newmain.c: 656: case 5: RD2=1;break;
  6873                           
  6874  0A56  1508               	bsf	8,2	;volatile
  6875                           
  6876                           ;newmain.c: 657: }
  6877  0A57  2A70               	goto	l4074
  6878  0A58                     l4072:	
  6879                           
  6880                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6881                           ; Switch size 1, requested type "space"
  6882                           ; Number of cases is 1, Range of values is 0 to 0
  6883                           ; switch strategies available:
  6884                           ; Name         Instructions Cycles
  6885                           ; simple_byte            4     3 (average)
  6886                           ; direct_byte           11     8 (fixed)
  6887                           ; jumptable            260     6 (fixed)
  6888                           ;	Chosen strategy is simple_byte
  6889  0A58  1283               	bcf	3,5	;RP0=0, select bank0
  6890  0A59  1303               	bcf	3,6	;RP1=0, select bank0
  6891  0A5A  0823               	movf	_stock+1,w
  6892  0A5B  3A00               	xorlw	0	; case 0
  6893  0A5C  1903               	skipnz
  6894  0A5D  2A5F               	goto	l5054
  6895  0A5E  2A70               	goto	l4074
  6896  0A5F                     l5054:	
  6897                           
  6898                           ; Switch size 1, requested type "space"
  6899                           ; Number of cases is 5, Range of values is 1 to 5
  6900                           ; switch strategies available:
  6901                           ; Name         Instructions Cycles
  6902                           ; simple_byte           16     9 (average)
  6903                           ; direct_byte           26    11 (fixed)
  6904                           ; jumptable            263     9 (fixed)
  6905                           ;	Chosen strategy is simple_byte
  6906  0A5F  0822               	movf	_stock,w
  6907  0A60  3A01               	xorlw	1	; case 1
  6908  0A61  1903               	skipnz
  6909  0A62  2A4E               	goto	l440
  6910  0A63  3A03               	xorlw	3	; case 2
  6911  0A64  1903               	skipnz
  6912  0A65  2A50               	goto	l442
  6913  0A66  3A01               	xorlw	1	; case 3
  6914  0A67  1903               	skipnz
  6915  0A68  2A52               	goto	l443
  6916  0A69  3A07               	xorlw	7	; case 4
  6917  0A6A  1903               	skipnz
  6918  0A6B  2A54               	goto	l444
  6919  0A6C  3A01               	xorlw	1	; case 5
  6920  0A6D  1903               	skipnz
  6921  0A6E  2A56               	goto	l445
  6922  0A6F  2A70               	goto	l4074
  6923  0A70                     l4074:	
  6924                           
  6925                           ;newmain.c: 659: _delay((unsigned long)((2000)*(4000000/4000.0)));
  6926  0A70  300B               	movlw	11
  6927  0A71  1283               	bcf	3,5	;RP0=0, select bank0
  6928  0A72  1303               	bcf	3,6	;RP1=0, select bank0
  6929  0A73  00ED               	movwf	??_main+2
  6930  0A74  3026               	movlw	38
  6931  0A75  00EC               	movwf	??_main+1
  6932  0A76  305D               	movlw	93
  6933  0A77  00EB               	movwf	??_main
  6934  0A78                     u4607:	
  6935  0A78  0BEB               	decfsz	??_main,f
  6936  0A79  2A78               	goto	u4607
  6937  0A7A  0BEC               	decfsz	??_main+1,f
  6938  0A7B  2A78               	goto	u4607
  6939  0A7C  0BED               	decfsz	??_main+2,f
  6940  0A7D  2A78               	goto	u4607
  6941                           
  6942                           ;newmain.c: 661: switch(stock)
  6943  0A7E  2A90               	goto	l4078
  6944  0A7F                     l448:	
  6945                           ;newmain.c: 662: {
  6946                           ;newmain.c: 663: case 1: while(RD7==0);break;
  6947                           
  6948  0A7F  1283               	bcf	3,5	;RP0=0, select bank0
  6949  0A80  1303               	bcf	3,6	;RP1=0, select bank0
  6950  0A81  1B88               	btfsc	8,7	;volatile
  6951  0A82  2AB3               	goto	l4082
  6952  0A83  2A7F               	goto	l448
  6953  0A84                     l453:	
  6954                           ;newmain.c: 664: case 2: while(RD5==0);break;
  6955                           
  6956  0A84  1A88               	btfsc	8,5	;volatile
  6957  0A85  2AB3               	goto	l4082
  6958  0A86  2A84               	goto	l453
  6959  0A87                     l457:	
  6960                           ;newmain.c: 665: case 3: while(RC7==0);break;
  6961                           
  6962  0A87  1B87               	btfsc	7,7	;volatile
  6963  0A88  2AB3               	goto	l4082
  6964  0A89  2A87               	goto	l457
  6965  0A8A                     l461:	
  6966                           ;newmain.c: 666: case 4: while(RC5==0);break;
  6967                           
  6968  0A8A  1A87               	btfsc	7,5	;volatile
  6969  0A8B  2AB3               	goto	l4082
  6970  0A8C  2A8A               	goto	l461
  6971  0A8D                     l465:	
  6972                           ;newmain.c: 667: case 5: while(RD3==0);break;
  6973                           
  6974  0A8D  1988               	btfsc	8,3	;volatile
  6975  0A8E  2AB3               	goto	l4082
  6976  0A8F  2A8D               	goto	l465
  6977  0A90                     l4078:	
  6978                           ;newmain.c: 668: }
  6979                           
  6980                           
  6981                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6982                           ; Switch size 1, requested type "space"
  6983                           ; Number of cases is 1, Range of values is 0 to 0
  6984                           ; switch strategies available:
  6985                           ; Name         Instructions Cycles
  6986                           ; simple_byte            4     3 (average)
  6987                           ; direct_byte           11     8 (fixed)
  6988                           ; jumptable            260     6 (fixed)
  6989                           ;	Chosen strategy is simple_byte
  6990  0A90  1283               	bcf	3,5	;RP0=0, select bank0
  6991  0A91  1303               	bcf	3,6	;RP1=0, select bank0
  6992  0A92  0823               	movf	_stock+1,w
  6993  0A93  3A00               	xorlw	0	; case 0
  6994  0A94  1903               	skipnz
  6995  0A95  2A97               	goto	l5056
  6996  0A96  2AB3               	goto	l4082
  6997  0A97                     l5056:	
  6998                           
  6999                           ; Switch size 1, requested type "space"
  7000                           ; Number of cases is 5, Range of values is 1 to 5
  7001                           ; switch strategies available:
  7002                           ; Name         Instructions Cycles
  7003                           ; simple_byte           16     9 (average)
  7004                           ; direct_byte           26    11 (fixed)
  7005                           ; jumptable            263     9 (fixed)
  7006                           ;	Chosen strategy is simple_byte
  7007  0A97  0822               	movf	_stock,w
  7008  0A98  3A01               	xorlw	1	; case 1
  7009  0A99  1903               	skipnz
  7010  0A9A  2A7F               	goto	l448
  7011  0A9B  3A03               	xorlw	3	; case 2
  7012  0A9C  1903               	skipnz
  7013  0A9D  2A84               	goto	l453
  7014  0A9E  3A01               	xorlw	1	; case 3
  7015  0A9F  1903               	skipnz
  7016  0AA0  2A87               	goto	l457
  7017  0AA1  3A07               	xorlw	7	; case 4
  7018  0AA2  1903               	skipnz
  7019  0AA3  2A8A               	goto	l461
  7020  0AA4  3A01               	xorlw	1	; case 5
  7021  0AA5  1903               	skipnz
  7022  0AA6  2A8D               	goto	l465
  7023  0AA7  2AB3               	goto	l4082
  7024                           
  7025                           ;newmain.c: 670: switch(stock)
  7026  0AA8  2AB3               	goto	l4082
  7027  0AA9                     l469:	
  7028                           ;newmain.c: 671: {
  7029                           ;newmain.c: 672: case 1: RD6=0;break;
  7030                           
  7031  0AA9  1308               	bcf	8,6	;volatile
  7032  0AAA  2AD9               	goto	l4086
  7033  0AAB                     l471:	
  7034                           ;newmain.c: 673: case 2: RD4=0;break;
  7035                           
  7036  0AAB  1208               	bcf	8,4	;volatile
  7037  0AAC  2AD9               	goto	l4086
  7038  0AAD                     l472:	
  7039                           ;newmain.c: 674: case 3: RC6=0;break;
  7040                           
  7041  0AAD  1307               	bcf	7,6	;volatile
  7042  0AAE  2AD9               	goto	l4086
  7043  0AAF                     l473:	
  7044                           ;newmain.c: 675: case 4: RC4=0;break;
  7045                           
  7046  0AAF  1207               	bcf	7,4	;volatile
  7047  0AB0  2AD9               	goto	l4086
  7048  0AB1                     l474:	
  7049                           ;newmain.c: 676: case 5: RD2=0;break;
  7050                           
  7051  0AB1  1108               	bcf	8,2	;volatile
  7052                           
  7053                           ;newmain.c: 677: }
  7054  0AB2  2AD9               	goto	l4086
  7055  0AB3                     l4082:	
  7056                           
  7057                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7058                           ; Switch size 1, requested type "space"
  7059                           ; Number of cases is 1, Range of values is 0 to 0
  7060                           ; switch strategies available:
  7061                           ; Name         Instructions Cycles
  7062                           ; simple_byte            4     3 (average)
  7063                           ; direct_byte           11     8 (fixed)
  7064                           ; jumptable            260     6 (fixed)
  7065                           ;	Chosen strategy is simple_byte
  7066  0AB3  0823               	movf	_stock+1,w
  7067  0AB4  3A00               	xorlw	0	; case 0
  7068  0AB5  1903               	skipnz
  7069  0AB6  2AB8               	goto	l5058
  7070  0AB7  2AD9               	goto	l4086
  7071  0AB8                     l5058:	
  7072                           
  7073                           ; Switch size 1, requested type "space"
  7074                           ; Number of cases is 5, Range of values is 1 to 5
  7075                           ; switch strategies available:
  7076                           ; Name         Instructions Cycles
  7077                           ; simple_byte           16     9 (average)
  7078                           ; direct_byte           26    11 (fixed)
  7079                           ; jumptable            263     9 (fixed)
  7080                           ;	Chosen strategy is simple_byte
  7081  0AB8  0822               	movf	_stock,w
  7082  0AB9  3A01               	xorlw	1	; case 1
  7083  0ABA  1903               	skipnz
  7084  0ABB  2AA9               	goto	l469
  7085  0ABC  3A03               	xorlw	3	; case 2
  7086  0ABD  1903               	skipnz
  7087  0ABE  2AAB               	goto	l471
  7088  0ABF  3A01               	xorlw	1	; case 3
  7089  0AC0  1903               	skipnz
  7090  0AC1  2AAD               	goto	l472
  7091  0AC2  3A07               	xorlw	7	; case 4
  7092  0AC3  1903               	skipnz
  7093  0AC4  2AAF               	goto	l473
  7094  0AC5  3A01               	xorlw	1	; case 5
  7095  0AC6  1903               	skipnz
  7096  0AC7  2AB1               	goto	l474
  7097  0AC8  2AD9               	goto	l4086
  7098                           
  7099                           ;newmain.c: 679: switch(stock)
  7100  0AC9  2AD9               	goto	l4086
  7101  0ACA                     l477:	
  7102                           ;newmain.c: 680: {
  7103                           ;newmain.c: 681: case 1: while(RD7==1);break;
  7104                           
  7105  0ACA  1F88               	btfss	8,7	;volatile
  7106  0ACB  2AEF               	goto	l4088
  7107  0ACC  2ACA               	goto	l477
  7108  0ACD                     l482:	
  7109                           ;newmain.c: 682: case 2: while(RD5==1);break;
  7110                           
  7111  0ACD  1E88               	btfss	8,5	;volatile
  7112  0ACE  2AEF               	goto	l4088
  7113  0ACF  2ACD               	goto	l482
  7114  0AD0                     l486:	
  7115                           ;newmain.c: 683: case 3: while(RC7==1);break;
  7116                           
  7117  0AD0  1F87               	btfss	7,7	;volatile
  7118  0AD1  2AEF               	goto	l4088
  7119  0AD2  2AD0               	goto	l486
  7120  0AD3                     l490:	
  7121                           ;newmain.c: 684: case 4: while(RC5==1);break;
  7122                           
  7123  0AD3  1E87               	btfss	7,5	;volatile
  7124  0AD4  2AEF               	goto	l4088
  7125  0AD5  2AD3               	goto	l490
  7126  0AD6                     l494:	
  7127                           ;newmain.c: 685: case 5: while(RD3==1);break;
  7128                           
  7129  0AD6  1D88               	btfss	8,3	;volatile
  7130  0AD7  2AEF               	goto	l4088
  7131  0AD8  2AD6               	goto	l494
  7132  0AD9                     l4086:	
  7133                           ;newmain.c: 686: }
  7134                           
  7135                           
  7136                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7137                           ; Switch size 1, requested type "space"
  7138                           ; Number of cases is 1, Range of values is 0 to 0
  7139                           ; switch strategies available:
  7140                           ; Name         Instructions Cycles
  7141                           ; simple_byte            4     3 (average)
  7142                           ; direct_byte           11     8 (fixed)
  7143                           ; jumptable            260     6 (fixed)
  7144                           ;	Chosen strategy is simple_byte
  7145  0AD9  0823               	movf	_stock+1,w
  7146  0ADA  3A00               	xorlw	0	; case 0
  7147  0ADB  1903               	skipnz
  7148  0ADC  2ADE               	goto	l5060
  7149  0ADD  2AEF               	goto	l4088
  7150  0ADE                     l5060:	
  7151                           
  7152                           ; Switch size 1, requested type "space"
  7153                           ; Number of cases is 5, Range of values is 1 to 5
  7154                           ; switch strategies available:
  7155                           ; Name         Instructions Cycles
  7156                           ; simple_byte           16     9 (average)
  7157                           ; direct_byte           26    11 (fixed)
  7158                           ; jumptable            263     9 (fixed)
  7159                           ;	Chosen strategy is simple_byte
  7160  0ADE  0822               	movf	_stock,w
  7161  0ADF  3A01               	xorlw	1	; case 1
  7162  0AE0  1903               	skipnz
  7163  0AE1  2ACA               	goto	l477
  7164  0AE2  3A03               	xorlw	3	; case 2
  7165  0AE3  1903               	skipnz
  7166  0AE4  2ACD               	goto	l482
  7167  0AE5  3A01               	xorlw	1	; case 3
  7168  0AE6  1903               	skipnz
  7169  0AE7  2AD0               	goto	l486
  7170  0AE8  3A07               	xorlw	7	; case 4
  7171  0AE9  1903               	skipnz
  7172  0AEA  2AD3               	goto	l490
  7173  0AEB  3A01               	xorlw	1	; case 5
  7174  0AEC  1903               	skipnz
  7175  0AED  2AD6               	goto	l494
  7176  0AEE  2AEF               	goto	l4088
  7177  0AEF                     l4088:	
  7178                           
  7179                           ;newmain.c: 688: padcount--;
  7180  0AEF  3001               	movlw	1
  7181  0AF0  02B6               	subwf	_padcount,f
  7182  0AF1  3000               	movlw	0
  7183  0AF2  1C03               	skipc
  7184  0AF3  03B7               	decf	_padcount+1,f
  7185  0AF4  02B7               	subwf	_padcount+1,f
  7186                           
  7187                           ;newmain.c: 690: switch(stock)
  7188  0AF5  120A  158A  2B62   	goto	l4112
  7189  0AF8                     L29:	
  7190  0AF8                     L28:	
  7191  0AF8  120A  158A  2D01   	ljmp	L23
  7192                           
  7193                           	psect	maintext_split_4
  7194  0AFB                     l4090:	
  7195                           ;newmain.c: 691: {
  7196                           ;newmain.c: 692: case 1: padcount1=padcount; Write_EEPROM(2,3,padcount1);break;
  7197                           
  7198  0AFB  0837               	movf	_padcount+1,w
  7199  0AFC  00C1               	movwf	_padcount1+1
  7200  0AFD  0836               	movf	_padcount,w
  7201  0AFE  00C0               	movwf	_padcount1
  7202  0AFF  3003               	movlw	3
  7203  0B00  00EB               	movwf	??_main
  7204  0B01  086B               	movf	??_main,w
  7205  0B02  00DE               	movwf	Write_EEPROM@a2
  7206  0B03  0841               	movf	_padcount1+1,w
  7207  0B04  00E0               	movwf	Write_EEPROM@data_value+1
  7208  0B05  0840               	movf	_padcount1,w
  7209  0B06  00DF               	movwf	Write_EEPROM@data_value
  7210  0B07  3002               	movlw	2
  7211  0B08  160A  118A  2356  120A  158A  	fcall	_Write_EEPROM
  7212  0B0D  2B7A               	goto	l4114
  7213  0B0E                     l4094:	
  7214                           ;newmain.c: 693: case 2: padcount2=padcount; Write_EEPROM(6,7,padcount2);break;
  7215                           
  7216  0B0E  1283               	bcf	3,5	;RP0=0, select bank0
  7217  0B0F  1303               	bcf	3,6	;RP1=0, select bank0
  7218  0B10  0837               	movf	_padcount+1,w
  7219  0B11  00BD               	movwf	_padcount2+1
  7220  0B12  0836               	movf	_padcount,w
  7221  0B13  00BC               	movwf	_padcount2
  7222  0B14  3007               	movlw	7
  7223  0B15  00EB               	movwf	??_main
  7224  0B16  086B               	movf	??_main,w
  7225  0B17  00DE               	movwf	Write_EEPROM@a2
  7226  0B18  083D               	movf	_padcount2+1,w
  7227  0B19  00E0               	movwf	Write_EEPROM@data_value+1
  7228  0B1A  083C               	movf	_padcount2,w
  7229  0B1B  00DF               	movwf	Write_EEPROM@data_value
  7230  0B1C  3006               	movlw	6
  7231  0B1D  160A  118A  2356  120A  158A  	fcall	_Write_EEPROM
  7232  0B22  2B7A               	goto	l4114
  7233  0B23                     l4098:	
  7234                           ;newmain.c: 694: case 3: padcount3=padcount; Write_EEPROM(0X0A,0X0B,padcount3);break;
  7235                           
  7236  0B23  1283               	bcf	3,5	;RP0=0, select bank0
  7237  0B24  1303               	bcf	3,6	;RP1=0, select bank0
  7238  0B25  0837               	movf	_padcount+1,w
  7239  0B26  00B5               	movwf	_padcount3+1
  7240  0B27  0836               	movf	_padcount,w
  7241  0B28  00B4               	movwf	_padcount3
  7242  0B29  300B               	movlw	11
  7243  0B2A  00EB               	movwf	??_main
  7244  0B2B  086B               	movf	??_main,w
  7245  0B2C  00DE               	movwf	Write_EEPROM@a2
  7246  0B2D  0835               	movf	_padcount3+1,w
  7247  0B2E  00E0               	movwf	Write_EEPROM@data_value+1
  7248  0B2F  0834               	movf	_padcount3,w
  7249  0B30  00DF               	movwf	Write_EEPROM@data_value
  7250  0B31  300A               	movlw	10
  7251  0B32  160A  118A  2356  120A  158A  	fcall	_Write_EEPROM
  7252  0B37  2B7A               	goto	l4114
  7253  0B38                     l4102:	
  7254                           ;newmain.c: 695: case 4: padcount4=padcount; Write_EEPROM(0X0E,0X0F,padcount4);break;
  7255                           
  7256  0B38  1283               	bcf	3,5	;RP0=0, select bank0
  7257  0B39  1303               	bcf	3,6	;RP1=0, select bank0
  7258  0B3A  0837               	movf	_padcount+1,w
  7259  0B3B  00B1               	movwf	_padcount4+1
  7260  0B3C  0836               	movf	_padcount,w
  7261  0B3D  00B0               	movwf	_padcount4
  7262  0B3E  300F               	movlw	15
  7263  0B3F  00EB               	movwf	??_main
  7264  0B40  086B               	movf	??_main,w
  7265  0B41  00DE               	movwf	Write_EEPROM@a2
  7266  0B42  0831               	movf	_padcount4+1,w
  7267  0B43  00E0               	movwf	Write_EEPROM@data_value+1
  7268  0B44  0830               	movf	_padcount4,w
  7269  0B45  00DF               	movwf	Write_EEPROM@data_value
  7270  0B46  300E               	movlw	14
  7271  0B47  160A  118A  2356  120A  158A  	fcall	_Write_EEPROM
  7272  0B4C  2B7A               	goto	l4114
  7273  0B4D                     l4106:	
  7274                           ;newmain.c: 696: case 5: padcount5=padcount; Write_EEPROM(0X12,0X13,padcount5);break;
  7275                           
  7276  0B4D  1283               	bcf	3,5	;RP0=0, select bank0
  7277  0B4E  1303               	bcf	3,6	;RP1=0, select bank0
  7278  0B4F  0837               	movf	_padcount+1,w
  7279  0B50  00AD               	movwf	_padcount5+1
  7280  0B51  0836               	movf	_padcount,w
  7281  0B52  00AC               	movwf	_padcount5
  7282  0B53  3013               	movlw	19
  7283  0B54  00EB               	movwf	??_main
  7284  0B55  086B               	movf	??_main,w
  7285  0B56  00DE               	movwf	Write_EEPROM@a2
  7286  0B57  082D               	movf	_padcount5+1,w
  7287  0B58  00E0               	movwf	Write_EEPROM@data_value+1
  7288  0B59  082C               	movf	_padcount5,w
  7289  0B5A  00DF               	movwf	Write_EEPROM@data_value
  7290  0B5B  3012               	movlw	18
  7291  0B5C  160A  118A  2356  120A  158A  	fcall	_Write_EEPROM
  7292                           
  7293                           ;newmain.c: 698: }
  7294  0B61  2B7A               	goto	l4114
  7295  0B62                     l4112:	
  7296                           
  7297                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7298                           ; Switch size 1, requested type "space"
  7299                           ; Number of cases is 1, Range of values is 0 to 0
  7300                           ; switch strategies available:
  7301                           ; Name         Instructions Cycles
  7302                           ; simple_byte            4     3 (average)
  7303                           ; direct_byte           11     8 (fixed)
  7304                           ; jumptable            260     6 (fixed)
  7305                           ;	Chosen strategy is simple_byte
  7306  0B62  1283               	bcf	3,5	;RP0=0, select bank0
  7307  0B63  1303               	bcf	3,6	;RP1=0, select bank0
  7308  0B64  0823               	movf	_stock+1,w
  7309  0B65  3A00               	xorlw	0	; case 0
  7310  0B66  1903               	skipnz
  7311  0B67  2B69               	goto	l5062
  7312  0B68  2B7A               	goto	l4114
  7313  0B69                     l5062:	
  7314                           
  7315                           ; Switch size 1, requested type "space"
  7316                           ; Number of cases is 5, Range of values is 1 to 5
  7317                           ; switch strategies available:
  7318                           ; Name         Instructions Cycles
  7319                           ; simple_byte           16     9 (average)
  7320                           ; direct_byte           26    11 (fixed)
  7321                           ; jumptable            263     9 (fixed)
  7322                           ;	Chosen strategy is simple_byte
  7323  0B69  0822               	movf	_stock,w
  7324  0B6A  3A01               	xorlw	1	; case 1
  7325  0B6B  1903               	skipnz
  7326  0B6C  2AFB               	goto	l4090
  7327  0B6D  3A03               	xorlw	3	; case 2
  7328  0B6E  1903               	skipnz
  7329  0B6F  2B0E               	goto	l4094
  7330  0B70  3A01               	xorlw	1	; case 3
  7331  0B71  1903               	skipnz
  7332  0B72  2B23               	goto	l4098
  7333  0B73  3A07               	xorlw	7	; case 4
  7334  0B74  1903               	skipnz
  7335  0B75  2B38               	goto	l4102
  7336  0B76  3A01               	xorlw	1	; case 5
  7337  0B77  1903               	skipnz
  7338  0B78  2B4D               	goto	l4106
  7339  0B79  2B7A               	goto	l4114
  7340  0B7A                     l4114:	
  7341                           
  7342                           ;newmain.c: 700: LCD_CmdWrite(0X80);
  7343  0B7A  3080               	movlw	128
  7344  0B7B  160A  158A  2762  120A  158A  	fcall	_LCD_CmdWrite
  7345                           
  7346                           ;newmain.c: 701: LCD_DisplayString(" PLEASE COLLECT ");
  7347  0B80  3023               	movlw	low (STR_17| (0+32768))
  7348  0B81  1283               	bcf	3,5	;RP0=0, select bank0
  7349  0B82  1303               	bcf	3,6	;RP1=0, select bank0
  7350  0B83  00D0               	movwf	LCD_DisplayString@s
  7351  0B84  3091               	movlw	high (STR_17| (0+32768))
  7352  0B85  00D1               	movwf	LCD_DisplayString@s+1
  7353  0B86  160A  118A  2272  120A  158A  	fcall	_LCD_DisplayString
  7354                           
  7355                           ;newmain.c: 702: LCD_CmdWrite(0XC0);
  7356  0B8B  30C0               	movlw	192
  7357  0B8C  160A  158A  2762  120A  158A  	fcall	_LCD_CmdWrite
  7358                           
  7359                           ;newmain.c: 703: LCD_DisplayString("   THANK YOU !   ");
  7360  0B91  302F               	movlw	low (STR_18| (0+32768))
  7361  0B92  1283               	bcf	3,5	;RP0=0, select bank0
  7362  0B93  1303               	bcf	3,6	;RP1=0, select bank0
  7363  0B94  00D0               	movwf	LCD_DisplayString@s
  7364  0B95  3090               	movlw	high (STR_18| (0+32768))
  7365  0B96  00D1               	movwf	LCD_DisplayString@s+1
  7366  0B97  160A  118A  2272  120A  158A  	fcall	_LCD_DisplayString
  7367                           
  7368                           ;newmain.c: 706: buzzer(2000);
  7369  0B9C  30D0               	movlw	208
  7370  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  7371  0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  7372  0B9F  00CD               	movwf	buzzer@a
  7373  0BA0  3007               	movlw	7
  7374  0BA1  00CE               	movwf	buzzer@a+1
  7375  0BA2  160A  158A  279C  120A  158A  	fcall	_buzzer
  7376                           
  7377                           ;newmain.c: 707: _delay((unsigned long)((700)*(4000000/4000.0)));
  7378  0BA7  3004               	movlw	4
  7379  0BA8  1283               	bcf	3,5	;RP0=0, select bank0
  7380  0BA9  1303               	bcf	3,6	;RP1=0, select bank0
  7381  0BAA  00ED               	movwf	??_main+2
  7382  0BAB  308E               	movlw	142
  7383  0BAC  00EC               	movwf	??_main+1
  7384  0BAD  3011               	movlw	17
  7385  0BAE  00EB               	movwf	??_main
  7386  0BAF                     u4617:	
  7387  0BAF  0BEB               	decfsz	??_main,f
  7388  0BB0  2BAF               	goto	u4617
  7389  0BB1  0BEC               	decfsz	??_main+1,f
  7390  0BB2  2BAF               	goto	u4617
  7391  0BB3  0BED               	decfsz	??_main+2,f
  7392  0BB4  2BAF               	goto	u4617
  7393  0BB5  2BB6               	nop2
  7394                           
  7395                           ;newmain.c: 710: if(padcount1==0 && padcount2==0 && padcount3==0 && padcount4==0 && padc
      +                          ount5==0 )
  7396  0BB6  1283               	bcf	3,5	;RP0=0, select bank0
  7397  0BB7  1303               	bcf	3,6	;RP1=0, select bank0
  7398  0BB8  0840               	movf	_padcount1,w
  7399  0BB9  0441               	iorwf	_padcount1+1,w
  7400  0BBA  1D03               	btfss	3,2
  7401  0BBB  2CEB               	goto	l4156
  7402  0BBC  083C               	movf	_padcount2,w
  7403  0BBD  043D               	iorwf	_padcount2+1,w
  7404  0BBE  1D03               	btfss	3,2
  7405  0BBF  2CEB               	goto	l4156
  7406  0BC0  0834               	movf	_padcount3,w
  7407  0BC1  0435               	iorwf	_padcount3+1,w
  7408  0BC2  1D03               	btfss	3,2
  7409  0BC3  2CEB               	goto	l4156
  7410  0BC4  0830               	movf	_padcount4,w
  7411  0BC5  0431               	iorwf	_padcount4+1,w
  7412  0BC6  1D03               	btfss	3,2
  7413  0BC7  2CEB               	goto	l4156
  7414  0BC8  082C               	movf	_padcount5,w
  7415  0BC9  042D               	iorwf	_padcount5+1,w
  7416  0BCA  1D03               	btfss	3,2
  7417  0BCB  2CEB               	goto	l4156
  7418                           
  7419                           ;newmain.c: 711: {
  7420                           ;newmain.c: 712: LCD_Clear();
  7421  0BCC  160A  158A  26F5  120A  158A  	fcall	_LCD_Clear
  7422                           
  7423                           ;newmain.c: 713: LCD_CmdWrite(0X80);
  7424  0BD1  3080               	movlw	128
  7425  0BD2  160A  158A  2762  120A  158A  	fcall	_LCD_CmdWrite
  7426                           
  7427                           ;newmain.c: 714: LCD_DisplayString(" STOCK EMPTY !!! ");
  7428  0BD7  3065               	movlw	low (STR_19| (0+32768))
  7429  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  7430  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  7431  0BDA  00D0               	movwf	LCD_DisplayString@s
  7432  0BDB  3090               	movlw	high (STR_19| (0+32768))
  7433  0BDC  00D1               	movwf	LCD_DisplayString@s+1
  7434  0BDD  160A  118A  2272  120A  158A  	fcall	_LCD_DisplayString
  7435                           
  7436                           ;newmain.c: 715: LCD_CmdWrite(0XC0);
  7437  0BE2  30C0               	movlw	192
  7438  0BE3  160A  158A  2762  120A  158A  	fcall	_LCD_CmdWrite
  7439                           
  7440                           ;newmain.c: 716: LCD_DisplayString("  PLEASE LOAD.. ");
  7441  0BE8  3001               	movlw	low (STR_20| (0+32768))
  7442  0BE9  1283               	bcf	3,5	;RP0=0, select bank0
  7443  0BEA  1303               	bcf	3,6	;RP1=0, select bank0
  7444  0BEB  00D0               	movwf	LCD_DisplayString@s
  7445  0BEC  3091               	movlw	high (STR_20| (0+32768))
  7446  0BED  00D1               	movwf	LCD_DisplayString@s+1
  7447  0BEE  160A  118A  2272  120A  158A  	fcall	_LCD_DisplayString
  7448                           
  7449                           ;newmain.c: 717: buzzer(3000);
  7450  0BF3  30B8               	movlw	184
  7451  0BF4  1283               	bcf	3,5	;RP0=0, select bank0
  7452  0BF5  1303               	bcf	3,6	;RP1=0, select bank0
  7453  0BF6  00CD               	movwf	buzzer@a
  7454  0BF7  300B               	movlw	11
  7455  0BF8  00CE               	movwf	buzzer@a+1
  7456  0BF9  160A  158A  279C  120A  158A  	fcall	_buzzer
  7457  0BFE                     l4144:	
  7458                           ;newmain.c: 718: while(RE2==1)
  7459                           
  7460  0BFE  1283               	bcf	3,5	;RP0=0, select bank0
  7461  0BFF  1303               	bcf	3,6	;RP1=0, select bank0
  7462  0C00  1D09               	btfss	9,2	;volatile
  7463  0C01  2C11               	goto	l508
  7464                           
  7465                           ;newmain.c: 719: {
  7466                           ;newmain.c: 720: RA3=~RA3;
  7467  0C02  3008               	movlw	8
  7468  0C03  1283               	bcf	3,5	;RP0=0, select bank0
  7469  0C04  1303               	bcf	3,6	;RP1=0, select bank0
  7470  0C05  0685               	xorwf	5,f
  7471                           
  7472                           ;newmain.c: 721: _delay((unsigned long)((75)*(4000000/4000.0)));
  7473  0C06  3062               	movlw	98
  7474  0C07  1283               	bcf	3,5	;RP0=0, select bank0
  7475  0C08  1303               	bcf	3,6	;RP1=0, select bank0
  7476  0C09  00EC               	movwf	??_main+1
  7477  0C0A  3065               	movlw	101
  7478  0C0B  00EB               	movwf	??_main
  7479  0C0C                     u4627:	
  7480  0C0C  0BEB               	decfsz	??_main,f
  7481  0C0D  2C0C               	goto	u4627
  7482  0C0E  0BEC               	decfsz	??_main+1,f
  7483  0C0F  2C0C               	goto	u4627
  7484  0C10  2BFE               	goto	l4144
  7485  0C11                     l508:	
  7486                           ;newmain.c: 723: }
  7487                           ;newmain.c: 724: while(!RE2);
  7488                           
  7489  0C11  1D09               	btfss	9,2	;volatile
  7490  0C12  2C11               	goto	l508
  7491                           
  7492                           ;newmain.c: 725: RA3=0;
  7493  0C13  1185               	bcf	5,3	;volatile
  7494                           
  7495                           ;newmain.c: 727: padcount1=Read_EEPROM(0,1);
  7496  0C14  01D3               	clrf	Read_EEPROM@b2
  7497  0C15  0AD3               	incf	Read_EEPROM@b2,f
  7498  0C16  3000               	movlw	0
  7499  0C17  160A  118A  23FE  120A  158A  	fcall	_Read_EEPROM
  7500  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  7501  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  7502  0C1E  0854               	movf	?_Read_EEPROM+1,w
  7503  0C1F  00C1               	movwf	_padcount1+1
  7504  0C20  0853               	movf	?_Read_EEPROM,w
  7505  0C21  00C0               	movwf	_padcount1
  7506                           
  7507                           ;newmain.c: 728: padcount2=Read_EEPROM(4,5);
  7508  0C22  3005               	movlw	5
  7509  0C23  00EB               	movwf	??_main
  7510  0C24  086B               	movf	??_main,w
  7511  0C25  00D3               	movwf	Read_EEPROM@b2
  7512  0C26  3004               	movlw	4
  7513  0C27  160A  118A  23FE  120A  158A  	fcall	_Read_EEPROM
  7514  0C2C  1283               	bcf	3,5	;RP0=0, select bank0
  7515  0C2D  1303               	bcf	3,6	;RP1=0, select bank0
  7516  0C2E  0854               	movf	?_Read_EEPROM+1,w
  7517  0C2F  00BD               	movwf	_padcount2+1
  7518  0C30  0853               	movf	?_Read_EEPROM,w
  7519  0C31  00BC               	movwf	_padcount2
  7520                           
  7521                           ;newmain.c: 729: padcount3=Read_EEPROM(8,9);
  7522  0C32  3009               	movlw	9
  7523  0C33  00EB               	movwf	??_main
  7524  0C34  086B               	movf	??_main,w
  7525  0C35  00D3               	movwf	Read_EEPROM@b2
  7526  0C36  3008               	movlw	8
  7527  0C37  160A  118A  23FE  120A  158A  	fcall	_Read_EEPROM
  7528  0C3C  1283               	bcf	3,5	;RP0=0, select bank0
  7529  0C3D  1303               	bcf	3,6	;RP1=0, select bank0
  7530  0C3E  0854               	movf	?_Read_EEPROM+1,w
  7531  0C3F  00B5               	movwf	_padcount3+1
  7532  0C40  0853               	movf	?_Read_EEPROM,w
  7533  0C41  00B4               	movwf	_padcount3
  7534                           
  7535                           ;newmain.c: 730: padcount4=Read_EEPROM(0X0C,0X0D);
  7536  0C42  300D               	movlw	13
  7537  0C43  00EB               	movwf	??_main
  7538  0C44  086B               	movf	??_main,w
  7539  0C45  00D3               	movwf	Read_EEPROM@b2
  7540  0C46  300C               	movlw	12
  7541  0C47  160A  118A  23FE  120A  158A  	fcall	_Read_EEPROM
  7542  0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  7543  0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  7544  0C4E  0854               	movf	?_Read_EEPROM+1,w
  7545  0C4F  00B1               	movwf	_padcount4+1
  7546  0C50  0853               	movf	?_Read_EEPROM,w
  7547  0C51  00B0               	movwf	_padcount4
  7548                           
  7549                           ;newmain.c: 731: padcount5=Read_EEPROM(0X10,0X11);
  7550  0C52  3011               	movlw	17
  7551  0C53  00EB               	movwf	??_main
  7552  0C54  086B               	movf	??_main,w
  7553  0C55  00D3               	movwf	Read_EEPROM@b2
  7554  0C56  3010               	movlw	16
  7555  0C57  160A  118A  23FE  120A  158A  	fcall	_Read_EEPROM
  7556  0C5C  1283               	bcf	3,5	;RP0=0, select bank0
  7557  0C5D  1303               	bcf	3,6	;RP1=0, select bank0
  7558  0C5E  0854               	movf	?_Read_EEPROM+1,w
  7559  0C5F  00AD               	movwf	_padcount5+1
  7560  0C60  0853               	movf	?_Read_EEPROM,w
  7561  0C61  00AC               	movwf	_padcount5
  7562                           
  7563                           ;newmain.c: 732: Write_EEPROM(2,3,padcount1);
  7564  0C62  3003               	movlw	3
  7565  0C63  00EB               	movwf	??_main
  7566  0C64  086B               	movf	??_main,w
  7567  0C65  00DE               	movwf	Write_EEPROM@a2
  7568  0C66  0841               	movf	_padcount1+1,w
  7569  0C67  00E0               	movwf	Write_EEPROM@data_value+1
  7570  0C68  0840               	movf	_padcount1,w
  7571  0C69  00DF               	movwf	Write_EEPROM@data_value
  7572  0C6A  3002               	movlw	2
  7573  0C6B  160A  118A  2356  120A  158A  	fcall	_Write_EEPROM
  7574                           
  7575                           ;newmain.c: 733: Write_EEPROM(6,7,padcount2);
  7576  0C70  3007               	movlw	7
  7577  0C71  1283               	bcf	3,5	;RP0=0, select bank0
  7578  0C72  1303               	bcf	3,6	;RP1=0, select bank0
  7579  0C73  00EB               	movwf	??_main
  7580  0C74  086B               	movf	??_main,w
  7581  0C75  00DE               	movwf	Write_EEPROM@a2
  7582  0C76  083D               	movf	_padcount2+1,w
  7583  0C77  00E0               	movwf	Write_EEPROM@data_value+1
  7584  0C78  083C               	movf	_padcount2,w
  7585  0C79  00DF               	movwf	Write_EEPROM@data_value
  7586  0C7A  3006               	movlw	6
  7587  0C7B  160A  118A  2356  120A  158A  	fcall	_Write_EEPROM
  7588                           
  7589                           ;newmain.c: 734: Write_EEPROM(0X0A,0X0B,padcount3);
  7590  0C80  300B               	movlw	11
  7591  0C81  1283               	bcf	3,5	;RP0=0, select bank0
  7592  0C82  1303               	bcf	3,6	;RP1=0, select bank0
  7593  0C83  00EB               	movwf	??_main
  7594  0C84  086B               	movf	??_main,w
  7595  0C85  00DE               	movwf	Write_EEPROM@a2
  7596  0C86  0835               	movf	_padcount3+1,w
  7597  0C87  00E0               	movwf	Write_EEPROM@data_value+1
  7598  0C88  0834               	movf	_padcount3,w
  7599  0C89  00DF               	movwf	Write_EEPROM@data_value
  7600  0C8A  300A               	movlw	10
  7601  0C8B  160A  118A  2356  120A  158A  	fcall	_Write_EEPROM
  7602                           
  7603                           ;newmain.c: 735: Write_EEPROM(0X0E,0X0F,padcount4);
  7604  0C90  300F               	movlw	15
  7605  0C91  1283               	bcf	3,5	;RP0=0, select bank0
  7606  0C92  1303               	bcf	3,6	;RP1=0, select bank0
  7607  0C93  00EB               	movwf	??_main
  7608  0C94  086B               	movf	??_main,w
  7609  0C95  00DE               	movwf	Write_EEPROM@a2
  7610  0C96  0831               	movf	_padcount4+1,w
  7611  0C97  00E0               	movwf	Write_EEPROM@data_value+1
  7612  0C98  0830               	movf	_padcount4,w
  7613  0C99  00DF               	movwf	Write_EEPROM@data_value
  7614  0C9A  300E               	movlw	14
  7615  0C9B  160A  118A  2356  120A  158A  	fcall	_Write_EEPROM
  7616                           
  7617                           ;newmain.c: 736: Write_EEPROM(0X12,0X13,padcount5);
  7618  0CA0  3013               	movlw	19
  7619  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  7620  0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  7621  0CA3  00EB               	movwf	??_main
  7622  0CA4  086B               	movf	??_main,w
  7623  0CA5  00DE               	movwf	Write_EEPROM@a2
  7624  0CA6  082D               	movf	_padcount5+1,w
  7625  0CA7  00E0               	movwf	Write_EEPROM@data_value+1
  7626  0CA8  082C               	movf	_padcount5,w
  7627  0CA9  00DF               	movwf	Write_EEPROM@data_value
  7628  0CAA  3012               	movlw	18
  7629  0CAB  160A  118A  2356  120A  158A  	fcall	_Write_EEPROM
  7630                           
  7631                           ;newmain.c: 738: LCD_Clear();
  7632  0CB0  160A  158A  26F5  120A  158A  	fcall	_LCD_Clear
  7633                           
  7634                           ;newmain.c: 739: LCD_DisplayString("     STOCKS     ");
  7635  0CB5  309B               	movlw	low (STR_21| (0+32768))
  7636  0CB6  1283               	bcf	3,5	;RP0=0, select bank0
  7637  0CB7  1303               	bcf	3,6	;RP1=0, select bank0
  7638  0CB8  00D0               	movwf	LCD_DisplayString@s
  7639  0CB9  3090               	movlw	high (STR_21| (0+32768))
  7640  0CBA  00D1               	movwf	LCD_DisplayString@s+1
  7641  0CBB  160A  118A  2272  120A  158A  	fcall	_LCD_DisplayString
  7642                           
  7643                           ;newmain.c: 740: LCD_CmdWrite(0XC0);
  7644  0CC0  30C0               	movlw	192
  7645  0CC1  160A  158A  2762  120A  158A  	fcall	_LCD_CmdWrite
  7646                           
  7647                           ;newmain.c: 741: LCD_DisplayString("    RELOADED..  ");
  7648  0CC6  30DF               	movlw	low (STR_22| (0+32768))
  7649  0CC7  1283               	bcf	3,5	;RP0=0, select bank0
  7650  0CC8  1303               	bcf	3,6	;RP1=0, select bank0
  7651  0CC9  00D0               	movwf	LCD_DisplayString@s
  7652  0CCA  3090               	movlw	high (STR_22| (0+32768))
  7653  0CCB  00D1               	movwf	LCD_DisplayString@s+1
  7654  0CCC  160A  118A  2272  120A  158A  	fcall	_LCD_DisplayString
  7655                           
  7656                           ;newmain.c: 742: buzzer(2000);
  7657  0CD1  30D0               	movlw	208
  7658  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  7659  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  7660  0CD4  00CD               	movwf	buzzer@a
  7661  0CD5  3007               	movlw	7
  7662  0CD6  00CE               	movwf	buzzer@a+1
  7663  0CD7  160A  158A  279C  120A  158A  	fcall	_buzzer
  7664                           
  7665                           ;newmain.c: 743: _delay((unsigned long)((700)*(4000000/4000.0)));
  7666  0CDC  3004               	movlw	4
  7667  0CDD  1283               	bcf	3,5	;RP0=0, select bank0
  7668  0CDE  1303               	bcf	3,6	;RP1=0, select bank0
  7669  0CDF  00ED               	movwf	??_main+2
  7670  0CE0  308E               	movlw	142
  7671  0CE1  00EC               	movwf	??_main+1
  7672  0CE2  3011               	movlw	17
  7673  0CE3  00EB               	movwf	??_main
  7674  0CE4                     u4637:	
  7675  0CE4  0BEB               	decfsz	??_main,f
  7676  0CE5  2CE4               	goto	u4637
  7677  0CE6  0BEC               	decfsz	??_main+1,f
  7678  0CE7  2CE4               	goto	u4637
  7679  0CE8  0BED               	decfsz	??_main+2,f
  7680  0CE9  2CE4               	goto	u4637
  7681  0CEA  2CEB               	nop2
  7682  0CEB                     l4156:	
  7683                           
  7684                           ;newmain.c: 745: }
  7685                           ;newmain.c: 746: status=0;
  7686  0CEB  10F1               	bcf	_status/(0+8),_status& (0+7)
  7687                           
  7688                           ;newmain.c: 747: TRISA1 = 1;
  7689  0CEC  1683               	bsf	3,5	;RP0=1, select bank1
  7690  0CED  1303               	bcf	3,6	;RP1=0, select bank1
  7691  0CEE  1485               	bsf	5,1	;volatile
  7692                           
  7693                           ;newmain.c: 748: TRISA0 = 1;
  7694  0CEF  1405               	bsf	5,0	;volatile
  7695                           
  7696                           ;newmain.c: 749: TRISA5 = 1;
  7697  0CF0  1685               	bsf	5,5	;volatile
  7698                           
  7699                           ;newmain.c: 750: TRISB6 = 1;
  7700  0CF1  1706               	bsf	6,6	;volatile
  7701                           
  7702                           ;newmain.c: 751: TRISB7 = 1;
  7703  0CF2  1786               	bsf	6,7	;volatile
  7704                           
  7705                           ;newmain.c: 752: buzzer(70);
  7706  0CF3  3046               	movlw	70
  7707  0CF4  1283               	bcf	3,5	;RP0=0, select bank0
  7708  0CF5  1303               	bcf	3,6	;RP1=0, select bank0
  7709  0CF6  00CD               	movwf	buzzer@a
  7710  0CF7  3000               	movlw	0
  7711  0CF8  00CE               	movwf	buzzer@a+1
  7712  0CF9  160A  158A  279C  120A  158A  	fcall	_buzzer
  7713                           
  7714                           ;newmain.c: 753: LCD_Clear();
  7715  0CFE  160A  158A  26F5   	fcall	_LCD_Clear
  7716  0D01                     L23:	
  7717  0D01  120A  158A  2FE7   	goto	l4172
  7718                           
  7719                           	psect	maintext_split_5
  7720  0033                     l4174:	
  7721                           ;newmain.c: 759: while(menu)
  7722                           
  7723                           ;newmain.c: 754: }
  7724                           ;newmain.c: 756: }
  7725                           ;newmain.c: 758: flash:
  7726                           
  7727                           
  7728                           ;newmain.c: 760: {
  7729                           ;newmain.c: 761: LCD_CmdWrite(0X02);
  7730  0033  3002               	movlw	2
  7731  0034  160A  158A  2762  120A  118A  	fcall	_LCD_CmdWrite
  7732                           
  7733                           ;newmain.c: 762: LCD_DisplayString("ENTER PASSWORD ?");
  7734  0039  3056               	movlw	low (STR_23| (0+32768))
  7735  003A  1283               	bcf	3,5	;RP0=0, select bank0
  7736  003B  1303               	bcf	3,6	;RP1=0, select bank0
  7737  003C  00D0               	movwf	LCD_DisplayString@s
  7738  003D  3091               	movlw	high (STR_23| (0+32768))
  7739  003E  00D1               	movwf	LCD_DisplayString@s+1
  7740  003F  160A  118A  2272  120A  118A  	fcall	_LCD_DisplayString
  7741                           
  7742                           ;newmain.c: 763: LCD_CmdWrite(0XC7);
  7743  0044  30C7               	movlw	199
  7744  0045  160A  158A  2762  120A  118A  	fcall	_LCD_CmdWrite
  7745                           
  7746                           ;newmain.c: 764: if(check==0)
  7747  004A  1B70               	btfsc	_check/(0+8),_check& (0+7)
  7748  004B  2857               	goto	l4184
  7749                           
  7750                           ;newmain.c: 765: LCD_DisplayString("**");
  7751  004C  3014               	movlw	low (STR_24| (0+32768))
  7752  004D  1283               	bcf	3,5	;RP0=0, select bank0
  7753  004E  1303               	bcf	3,6	;RP1=0, select bank0
  7754  004F  00D0               	movwf	LCD_DisplayString@s
  7755  0050  3092               	movlw	high (STR_24| (0+32768))
  7756  0051  00D1               	movwf	LCD_DisplayString@s+1
  7757  0052  160A  118A  2272  120A  118A  	fcall	_LCD_DisplayString
  7758  0057                     l4184:	
  7759                           
  7760                           ;newmain.c: 767: if(check==1)
  7761  0057  1F70               	btfss	_check/(0+8),_check& (0+7)
  7762  0058  2864               	goto	l4188
  7763                           
  7764                           ;newmain.c: 768: displaypass(value);
  7765  0059  1283               	bcf	3,5	;RP0=0, select bank0
  7766  005A  1303               	bcf	3,6	;RP1=0, select bank0
  7767  005B  0829               	movf	_value+1,w
  7768  005C  00D7               	movwf	displaypass@data+1
  7769  005D  0828               	movf	_value,w
  7770  005E  00D6               	movwf	displaypass@data
  7771  005F  160A  118A  22C3  120A  118A  	fcall	_displaypass
  7772  0064                     l4188:	
  7773                           
  7774                           ;newmain.c: 770: if(!RE1)
  7775  0064  1283               	bcf	3,5	;RP0=0, select bank0
  7776  0065  1303               	bcf	3,6	;RP1=0, select bank0
  7777  0066  1889               	btfsc	9,1	;volatile
  7778  0067  2879               	goto	l515
  7779                           
  7780                           ;newmain.c: 771: {
  7781                           ;newmain.c: 773: check=1;
  7782  0068  1770               	bsf	_check/(0+8),_check& (0+7)
  7783                           
  7784                           ;newmain.c: 774: if(value==99)
  7785  0069  3063               	movlw	99
  7786  006A  0628               	xorwf	_value,w
  7787  006B  0429               	iorwf	_value+1,w
  7788  006C  1D03               	btfss	3,2
  7789  006D  2871               	goto	l4196
  7790                           
  7791                           ;newmain.c: 775: {
  7792                           ;newmain.c: 776: value=0;
  7793  006E  01A8               	clrf	_value
  7794  006F  01A9               	clrf	_value+1
  7795                           
  7796                           ;newmain.c: 777: goto loop;
  7797  0070  2877               	goto	l518
  7798  0071                     l4196:	
  7799                           
  7800                           ;newmain.c: 778: }
  7801                           ;newmain.c: 779: value++;
  7802  0071  3001               	movlw	1
  7803  0072  07A8               	addwf	_value,f
  7804  0073  1803               	skipnc
  7805  0074  0AA9               	incf	_value+1,f
  7806  0075  3000               	movlw	0
  7807  0076  07A9               	addwf	_value+1,f
  7808  0077                     l518:	
  7809                           ;newmain.c: 782: while(!RE1);
  7810                           
  7811                           ;newmain.c: 780: loop:
  7812                           
  7813  0077  1C89               	btfss	9,1	;volatile
  7814  0078  2877               	goto	l518
  7815  0079                     l515:	
  7816                           
  7817                           ;newmain.c: 783: }
  7818                           ;newmain.c: 785: if(!RE0)
  7819  0079  1809               	btfsc	9,0	;volatile
  7820  007A  288D               	goto	l521
  7821                           
  7822                           ;newmain.c: 786: {
  7823                           ;newmain.c: 788: check=1;
  7824  007B  1770               	bsf	_check/(0+8),_check& (0+7)
  7825                           
  7826                           ;newmain.c: 789: if(value==0)
  7827  007C  0828               	movf	_value,w
  7828  007D  0429               	iorwf	_value+1,w
  7829  007E  1D03               	btfss	3,2
  7830  007F  2885               	goto	l4204
  7831                           
  7832                           ;newmain.c: 790: {
  7833                           ;newmain.c: 791: value=99;
  7834  0080  3063               	movlw	99
  7835  0081  00A8               	movwf	_value
  7836  0082  3000               	movlw	0
  7837  0083  00A9               	movwf	_value+1
  7838                           
  7839                           ;newmain.c: 792: goto jump;
  7840  0084  288B               	goto	l524
  7841  0085                     l4204:	
  7842                           
  7843                           ;newmain.c: 793: }
  7844                           ;newmain.c: 794: value--;
  7845  0085  3001               	movlw	1
  7846  0086  02A8               	subwf	_value,f
  7847  0087  3000               	movlw	0
  7848  0088  1C03               	skipc
  7849  0089  03A9               	decf	_value+1,f
  7850  008A  02A9               	subwf	_value+1,f
  7851  008B                     l524:	
  7852                           ;newmain.c: 797: while(!RE0);
  7853                           
  7854                           ;newmain.c: 795: jump:
  7855                           
  7856  008B  1C09               	btfss	9,0	;volatile
  7857  008C  288B               	goto	l524
  7858  008D                     l521:	
  7859                           
  7860                           ;newmain.c: 798: }
  7861                           ;newmain.c: 800: if(!RE3)
  7862  008D  1989               	btfsc	9,3	;volatile
  7863  008E  2A0B               	goto	l511
  7864  008F                     l528:	
  7865                           ;newmain.c: 801: {
  7866                           ;newmain.c: 802: while(!RE3);
  7867                           
  7868  008F  1D89               	btfss	9,3	;volatile
  7869  0090  288F               	goto	l528
  7870                           
  7871                           ;newmain.c: 803: if(value==05)
  7872  0091  3005               	movlw	5
  7873  0092  0628               	xorwf	_value,w
  7874  0093  0429               	iorwf	_value+1,w
  7875  0094  1D03               	btfss	3,2
  7876  0095  2960               	goto	l4248
  7877                           
  7878                           ;newmain.c: 804: {
  7879                           ;newmain.c: 805: LCD_Clear();
  7880  0096  160A  158A  26F5  120A  118A  	fcall	_LCD_Clear
  7881                           
  7882                           ;newmain.c: 806: value=0;
  7883  009B  1283               	bcf	3,5	;RP0=0, select bank0
  7884  009C  1303               	bcf	3,6	;RP1=0, select bank0
  7885  009D  01A8               	clrf	_value
  7886  009E  01A9               	clrf	_value+1
  7887                           
  7888                           ;newmain.c: 807: check=0;menu=0;set=1;pad=0;coin=0;
  7889  009F  1370               	bcf	_check/(0+8),_check& (0+7)
  7890  00A0  1071               	bcf	_menu/(0+8),_menu& (0+7)
  7891  00A1  17F0               	bsf	_set/(0+8),_set& (0+7)
  7892  00A2  12F0               	bcf	_pad/(0+8),_pad& (0+7)
  7893  00A3  1270               	bcf	_coin/(0+8),_coin& (0+7)
  7894                           
  7895                           ;newmain.c: 809: padcount1=Read_EEPROM(0,1);
  7896  00A4  01D3               	clrf	Read_EEPROM@b2
  7897  00A5  0AD3               	incf	Read_EEPROM@b2,f
  7898  00A6  3000               	movlw	0
  7899  00A7  160A  118A  23FE  120A  118A  	fcall	_Read_EEPROM
  7900  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  7901  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  7902  00AE  0854               	movf	?_Read_EEPROM+1,w
  7903  00AF  00C1               	movwf	_padcount1+1
  7904  00B0  0853               	movf	?_Read_EEPROM,w
  7905  00B1  00C0               	movwf	_padcount1
  7906                           
  7907                           ;newmain.c: 810: padcount2=Read_EEPROM(4,5);
  7908  00B2  3005               	movlw	5
  7909  00B3  00EB               	movwf	??_main
  7910  00B4  086B               	movf	??_main,w
  7911  00B5  00D3               	movwf	Read_EEPROM@b2
  7912  00B6  3004               	movlw	4
  7913  00B7  160A  118A  23FE  120A  118A  	fcall	_Read_EEPROM
  7914  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  7915  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  7916  00BE  0854               	movf	?_Read_EEPROM+1,w
  7917  00BF  00BD               	movwf	_padcount2+1
  7918  00C0  0853               	movf	?_Read_EEPROM,w
  7919  00C1  00BC               	movwf	_padcount2
  7920                           
  7921                           ;newmain.c: 811: padcount3=Read_EEPROM(8,9);
  7922  00C2  3009               	movlw	9
  7923  00C3  00EB               	movwf	??_main
  7924  00C4  086B               	movf	??_main,w
  7925  00C5  00D3               	movwf	Read_EEPROM@b2
  7926  00C6  3008               	movlw	8
  7927  00C7  160A  118A  23FE  120A  118A  	fcall	_Read_EEPROM
  7928  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  7929  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  7930  00CE  0854               	movf	?_Read_EEPROM+1,w
  7931  00CF  00B5               	movwf	_padcount3+1
  7932  00D0  0853               	movf	?_Read_EEPROM,w
  7933  00D1  00B4               	movwf	_padcount3
  7934                           
  7935                           ;newmain.c: 812: padcount4=Read_EEPROM(0X0C,0X0D);
  7936  00D2  300D               	movlw	13
  7937  00D3  00EB               	movwf	??_main
  7938  00D4  086B               	movf	??_main,w
  7939  00D5  00D3               	movwf	Read_EEPROM@b2
  7940  00D6  300C               	movlw	12
  7941  00D7  160A  118A  23FE  120A  118A  	fcall	_Read_EEPROM
  7942  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  7943  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  7944  00DE  0854               	movf	?_Read_EEPROM+1,w
  7945  00DF  00B1               	movwf	_padcount4+1
  7946  00E0  0853               	movf	?_Read_EEPROM,w
  7947  00E1  00B0               	movwf	_padcount4
  7948                           
  7949                           ;newmain.c: 813: padcount5=Read_EEPROM(0X10,0X11);
  7950  00E2  3011               	movlw	17
  7951  00E3  00EB               	movwf	??_main
  7952  00E4  086B               	movf	??_main,w
  7953  00E5  00D3               	movwf	Read_EEPROM@b2
  7954  00E6  3010               	movlw	16
  7955  00E7  160A  118A  23FE  120A  118A  	fcall	_Read_EEPROM
  7956  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  7957  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  7958  00EE  0854               	movf	?_Read_EEPROM+1,w
  7959  00EF  00AD               	movwf	_padcount5+1
  7960  00F0  0853               	movf	?_Read_EEPROM,w
  7961  00F1  00AC               	movwf	_padcount5
  7962                           
  7963                           ;newmain.c: 815: rupee1=Read_EEPROM_Price(0x14,0x15,0X16);
  7964  00F2  3015               	movlw	21
  7965  00F3  00EB               	movwf	??_main
  7966  00F4  086B               	movf	??_main,w
  7967  00F5  00D3               	movwf	Read_EEPROM_Price@b2
  7968  00F6  3016               	movlw	22
  7969  00F7  00EC               	movwf	??_main+1
  7970  00F8  086C               	movf	??_main+1,w
  7971  00F9  00D4               	movwf	Read_EEPROM_Price@b3
  7972  00FA  3014               	movlw	20
  7973  00FB  160A  118A  2615  120A  118A  	fcall	_Read_EEPROM_Price
  7974  0100  1283               	bcf	3,5	;RP0=0, select bank0
  7975  0101  1303               	bcf	3,6	;RP1=0, select bank0
  7976  0102  0854               	movf	?_Read_EEPROM_Price+1,w
  7977  0103  00BF               	movwf	_rupee1+1
  7978  0104  0853               	movf	?_Read_EEPROM_Price,w
  7979  0105  00BE               	movwf	_rupee1
  7980                           
  7981                           ;newmain.c: 816: rupee2=Read_EEPROM_Price(0X17,0X18,0X19);
  7982  0106  3018               	movlw	24
  7983  0107  00EB               	movwf	??_main
  7984  0108  086B               	movf	??_main,w
  7985  0109  00D3               	movwf	Read_EEPROM_Price@b2
  7986  010A  3019               	movlw	25
  7987  010B  00EC               	movwf	??_main+1
  7988  010C  086C               	movf	??_main+1,w
  7989  010D  00D4               	movwf	Read_EEPROM_Price@b3
  7990  010E  3017               	movlw	23
  7991  010F  160A  118A  2615  120A  118A  	fcall	_Read_EEPROM_Price
  7992  0114  1283               	bcf	3,5	;RP0=0, select bank0
  7993  0115  1303               	bcf	3,6	;RP1=0, select bank0
  7994  0116  0854               	movf	?_Read_EEPROM_Price+1,w
  7995  0117  00BB               	movwf	_rupee2+1
  7996  0118  0853               	movf	?_Read_EEPROM_Price,w
  7997  0119  00BA               	movwf	_rupee2
  7998                           
  7999                           ;newmain.c: 817: rupee3=Read_EEPROM_Price(0X1A,0X1B,0X1C);
  8000  011A  301B               	movlw	27
  8001  011B  00EB               	movwf	??_main
  8002  011C  086B               	movf	??_main,w
  8003  011D  00D3               	movwf	Read_EEPROM_Price@b2
  8004  011E  301C               	movlw	28
  8005  011F  00EC               	movwf	??_main+1
  8006  0120  086C               	movf	??_main+1,w
  8007  0121  00D4               	movwf	Read_EEPROM_Price@b3
  8008  0122  301A               	movlw	26
  8009  0123  160A  118A  2615  120A  118A  	fcall	_Read_EEPROM_Price
  8010  0128  1283               	bcf	3,5	;RP0=0, select bank0
  8011  0129  1303               	bcf	3,6	;RP1=0, select bank0
  8012  012A  0854               	movf	?_Read_EEPROM_Price+1,w
  8013  012B  00B3               	movwf	_rupee3+1
  8014  012C  0853               	movf	?_Read_EEPROM_Price,w
  8015  012D  00B2               	movwf	_rupee3
  8016                           
  8017                           ;newmain.c: 818: rupee4=Read_EEPROM_Price(0X1D,0X1E,0X1F);
  8018  012E  301E               	movlw	30
  8019  012F  00EB               	movwf	??_main
  8020  0130  086B               	movf	??_main,w
  8021  0131  00D3               	movwf	Read_EEPROM_Price@b2
  8022  0132  301F               	movlw	31
  8023  0133  00EC               	movwf	??_main+1
  8024  0134  086C               	movf	??_main+1,w
  8025  0135  00D4               	movwf	Read_EEPROM_Price@b3
  8026  0136  301D               	movlw	29
  8027  0137  160A  118A  2615  120A  118A  	fcall	_Read_EEPROM_Price
  8028  013C  1283               	bcf	3,5	;RP0=0, select bank0
  8029  013D  1303               	bcf	3,6	;RP1=0, select bank0
  8030  013E  0854               	movf	?_Read_EEPROM_Price+1,w
  8031  013F  00AF               	movwf	_rupee4+1
  8032  0140  0853               	movf	?_Read_EEPROM_Price,w
  8033  0141  00AE               	movwf	_rupee4
  8034                           
  8035                           ;newmain.c: 819: rupee5=Read_EEPROM_Price(0X20,0X21,0X22);
  8036  0142  3021               	movlw	33
  8037  0143  00EB               	movwf	??_main
  8038  0144  086B               	movf	??_main,w
  8039  0145  00D3               	movwf	Read_EEPROM_Price@b2
  8040  0146  3022               	movlw	34
  8041  0147  00EC               	movwf	??_main+1
  8042  0148  086C               	movf	??_main+1,w
  8043  0149  00D4               	movwf	Read_EEPROM_Price@b3
  8044  014A  3020               	movlw	32
  8045  014B  160A  118A  2615  120A  118A  	fcall	_Read_EEPROM_Price
  8046  0150  1283               	bcf	3,5	;RP0=0, select bank0
  8047  0151  1303               	bcf	3,6	;RP1=0, select bank0
  8048  0152  0854               	movf	?_Read_EEPROM_Price+1,w
  8049  0153  00AB               	movwf	_rupee5+1
  8050  0154  0853               	movf	?_Read_EEPROM_Price,w
  8051  0155  00AA               	movwf	_rupee5
  8052                           
  8053                           ;newmain.c: 821: buzzer(50);
  8054  0156  3032               	movlw	50
  8055  0157  00CD               	movwf	buzzer@a
  8056  0158  3000               	movlw	0
  8057  0159  00CE               	movwf	buzzer@a+1
  8058  015A  160A  158A  279C  120A  118A  	fcall	_buzzer
  8059                           
  8060                           ;newmain.c: 822: break;
  8061  015F  2EB3               	goto	l535
  8062  0160                     l4248:	
  8063                           ;newmain.c: 823: }
  8064                           
  8065                           
  8066                           ;newmain.c: 824: else
  8067                           ;newmain.c: 825: {
  8068                           ;newmain.c: 826: LCD_Clear();
  8069  0160  160A  158A  26F5  120A  118A  	fcall	_LCD_Clear
  8070                           
  8071                           ;newmain.c: 827: LCD_CmdWrite(0X02);
  8072  0165  3002               	movlw	2
  8073  0166  160A  158A  2762  120A  118A  	fcall	_LCD_CmdWrite
  8074                           
  8075                           ;newmain.c: 828: LCD_DisplayString("    WRONG !!    ");
  8076  016B  30AC               	movlw	low (STR_25| (0+32768))
  8077  016C  1283               	bcf	3,5	;RP0=0, select bank0
  8078  016D  1303               	bcf	3,6	;RP1=0, select bank0
  8079  016E  00D0               	movwf	LCD_DisplayString@s
  8080  016F  3090               	movlw	high (STR_25| (0+32768))
  8081  0170  00D1               	movwf	LCD_DisplayString@s+1
  8082  0171  160A  118A  2272  120A  118A  	fcall	_LCD_DisplayString
  8083                           
  8084                           ;newmain.c: 829: LCD_CmdWrite(0XC0);
  8085  0176  30C0               	movlw	192
  8086  0177  160A  158A  2762  120A  118A  	fcall	_LCD_CmdWrite
  8087                           
  8088                           ;newmain.c: 830: LCD_DisplayString("  TRY AGAIN....  ");
  8089  017C  3053               	movlw	low (STR_26| (0+32768))
  8090  017D  1283               	bcf	3,5	;RP0=0, select bank0
  8091  017E  1303               	bcf	3,6	;RP1=0, select bank0
  8092  017F  00D0               	movwf	LCD_DisplayString@s
  8093  0180  3090               	movlw	high (STR_26| (0+32768))
  8094  0181  00D1               	movwf	LCD_DisplayString@s+1
  8095  0182  160A  118A  2272  120A  118A  	fcall	_LCD_DisplayString
  8096                           
  8097                           ;newmain.c: 831: buzzer(50);
  8098  0187  3032               	movlw	50
  8099  0188  1283               	bcf	3,5	;RP0=0, select bank0
  8100  0189  1303               	bcf	3,6	;RP1=0, select bank0
  8101  018A  00CD               	movwf	buzzer@a
  8102  018B  3000               	movlw	0
  8103  018C  00CE               	movwf	buzzer@a+1
  8104  018D  160A  158A  279C  120A  118A  	fcall	_buzzer
  8105                           
  8106                           ;newmain.c: 832: _delay((unsigned long)((50)*(4000000/4000.0)));
  8107  0192  3041               	movlw	65
  8108  0193  1283               	bcf	3,5	;RP0=0, select bank0
  8109  0194  1303               	bcf	3,6	;RP1=0, select bank0
  8110  0195  00EC               	movwf	??_main+1
  8111  0196  30ED               	movlw	237
  8112  0197  00EB               	movwf	??_main
  8113  0198                     u4647:	
  8114  0198  0BEB               	decfsz	??_main,f
  8115  0199  2998               	goto	u4647
  8116  019A  0BEC               	decfsz	??_main+1,f
  8117  019B  2998               	goto	u4647
  8118  019C  299D               	nop2
  8119                           
  8120                           ;newmain.c: 833: buzzer(50);
  8121  019D  3032               	movlw	50
  8122  019E  1283               	bcf	3,5	;RP0=0, select bank0
  8123  019F  1303               	bcf	3,6	;RP1=0, select bank0
  8124  01A0  00CD               	movwf	buzzer@a
  8125  01A1  3000               	movlw	0
  8126  01A2  00CE               	movwf	buzzer@a+1
  8127  01A3  160A  158A  279C  120A  118A  	fcall	_buzzer
  8128                           
  8129                           ;newmain.c: 834: _delay((unsigned long)((750)*(4000000/4000.0)));
  8130  01A8  3004               	movlw	4
  8131  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  8132  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  8133  01AB  00ED               	movwf	??_main+2
  8134  01AC  30CF               	movlw	207
  8135  01AD  00EC               	movwf	??_main+1
  8136  01AE  3001               	movlw	1
  8137  01AF  00EB               	movwf	??_main
  8138  01B0                     u4657:	
  8139  01B0  0BEB               	decfsz	??_main,f
  8140  01B1  29B0               	goto	u4657
  8141  01B2  0BEC               	decfsz	??_main+1,f
  8142  01B3  29B0               	goto	u4657
  8143  01B4  0BED               	decfsz	??_main+2,f
  8144  01B5  29B0               	goto	u4657
  8145                           
  8146                           ;newmain.c: 835: LCD_Clear();
  8147  01B6  160A  158A  26F5  120A  118A  	fcall	_LCD_Clear
  8148                           
  8149                           ;newmain.c: 836: value=0;check=0;
  8150  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  8151  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  8152  01BD  01A8               	clrf	_value
  8153  01BE  01A9               	clrf	_value+1
  8154  01BF  1370               	bcf	_check/(0+8),_check& (0+7)
  8155                           
  8156                           ;newmain.c: 837: error_count++;
  8157  01C0  3001               	movlw	1
  8158  01C1  07A6               	addwf	_error_count,f
  8159  01C2  1803               	skipnc
  8160  01C3  0AA7               	incf	_error_count+1,f
  8161  01C4  3000               	movlw	0
  8162  01C5  07A7               	addwf	_error_count+1,f
  8163                           
  8164                           ;newmain.c: 838: if(error_count==3)
  8165  01C6  3003               	movlw	3
  8166  01C7  0626               	xorwf	_error_count,w
  8167  01C8  0427               	iorwf	_error_count+1,w
  8168  01C9  1D03               	btfss	3,2
  8169  01CA  2A0B               	goto	l511
  8170                           
  8171                           ;newmain.c: 839: {
  8172                           ;newmain.c: 840: LCD_Clear();
  8173  01CB  160A  158A  26F5  120A  118A  	fcall	_LCD_Clear
  8174                           
  8175                           ;newmain.c: 841: LCD_CmdWrite(0X02);
  8176  01D0  3002               	movlw	2
  8177  01D1  160A  158A  2762  120A  118A  	fcall	_LCD_CmdWrite
  8178                           
  8179                           ;newmain.c: 842: LCD_DisplayString("Processor RESET");
  8180  01D6  30CA               	movlw	low (STR_27| (0+32768))
  8181  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  8182  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  8183  01D9  00D0               	movwf	LCD_DisplayString@s
  8184  01DA  3091               	movlw	high (STR_27| (0+32768))
  8185  01DB  00D1               	movwf	LCD_DisplayString@s+1
  8186  01DC  160A  118A  2272  120A  118A  	fcall	_LCD_DisplayString
  8187                           
  8188                           ;newmain.c: 843: buzzer(1000);
  8189  01E1  30E8               	movlw	232
  8190  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  8191  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  8192  01E4  00CD               	movwf	buzzer@a
  8193  01E5  3003               	movlw	3
  8194  01E6  00CE               	movwf	buzzer@a+1
  8195  01E7  160A  158A  279C  120A  118A  	fcall	_buzzer
  8196                           
  8197                           ;newmain.c: 844: _delay((unsigned long)((650)*(4000000/4000.0)));
  8198  01EC  3004               	movlw	4
  8199  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  8200  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  8201  01EF  00ED               	movwf	??_main+2
  8202  01F0  304D               	movlw	77
  8203  01F1  00EC               	movwf	??_main+1
  8204  01F2  3022               	movlw	34
  8205  01F3  00EB               	movwf	??_main
  8206  01F4                     u4667:	
  8207  01F4  0BEB               	decfsz	??_main,f
  8208  01F5  29F4               	goto	u4667
  8209  01F6  0BEC               	decfsz	??_main+1,f
  8210  01F7  29F4               	goto	u4667
  8211  01F8  0BED               	decfsz	??_main+2,f
  8212  01F9  29F4               	goto	u4667
  8213  01FA  0000               	nop
  8214                           
  8215                           ;newmain.c: 845: value=0;
  8216  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  8217  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  8218  01FD  01A8               	clrf	_value
  8219  01FE  01A9               	clrf	_value+1
  8220                           
  8221                           ;newmain.c: 846: error_count=0;
  8222  01FF  01A6               	clrf	_error_count
  8223  0200  01A7               	clrf	_error_count+1
  8224                           
  8225                           ;newmain.c: 847: check=0;status=0;menu=0,run=0;
  8226  0201  1370               	bcf	_check/(0+8),_check& (0+7)
  8227  0202  10F1               	bcf	_status/(0+8),_status& (0+7)
  8228  0203  1071               	bcf	_menu/(0+8),_menu& (0+7)
  8229  0204  11F0               	bcf	_run/(0+8),_run& (0+7)
  8230                           
  8231                           ;newmain.c: 848: LCD_Clear();
  8232  0205  160A  158A  26F5  120A  118A  	fcall	_LCD_Clear
  8233                           
  8234                           ;newmain.c: 849: break;
  8235  020A  2EB3               	goto	l535
  8236  020B                     l511:	
  8237  020B  1C71               	btfss	_menu/(0+8),_menu& (0+7)
  8238  020C  2EB3               	goto	l535
  8239  020D  2833               	goto	l4174
  8240  020E                     l536:	
  8241                           ;newmain.c: 851: }
  8242                           ;newmain.c: 852: }
  8243                           ;newmain.c: 854: }
  8244                           ;newmain.c: 856: }
  8245                           ;newmain.c: 858: while(set)
  8246                           
  8247                           
  8248                           ;newmain.c: 859: {
  8249                           ;newmain.c: 861: if((!pad)&&(!coin))
  8250  020E  1EF0               	btfss	_pad/(0+8),_pad& (0+7)
  8251  020F  1A70               	btfsc	_coin/(0+8),_coin& (0+7)
  8252  0210  2A62               	goto	l4328
  8253                           
  8254                           ;newmain.c: 862: {
  8255                           ;newmain.c: 863: LCD_CmdWrite(0X02);
  8256  0211  3002               	movlw	2
  8257  0212  160A  158A  2762  120A  118A  	fcall	_LCD_CmdWrite
  8258                           
  8259                           ;newmain.c: 864: LCD_DisplayString("ENTER PARAMETERS");
  8260  0217  3078               	movlw	low (STR_28| (0+32768))
  8261  0218  1283               	bcf	3,5	;RP0=0, select bank0
  8262  0219  1303               	bcf	3,6	;RP1=0, select bank0
  8263  021A  00D0               	movwf	LCD_DisplayString@s
  8264  021B  3091               	movlw	high (STR_28| (0+32768))
  8265  021C  00D1               	movwf	LCD_DisplayString@s+1
  8266  021D  160A  118A  2272  120A  118A  	fcall	_LCD_DisplayString
  8267                           
  8268                           ;newmain.c: 865: _delay((unsigned long)((1500)*(4000000/4000.0)));
  8269  0222  3008               	movlw	8
  8270  0223  1283               	bcf	3,5	;RP0=0, select bank0
  8271  0224  1303               	bcf	3,6	;RP1=0, select bank0
  8272  0225  00ED               	movwf	??_main+2
  8273  0226  309D               	movlw	157
  8274  0227  00EC               	movwf	??_main+1
  8275  0228  3005               	movlw	5
  8276  0229  00EB               	movwf	??_main
  8277  022A                     u4677:	
  8278  022A  0BEB               	decfsz	??_main,f
  8279  022B  2A2A               	goto	u4677
  8280  022C  0BEC               	decfsz	??_main+1,f
  8281  022D  2A2A               	goto	u4677
  8282  022E  0BED               	decfsz	??_main+2,f
  8283  022F  2A2A               	goto	u4677
  8284                           
  8285                           ;newmain.c: 866: stock=1;pad=1;coin=0;num=padcount1;
  8286  0230  3001               	movlw	1
  8287  0231  1283               	bcf	3,5	;RP0=0, select bank0
  8288  0232  1303               	bcf	3,6	;RP1=0, select bank0
  8289  0233  00A2               	movwf	_stock
  8290  0234  3000               	movlw	0
  8291  0235  00A3               	movwf	_stock+1
  8292  0236  16F0               	bsf	_pad/(0+8),_pad& (0+7)
  8293  0237  1270               	bcf	_coin/(0+8),_coin& (0+7)
  8294  0238  0841               	movf	_padcount1+1,w
  8295  0239  00A5               	movwf	_num+1
  8296  023A  0840               	movf	_padcount1,w
  8297  023B  00A4               	movwf	_num
  8298                           
  8299                           ;newmain.c: 867: LCD_Clear();
  8300  023C  160A  158A  26F5  120A  118A  	fcall	_LCD_Clear
  8301                           
  8302                           ;newmain.c: 868: LCD_CmdWrite(0X02);
  8303  0241  3002               	movlw	2
  8304  0242  160A  158A  2762  120A  118A  	fcall	_LCD_CmdWrite
  8305                           
  8306                           ;newmain.c: 869: LCD_DisplayString("  ROW_");
  8307  0247  3004               	movlw	low (STR_29| (0+32768))
  8308  0248  1283               	bcf	3,5	;RP0=0, select bank0
  8309  0249  1303               	bcf	3,6	;RP1=0, select bank0
  8310  024A  00D0               	movwf	LCD_DisplayString@s
  8311  024B  3092               	movlw	high (STR_29| (0+32768))
  8312  024C  00D1               	movwf	LCD_DisplayString@s+1
  8313  024D  160A  118A  2272  120A  118A  	fcall	_LCD_DisplayString
  8314                           
  8315                           ;newmain.c: 870: }
  8316                           ;newmain.c: 872: switch(stock)
  8317  0252  2A62               	goto	l4328
  8318  0253                     l4316:	
  8319                           ;newmain.c: 873: {
  8320                           ;newmain.c: 874: case 1: stock_data='1';break;
  8321                           
  8322  0253  3031               	movlw	49
  8323  0254  1283               	bcf	3,5	;RP0=0, select bank0
  8324  0255  1303               	bcf	3,6	;RP1=0, select bank0
  8325  0256  2A5E               	goto	L8
  8326  0257                     l4318:	
  8327                           ;newmain.c: 875: case 2: stock_data='2';break;
  8328                           
  8329  0257  3032               	movlw	50
  8330  0258  2A5E               	goto	L8
  8331  0259                     l4320:	
  8332                           ;newmain.c: 876: case 3: stock_data='3';break;
  8333                           
  8334  0259  3033               	movlw	51
  8335  025A  2A5E               	goto	L8
  8336  025B                     l4322:	
  8337                           ;newmain.c: 877: case 4: stock_data='4';break;
  8338                           
  8339  025B  3034               	movlw	52
  8340  025C  2A5E               	goto	L8
  8341  025D                     l4324:	
  8342                           ;newmain.c: 878: case 5: stock_data='5';break;
  8343                           
  8344  025D  3035               	movlw	53
  8345  025E                     L8:	
  8346  025E  00EB               	movwf	??_main
  8347  025F  086B               	movf	??_main,w
  8348  0260  00C2               	movwf	_stock_data
  8349                           
  8350                           ;newmain.c: 879: }
  8351  0261  2A7A               	goto	l4330
  8352  0262                     l4328:	
  8353                           
  8354                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8355                           ; Switch size 1, requested type "space"
  8356                           ; Number of cases is 1, Range of values is 0 to 0
  8357                           ; switch strategies available:
  8358                           ; Name         Instructions Cycles
  8359                           ; simple_byte            4     3 (average)
  8360                           ; direct_byte           11     8 (fixed)
  8361                           ; jumptable            260     6 (fixed)
  8362                           ;	Chosen strategy is simple_byte
  8363  0262  1283               	bcf	3,5	;RP0=0, select bank0
  8364  0263  1303               	bcf	3,6	;RP1=0, select bank0
  8365  0264  0823               	movf	_stock+1,w
  8366  0265  3A00               	xorlw	0	; case 0
  8367  0266  1903               	skipnz
  8368  0267  2A69               	goto	l5064
  8369  0268  2A7A               	goto	l4330
  8370  0269                     l5064:	
  8371                           
  8372                           ; Switch size 1, requested type "space"
  8373                           ; Number of cases is 5, Range of values is 1 to 5
  8374                           ; switch strategies available:
  8375                           ; Name         Instructions Cycles
  8376                           ; simple_byte           16     9 (average)
  8377                           ; direct_byte           26    11 (fixed)
  8378                           ; jumptable            263     9 (fixed)
  8379                           ;	Chosen strategy is simple_byte
  8380  0269  0822               	movf	_stock,w
  8381  026A  3A01               	xorlw	1	; case 1
  8382  026B  1903               	skipnz
  8383  026C  2A53               	goto	l4316
  8384  026D  3A03               	xorlw	3	; case 2
  8385  026E  1903               	skipnz
  8386  026F  2A57               	goto	l4318
  8387  0270  3A01               	xorlw	1	; case 3
  8388  0271  1903               	skipnz
  8389  0272  2A59               	goto	l4320
  8390  0273  3A07               	xorlw	7	; case 4
  8391  0274  1903               	skipnz
  8392  0275  2A5B               	goto	l4322
  8393  0276  3A01               	xorlw	1	; case 5
  8394  0277  1903               	skipnz
  8395  0278  2A5D               	goto	l4324
  8396  0279  2A7A               	goto	l4330
  8397  027A                     l4330:	
  8398                           
  8399                           ;newmain.c: 880: LCD_CmdWrite(0X86);
  8400  027A  3086               	movlw	134
  8401  027B  160A  158A  2762  120A  118A  	fcall	_LCD_CmdWrite
  8402                           
  8403                           ;newmain.c: 881: LCD_DataWrite(stock_data);
  8404  0280  1283               	bcf	3,5	;RP0=0, select bank0
  8405  0281  1303               	bcf	3,6	;RP1=0, select bank0
  8406  0282  0842               	movf	_stock_data,w
  8407  0283  160A  158A  277F  120A  118A  	fcall	_LCD_DataWrite
  8408                           
  8409                           ;newmain.c: 882: LCD_DisplayString("  STOCK  ");
  8410  0288  30F1               	movlw	low (STR_30| (0+32768))
  8411  0289  1283               	bcf	3,5	;RP0=0, select bank0
  8412  028A  1303               	bcf	3,6	;RP1=0, select bank0
  8413  028B  00D0               	movwf	LCD_DisplayString@s
  8414  028C  3091               	movlw	high (STR_30| (0+32768))
  8415  028D  00D1               	movwf	LCD_DisplayString@s+1
  8416  028E  160A  118A  2272  120A  118A  	fcall	_LCD_DisplayString
  8417                           
  8418                           ;newmain.c: 883: if(pad && !coin)
  8419  0293  1AF0               	btfsc	_pad/(0+8),_pad& (0+7)
  8420  0294  1A70               	btfsc	_coin/(0+8),_coin& (0+7)
  8421  0295  2AEC               	goto	l4368
  8422                           
  8423                           ;newmain.c: 884: {
  8424                           ;newmain.c: 885: LCD_CmdWrite(0XC0);
  8425  0296  30C0               	movlw	192
  8426  0297  160A  158A  2762  120A  118A  	fcall	_LCD_CmdWrite
  8427                           
  8428                           ;newmain.c: 886: LCD_DisplayString("   QTY: ");
  8429  029C  30FB               	movlw	low (STR_31| (0+32768))
  8430  029D  1283               	bcf	3,5	;RP0=0, select bank0
  8431  029E  1303               	bcf	3,6	;RP1=0, select bank0
  8432  029F  00D0               	movwf	LCD_DisplayString@s
  8433  02A0  3091               	movlw	high (STR_31| (0+32768))
  8434  02A1  00D1               	movwf	LCD_DisplayString@s+1
  8435  02A2  160A  118A  2272  120A  118A  	fcall	_LCD_DisplayString
  8436                           
  8437                           ;newmain.c: 887: switch(stock)
  8438  02A7  2AC0               	goto	l4364
  8439  02A8                     l4342:	
  8440                           ;newmain.c: 888: {
  8441                           ;newmain.c: 889: case 1: padcount=padcount1;Qflag=1;break;
  8442                           
  8443  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  8444  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  8445  02AA  0841               	movf	_padcount1+1,w
  8446  02AB  00B7               	movwf	_padcount+1
  8447  02AC  0840               	movf	_padcount1,w
  8448  02AD  2ABD               	goto	L15
  8449  02AE                     l4346:	
  8450                           ;newmain.c: 890: case 2: padcount=padcount2;Qflag=1;break;
  8451                           
  8452  02AE  083D               	movf	_padcount2+1,w
  8453  02AF  00B7               	movwf	_padcount+1
  8454  02B0  083C               	movf	_padcount2,w
  8455  02B1  2ABD               	goto	L15
  8456  02B2                     l4350:	
  8457                           ;newmain.c: 891: case 3: padcount=padcount3;Qflag=1;break;
  8458                           
  8459  02B2  0835               	movf	_padcount3+1,w
  8460  02B3  00B7               	movwf	_padcount+1
  8461  02B4  0834               	movf	_padcount3,w
  8462  02B5  2ABD               	goto	L15
  8463  02B6                     l4354:	
  8464                           ;newmain.c: 892: case 4: padcount=padcount4;Qflag=1;break;
  8465                           
  8466  02B6  0831               	movf	_padcount4+1,w
  8467  02B7  00B7               	movwf	_padcount+1
  8468  02B8  0830               	movf	_padcount4,w
  8469  02B9  2ABD               	goto	L15
  8470  02BA                     l4358:	
  8471                           ;newmain.c: 893: case 5: padcount=padcount5;Qflag=1;break;
  8472                           
  8473  02BA  082D               	movf	_padcount5+1,w
  8474  02BB  00B7               	movwf	_padcount+1
  8475  02BC  082C               	movf	_padcount5,w
  8476  02BD                     L15:	
  8477  02BD  00B6               	movwf	_padcount
  8478  02BE  1470               	bsf	_Qflag/(0+8),_Qflag& (0+7)
  8479                           
  8480                           ;newmain.c: 894: }
  8481  02BF  2AD8               	goto	l4366
  8482  02C0                     l4364:	
  8483                           
  8484                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8485                           ; Switch size 1, requested type "space"
  8486                           ; Number of cases is 1, Range of values is 0 to 0
  8487                           ; switch strategies available:
  8488                           ; Name         Instructions Cycles
  8489                           ; simple_byte            4     3 (average)
  8490                           ; direct_byte           11     8 (fixed)
  8491                           ; jumptable            260     6 (fixed)
  8492                           ;	Chosen strategy is simple_byte
  8493  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  8494  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  8495  02C2  0823               	movf	_stock+1,w
  8496  02C3  3A00               	xorlw	0	; case 0
  8497  02C4  1903               	skipnz
  8498  02C5  2AC7               	goto	l5066
  8499  02C6  2AD8               	goto	l4366
  8500  02C7                     l5066:	
  8501                           
  8502                           ; Switch size 1, requested type "space"
  8503                           ; Number of cases is 5, Range of values is 1 to 5
  8504                           ; switch strategies available:
  8505                           ; Name         Instructions Cycles
  8506                           ; simple_byte           16     9 (average)
  8507                           ; direct_byte           26    11 (fixed)
  8508                           ; jumptable            263     9 (fixed)
  8509                           ;	Chosen strategy is simple_byte
  8510  02C7  0822               	movf	_stock,w
  8511  02C8  3A01               	xorlw	1	; case 1
  8512  02C9  1903               	skipnz
  8513  02CA  2AA8               	goto	l4342
  8514  02CB  3A03               	xorlw	3	; case 2
  8515  02CC  1903               	skipnz
  8516  02CD  2AAE               	goto	l4346
  8517  02CE  3A01               	xorlw	1	; case 3
  8518  02CF  1903               	skipnz
  8519  02D0  2AB2               	goto	l4350
  8520  02D1  3A07               	xorlw	7	; case 4
  8521  02D2  1903               	skipnz
  8522  02D3  2AB6               	goto	l4354
  8523  02D4  3A01               	xorlw	1	; case 5
  8524  02D5  1903               	skipnz
  8525  02D6  2ABA               	goto	l4358
  8526  02D7  2AD8               	goto	l4366
  8527  02D8                     l4366:	
  8528                           
  8529                           ;newmain.c: 895: display(padcount);
  8530  02D8  0837               	movf	_padcount+1,w
  8531  02D9  00EA               	movwf	display@data+1
  8532  02DA  0836               	movf	_padcount,w
  8533  02DB  00E9               	movwf	display@data
  8534  02DC  160A  158A  272E  120A  118A  	fcall	_display
  8535                           
  8536                           ;newmain.c: 896: LCD_DisplayString(" Nos");
  8537  02E1  300B               	movlw	low (STR_32| (0+32768))
  8538  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  8539  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  8540  02E4  00D0               	movwf	LCD_DisplayString@s
  8541  02E5  3092               	movlw	high (STR_32| (0+32768))
  8542  02E6  00D1               	movwf	LCD_DisplayString@s+1
  8543  02E7  160A  118A  2272  120A  118A  	fcall	_LCD_DisplayString
  8544  02EC                     l4368:	
  8545                           
  8546                           ;newmain.c: 897: }
  8547                           ;newmain.c: 898: if(coin && !pad)
  8548  02EC  1A70               	btfsc	_coin/(0+8),_coin& (0+7)
  8549  02ED  1AF0               	btfsc	_pad/(0+8),_pad& (0+7)
  8550  02EE  2B4D               	goto	l4398
  8551                           
  8552                           ;newmain.c: 899: {
  8553                           ;newmain.c: 900: LCD_CmdWrite(0XC0);
  8554  02EF  30C0               	movlw	192
  8555  02F0  160A  158A  2762  120A  118A  	fcall	_LCD_CmdWrite
  8556                           
  8557                           ;newmain.c: 901: LCD_DisplayString("   PRICE: ");
  8558  02F5  30E6               	movlw	low (STR_33| (0+32768))
  8559  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  8560  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  8561  02F8  00D0               	movwf	LCD_DisplayString@s
  8562  02F9  3091               	movlw	high (STR_33| (0+32768))
  8563  02FA  00D1               	movwf	LCD_DisplayString@s+1
  8564  02FB  160A  118A  2272  120A  118A  	fcall	_LCD_DisplayString
  8565                           
  8566                           ;newmain.c: 902: LCD_DataWrite(0x00);
  8567  0300  3000               	movlw	0
  8568  0301  160A  158A  277F  120A  118A  	fcall	_LCD_DataWrite
  8569                           
  8570                           ;newmain.c: 903: switch(stock)
  8571  0306  2B1E               	goto	l4390
  8572  0307                     l4378:	
  8573                           ;newmain.c: 904: {
  8574                           ;newmain.c: 905: case 1: rupee=rupee1;break;
  8575                           
  8576  0307  1283               	bcf	3,5	;RP0=0, select bank0
  8577  0308  1303               	bcf	3,6	;RP1=0, select bank0
  8578  0309  083F               	movf	_rupee1+1,w
  8579  030A  00FD               	movwf	_rupee+1
  8580  030B  083E               	movf	_rupee1,w
  8581  030C  2B1C               	goto	L12
  8582  030D                     l4380:	
  8583                           ;newmain.c: 906: case 2: rupee=rupee2;break;
  8584                           
  8585  030D  083B               	movf	_rupee2+1,w
  8586  030E  00FD               	movwf	_rupee+1
  8587  030F  083A               	movf	_rupee2,w
  8588  0310  2B1C               	goto	L12
  8589  0311                     l4382:	
  8590                           ;newmain.c: 907: case 3: rupee=rupee3;break;
  8591                           
  8592  0311  0833               	movf	_rupee3+1,w
  8593  0312  00FD               	movwf	_rupee+1
  8594  0313  0832               	movf	_rupee3,w
  8595  0314  2B1C               	goto	L12
  8596  0315                     l4384:	
  8597                           ;newmain.c: 908: case 4: rupee=rupee4;break;
  8598                           
  8599  0315  082F               	movf	_rupee4+1,w
  8600  0316  00FD               	movwf	_rupee+1
  8601  0317  082E               	movf	_rupee4,w
  8602  0318  2B1C               	goto	L12
  8603  0319                     l4386:	
  8604                           ;newmain.c: 909: case 5: rupee=rupee5;break;
  8605                           
  8606  0319  082B               	movf	_rupee5+1,w
  8607  031A  00FD               	movwf	_rupee+1
  8608  031B  082A               	movf	_rupee5,w
  8609  031C                     L12:	
  8610  031C  00FC               	movwf	_rupee
  8611                           
  8612                           ;newmain.c: 910: }
  8613  031D  2B36               	goto	l4392
  8614  031E                     l4390:	
  8615                           
  8616                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8617                           ; Switch size 1, requested type "space"
  8618                           ; Number of cases is 1, Range of values is 0 to 0
  8619                           ; switch strategies available:
  8620                           ; Name         Instructions Cycles
  8621                           ; simple_byte            4     3 (average)
  8622                           ; direct_byte           11     8 (fixed)
  8623                           ; jumptable            260     6 (fixed)
  8624                           ;	Chosen strategy is simple_byte
  8625  031E  1283               	bcf	3,5	;RP0=0, select bank0
  8626  031F  1303               	bcf	3,6	;RP1=0, select bank0
  8627  0320  0823               	movf	_stock+1,w
  8628  0321  3A00               	xorlw	0	; case 0
  8629  0322  1903               	skipnz
  8630  0323  2B25               	goto	l5068
  8631  0324  2B36               	goto	l4392
  8632  0325                     l5068:	
  8633                           
  8634                           ; Switch size 1, requested type "space"
  8635                           ; Number of cases is 5, Range of values is 1 to 5
  8636                           ; switch strategies available:
  8637                           ; Name         Instructions Cycles
  8638                           ; simple_byte           16     9 (average)
  8639                           ; direct_byte           26    11 (fixed)
  8640                           ; jumptable            263     9 (fixed)
  8641                           ;	Chosen strategy is simple_byte
  8642  0325  0822               	movf	_stock,w
  8643  0326  3A01               	xorlw	1	; case 1
  8644  0327  1903               	skipnz
  8645  0328  2B07               	goto	l4378
  8646  0329  3A03               	xorlw	3	; case 2
  8647  032A  1903               	skipnz
  8648  032B  2B0D               	goto	l4380
  8649  032C  3A01               	xorlw	1	; case 3
  8650  032D  1903               	skipnz
  8651  032E  2B11               	goto	l4382
  8652  032F  3A07               	xorlw	7	; case 4
  8653  0330  1903               	skipnz
  8654  0331  2B15               	goto	l4384
  8655  0332  3A01               	xorlw	1	; case 5
  8656  0333  1903               	skipnz
  8657  0334  2B19               	goto	l4386
  8658  0335  2B36               	goto	l4392
  8659  0336                     l4392:	
  8660                           
  8661                           ;newmain.c: 911: LCD_CmdWrite(0XCB);
  8662  0336  30CB               	movlw	203
  8663  0337  160A  158A  2762  120A  118A  	fcall	_LCD_CmdWrite
  8664                           
  8665                           ;newmain.c: 912: display_price(rupee);
  8666  033C  087D               	movf	_rupee+1,w
  8667  033D  1283               	bcf	3,5	;RP0=0, select bank0
  8668  033E  1303               	bcf	3,6	;RP1=0, select bank0
  8669  033F  00EA               	movwf	display_price@data+1
  8670  0340  087C               	movf	_rupee,w
  8671  0341  00E9               	movwf	display_price@data
  8672  0342  160A  158A  2748  120A  118A  	fcall	_display_price
  8673                           
  8674                           ;newmain.c: 913: LCD_DataWrite(' ');
  8675  0347  3020               	movlw	32
  8676  0348  160A  158A  277F  120A  118A  	fcall	_LCD_DataWrite
  8677  034D                     l4398:	
  8678                           
  8679                           ;newmain.c: 914: }
  8680                           ;newmain.c: 916: if(!RE1)
  8681  034D  1283               	bcf	3,5	;RP0=0, select bank0
  8682  034E  1303               	bcf	3,6	;RP1=0, select bank0
  8683  034F  1889               	btfsc	9,1	;volatile
  8684  0350  2BEB               	goto	l561
  8685                           
  8686                           ;newmain.c: 917: {
  8687                           ;newmain.c: 918: _delay((unsigned long)((100)*(4000000/4000.0)));
  8688  0351  3082               	movlw	130
  8689  0352  1283               	bcf	3,5	;RP0=0, select bank0
  8690  0353  1303               	bcf	3,6	;RP1=0, select bank0
  8691  0354  00EC               	movwf	??_main+1
  8692  0355  30DD               	movlw	221
  8693  0356  00EB               	movwf	??_main
  8694  0357                     u4687:	
  8695  0357  0BEB               	decfsz	??_main,f
  8696  0358  2B57               	goto	u4687
  8697  0359  0BEC               	decfsz	??_main+1,f
  8698  035A  2B57               	goto	u4687
  8699                           
  8700                           ;newmain.c: 920: if(num==99 && pad)
  8701  035B  3063               	movlw	99
  8702  035C  1283               	bcf	3,5	;RP0=0, select bank0
  8703  035D  1303               	bcf	3,6	;RP1=0, select bank0
  8704  035E  0624               	xorwf	_num,w
  8705  035F  0425               	iorwf	_num+1,w
  8706  0360  1903               	btfsc	3,2
  8707  0361  1EF0               	btfss	_pad/(0+8),_pad& (0+7)
  8708  0362  2B67               	goto	l4412
  8709                           
  8710                           ;newmain.c: 921: {
  8711                           ;newmain.c: 922: num=0;
  8712  0363  01A4               	clrf	_num
  8713  0364  01A5               	clrf	_num+1
  8714                           
  8715                           ;newmain.c: 923: if(pad)
  8716  0365  1AF0               	btfsc	_pad/(0+8),_pad& (0+7)
  8717  0366  2B83               	goto	l4426
  8718  0367                     l4412:	
  8719                           ;newmain.c: 924: goto label1;
  8720                           
  8721                           
  8722                           ;newmain.c: 925: }
  8723                           ;newmain.c: 926: if(num==990 && coin)
  8724  0367  30DE               	movlw	222
  8725  0368  0624               	xorwf	_num,w
  8726  0369  3003               	movlw	3
  8727  036A  1903               	skipnz
  8728  036B  0625               	xorwf	_num+1,w
  8729  036C  1903               	btfsc	3,2
  8730  036D  1E70               	btfss	_coin/(0+8),_coin& (0+7)
  8731  036E  2B71               	goto	l4418
  8732                           
  8733                           ;newmain.c: 927: num=0;
  8734  036F  01A4               	clrf	_num
  8735  0370  01A5               	clrf	_num+1
  8736  0371                     l4418:	
  8737                           
  8738                           ;newmain.c: 929: if(coin)num=num+10;
  8739  0371  1E70               	btfss	_coin/(0+8),_coin& (0+7)
  8740  0372  2B7B               	goto	l4422
  8741  0373  0824               	movf	_num,w
  8742  0374  3E0A               	addlw	10
  8743  0375  00A4               	movwf	_num
  8744  0376  0825               	movf	_num+1,w
  8745  0377  1803               	skipnc
  8746  0378  3E01               	addlw	1
  8747  0379  3E00               	addlw	0
  8748  037A  00A5               	movwf	_num+1
  8749  037B                     l4422:	
  8750                           
  8751                           ;newmain.c: 930: if(pad) num++;
  8752  037B  1EF0               	btfss	_pad/(0+8),_pad& (0+7)
  8753  037C  2B83               	goto	l4426
  8754  037D  3001               	movlw	1
  8755  037E  07A4               	addwf	_num,f
  8756  037F  1803               	skipnc
  8757  0380  0AA5               	incf	_num+1,f
  8758  0381  3000               	movlw	0
  8759  0382  07A5               	addwf	_num+1,f
  8760  0383                     l4426:	
  8761                           ;newmain.c: 932: label1:
  8762                           
  8763                           
  8764                           ;newmain.c: 933: if(pad && !coin)
  8765  0383  1EF0               	btfss	_pad/(0+8),_pad& (0+7)
  8766  0384  2BB7               	goto	l568
  8767  0385  1E70               	btfss	_coin/(0+8),_coin& (0+7)
  8768  0386  2BA1               	goto	l4444
  8769  0387  2BB7               	goto	l568
  8770  0388                     l4432:	
  8771                           ;newmain.c: 936: {
  8772                           ;newmain.c: 937: case 1: padcount1=num;break;
  8773                           
  8774                           ;newmain.c: 934: {
  8775                           ;newmain.c: 935: switch(stock)
  8776                           
  8777  0388  0825               	movf	_num+1,w
  8778  0389  00C1               	movwf	_padcount1+1
  8779  038A  0824               	movf	_num,w
  8780  038B  00C0               	movwf	_padcount1
  8781  038C  2BB7               	goto	l568
  8782  038D                     l4434:	
  8783                           ;newmain.c: 938: case 2: padcount2=num;break;
  8784                           
  8785  038D  0825               	movf	_num+1,w
  8786  038E  00BD               	movwf	_padcount2+1
  8787  038F  0824               	movf	_num,w
  8788  0390  00BC               	movwf	_padcount2
  8789  0391  2BB7               	goto	l568
  8790  0392                     l4436:	
  8791                           ;newmain.c: 939: case 3: padcount3=num;break;
  8792                           
  8793  0392  0825               	movf	_num+1,w
  8794  0393  00B5               	movwf	_padcount3+1
  8795  0394  0824               	movf	_num,w
  8796  0395  00B4               	movwf	_padcount3
  8797  0396  2BB7               	goto	l568
  8798  0397                     l4438:	
  8799                           ;newmain.c: 940: case 4: padcount4=num;break;
  8800                           
  8801  0397  0825               	movf	_num+1,w
  8802  0398  00B1               	movwf	_padcount4+1
  8803  0399  0824               	movf	_num,w
  8804  039A  00B0               	movwf	_padcount4
  8805  039B  2BB7               	goto	l568
  8806  039C                     l4440:	
  8807                           ;newmain.c: 941: case 5: padcount5=num;break;
  8808                           
  8809  039C  0825               	movf	_num+1,w
  8810  039D  00AD               	movwf	_padcount5+1
  8811  039E  0824               	movf	_num,w
  8812  039F  00AC               	movwf	_padcount5
  8813                           
  8814                           ;newmain.c: 942: }
  8815  03A0  2BB7               	goto	l568
  8816  03A1                     l4444:	
  8817                           
  8818                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8819                           ; Switch size 1, requested type "space"
  8820                           ; Number of cases is 1, Range of values is 0 to 0
  8821                           ; switch strategies available:
  8822                           ; Name         Instructions Cycles
  8823                           ; simple_byte            4     3 (average)
  8824                           ; direct_byte           11     8 (fixed)
  8825                           ; jumptable            260     6 (fixed)
  8826                           ;	Chosen strategy is simple_byte
  8827  03A1  0823               	movf	_stock+1,w
  8828  03A2  3A00               	xorlw	0	; case 0
  8829  03A3  1903               	skipnz
  8830  03A4  2BA6               	goto	l5070
  8831  03A5  2BB7               	goto	l568
  8832  03A6                     l5070:	
  8833                           
  8834                           ; Switch size 1, requested type "space"
  8835                           ; Number of cases is 5, Range of values is 1 to 5
  8836                           ; switch strategies available:
  8837                           ; Name         Instructions Cycles
  8838                           ; simple_byte           16     9 (average)
  8839                           ; direct_byte           26    11 (fixed)
  8840                           ; jumptable            263     9 (fixed)
  8841                           ;	Chosen strategy is simple_byte
  8842  03A6  0822               	movf	_stock,w
  8843  03A7  3A01               	xorlw	1	; case 1
  8844  03A8  1903               	skipnz
  8845  03A9  2B88               	goto	l4432
  8846  03AA  3A03               	xorlw	3	; case 2
  8847  03AB  1903               	skipnz
  8848  03AC  2B8D               	goto	l4434
  8849  03AD  3A01               	xorlw	1	; case 3
  8850  03AE  1903               	skipnz
  8851  03AF  2B92               	goto	l4436
  8852  03B0  3A07               	xorlw	7	; case 4
  8853  03B1  1903               	skipnz
  8854  03B2  2B97               	goto	l4438
  8855  03B3  3A01               	xorlw	1	; case 5
  8856  03B4  1903               	skipnz
  8857  03B5  2B9C               	goto	l4440
  8858  03B6  2BB7               	goto	l568
  8859  03B7                     l568:	
  8860                           
  8861                           ;newmain.c: 943: }
  8862                           ;newmain.c: 944: if(!pad && coin)
  8863  03B7  1AF0               	btfsc	_pad/(0+8),_pad& (0+7)
  8864  03B8  2BEB               	goto	l561
  8865  03B9  1A70               	btfsc	_coin/(0+8),_coin& (0+7)
  8866  03BA  2BD5               	goto	l4462
  8867  03BB  2BEB               	goto	l561
  8868  03BC                     l4450:	
  8869                           ;newmain.c: 947: {
  8870                           ;newmain.c: 948: case 1: rupee1=num;break;
  8871                           
  8872                           ;newmain.c: 945: {
  8873                           ;newmain.c: 946: switch(stock)
  8874                           
  8875  03BC  0825               	movf	_num+1,w
  8876  03BD  00BF               	movwf	_rupee1+1
  8877  03BE  0824               	movf	_num,w
  8878  03BF  00BE               	movwf	_rupee1
  8879  03C0  2BEB               	goto	l561
  8880  03C1                     l4452:	
  8881                           ;newmain.c: 949: case 2: rupee2=num;break;
  8882                           
  8883  03C1  0825               	movf	_num+1,w
  8884  03C2  00BB               	movwf	_rupee2+1
  8885  03C3  0824               	movf	_num,w
  8886  03C4  00BA               	movwf	_rupee2
  8887  03C5  2BEB               	goto	l561
  8888  03C6                     l4454:	
  8889                           ;newmain.c: 950: case 3: rupee3=num;break;
  8890                           
  8891  03C6  0825               	movf	_num+1,w
  8892  03C7  00B3               	movwf	_rupee3+1
  8893  03C8  0824               	movf	_num,w
  8894  03C9  00B2               	movwf	_rupee3
  8895  03CA  2BEB               	goto	l561
  8896  03CB                     l4456:	
  8897                           ;newmain.c: 951: case 4: rupee4=num;break;
  8898                           
  8899  03CB  0825               	movf	_num+1,w
  8900  03CC  00AF               	movwf	_rupee4+1
  8901  03CD  0824               	movf	_num,w
  8902  03CE  00AE               	movwf	_rupee4
  8903  03CF  2BEB               	goto	l561
  8904  03D0                     l4458:	
  8905                           ;newmain.c: 952: case 5: rupee5=num;break;
  8906                           
  8907  03D0  0825               	movf	_num+1,w
  8908  03D1  00AB               	movwf	_rupee5+1
  8909  03D2  0824               	movf	_num,w
  8910  03D3  00AA               	movwf	_rupee5
  8911                           
  8912                           ;newmain.c: 953: }
  8913  03D4  2BEB               	goto	l561
  8914  03D5                     l4462:	
  8915                           
  8916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8917                           ; Switch size 1, requested type "space"
  8918                           ; Number of cases is 1, Range of values is 0 to 0
  8919                           ; switch strategies available:
  8920                           ; Name         Instructions Cycles
  8921                           ; simple_byte            4     3 (average)
  8922                           ; direct_byte           11     8 (fixed)
  8923                           ; jumptable            260     6 (fixed)
  8924                           ;	Chosen strategy is simple_byte
  8925  03D5  0823               	movf	_stock+1,w
  8926  03D6  3A00               	xorlw	0	; case 0
  8927  03D7  1903               	skipnz
  8928  03D8  2BDA               	goto	l5072
  8929  03D9  2BEB               	goto	l561
  8930  03DA                     l5072:	
  8931                           
  8932                           ; Switch size 1, requested type "space"
  8933                           ; Number of cases is 5, Range of values is 1 to 5
  8934                           ; switch strategies available:
  8935                           ; Name         Instructions Cycles
  8936                           ; simple_byte           16     9 (average)
  8937                           ; direct_byte           26    11 (fixed)
  8938                           ; jumptable            263     9 (fixed)
  8939                           ;	Chosen strategy is simple_byte
  8940  03DA  0822               	movf	_stock,w
  8941  03DB  3A01               	xorlw	1	; case 1
  8942  03DC  1903               	skipnz
  8943  03DD  2BBC               	goto	l4450
  8944  03DE  3A03               	xorlw	3	; case 2
  8945  03DF  1903               	skipnz
  8946  03E0  2BC1               	goto	l4452
  8947  03E1  3A01               	xorlw	1	; case 3
  8948  03E2  1903               	skipnz
  8949  03E3  2BC6               	goto	l4454
  8950  03E4  3A07               	xorlw	7	; case 4
  8951  03E5  1903               	skipnz
  8952  03E6  2BCB               	goto	l4456
  8953  03E7  3A01               	xorlw	1	; case 5
  8954  03E8  1903               	skipnz
  8955  03E9  2BD0               	goto	l4458
  8956  03EA  2BEB               	goto	l561
  8957  03EB                     l561:	
  8958                           
  8959                           ;newmain.c: 954: }
  8960                           ;newmain.c: 955: }
  8961                           ;newmain.c: 957: if(RE0==0)
  8962  03EB  1809               	btfsc	9,0	;volatile
  8963  03EC  2C87               	goto	l584
  8964                           
  8965                           ;newmain.c: 958: {
  8966                           ;newmain.c: 959: _delay((unsigned long)((100)*(4000000/4000.0)));
  8967  03ED  3082               	movlw	130
  8968  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  8969  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  8970  03F0  00EC               	movwf	??_main+1
  8971  03F1  30DD               	movlw	221
  8972  03F2  00EB               	movwf	??_main
  8973  03F3                     u4697:	
  8974  03F3  0BEB               	decfsz	??_main,f
  8975  03F4  2BF3               	goto	u4697
  8976  03F5  0BEC               	decfsz	??_main+1,f
  8977  03F6  2BF3               	goto	u4697
  8978                           
  8979                           ;newmain.c: 961: if(num==0 && pad)
  8980  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  8981  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  8982  03F9  0824               	movf	_num,w
  8983  03FA  0425               	iorwf	_num+1,w
  8984  03FB  1903               	btfsc	3,2
  8985  03FC  1EF0               	btfss	_pad/(0+8),_pad& (0+7)
  8986  03FD  2C02               	goto	l4472
  8987                           
  8988                           ;newmain.c: 962: {
  8989                           ;newmain.c: 963: num=99;
  8990  03FE  3063               	movlw	99
  8991  03FF  00A4               	movwf	_num
  8992  0400  3000               	movlw	0
  8993  0401  2C0B               	goto	L13
  8994  0402                     l4472:	
  8995                           ;newmain.c: 964: goto label2;
  8996                           
  8997                           
  8998                           ;newmain.c: 965: }
  8999                           ;newmain.c: 966: if(num==10 && coin)
  9000  0402  300A               	movlw	10
  9001  0403  0624               	xorwf	_num,w
  9002  0404  0425               	iorwf	_num+1,w
  9003  0405  1903               	btfsc	3,2
  9004  0406  1E70               	btfss	_coin/(0+8),_coin& (0+7)
  9005  0407  2C0D               	goto	l587
  9006                           
  9007                           ;newmain.c: 967: {
  9008                           ;newmain.c: 968: num=990;
  9009  0408  30DE               	movlw	222
  9010  0409  00A4               	movwf	_num
  9011  040A  3003               	movlw	3
  9012  040B                     L13:	
  9013  040B  00A5               	movwf	_num+1
  9014                           
  9015                           ;newmain.c: 969: goto label2;
  9016  040C  2C1F               	goto	l4484
  9017  040D                     l587:	
  9018                           
  9019                           ;newmain.c: 970: }
  9020                           ;newmain.c: 972: if(coin)num=num-10;
  9021  040D  1E70               	btfss	_coin/(0+8),_coin& (0+7)
  9022  040E  2C17               	goto	l4480
  9023  040F  0824               	movf	_num,w
  9024  0410  3EF6               	addlw	246
  9025  0411  00A4               	movwf	_num
  9026  0412  0825               	movf	_num+1,w
  9027  0413  1803               	skipnc
  9028  0414  3E01               	addlw	1
  9029  0415  3EFF               	addlw	255
  9030  0416  00A5               	movwf	_num+1
  9031  0417                     l4480:	
  9032                           
  9033                           ;newmain.c: 973: if(pad) num--;
  9034  0417  1EF0               	btfss	_pad/(0+8),_pad& (0+7)
  9035  0418  2C1F               	goto	l4484
  9036  0419  3001               	movlw	1
  9037  041A  02A4               	subwf	_num,f
  9038  041B  3000               	movlw	0
  9039  041C  1C03               	skipc
  9040  041D  03A5               	decf	_num+1,f
  9041  041E  02A5               	subwf	_num+1,f
  9042  041F                     l4484:	
  9043                           ;newmain.c: 975: label2:
  9044                           
  9045                           
  9046                           ;newmain.c: 976: if(pad && !coin)
  9047  041F  1EF0               	btfss	_pad/(0+8),_pad& (0+7)
  9048  0420  2C53               	goto	l590
  9049  0421  1E70               	btfss	_coin/(0+8),_coin& (0+7)
  9050  0422  2C3D               	goto	l4502
  9051  0423  2C53               	goto	l590
  9052  0424                     l4490:	
  9053                           ;newmain.c: 979: {
  9054                           ;newmain.c: 980: case 1: padcount1=num;break;
  9055                           
  9056                           ;newmain.c: 977: {
  9057                           ;newmain.c: 978: switch(stock)
  9058                           
  9059  0424  0825               	movf	_num+1,w
  9060  0425  00C1               	movwf	_padcount1+1
  9061  0426  0824               	movf	_num,w
  9062  0427  00C0               	movwf	_padcount1
  9063  0428  2C53               	goto	l590
  9064  0429                     l4492:	
  9065                           ;newmain.c: 981: case 2: padcount2=num;break;
  9066                           
  9067  0429  0825               	movf	_num+1,w
  9068  042A  00BD               	movwf	_padcount2+1
  9069  042B  0824               	movf	_num,w
  9070  042C  00BC               	movwf	_padcount2
  9071  042D  2C53               	goto	l590
  9072  042E                     l4494:	
  9073                           ;newmain.c: 982: case 3: padcount3=num;break;
  9074                           
  9075  042E  0825               	movf	_num+1,w
  9076  042F  00B5               	movwf	_padcount3+1
  9077  0430  0824               	movf	_num,w
  9078  0431  00B4               	movwf	_padcount3
  9079  0432  2C53               	goto	l590
  9080  0433                     l4496:	
  9081                           ;newmain.c: 983: case 4: padcount4=num;break;
  9082                           
  9083  0433  0825               	movf	_num+1,w
  9084  0434  00B1               	movwf	_padcount4+1
  9085  0435  0824               	movf	_num,w
  9086  0436  00B0               	movwf	_padcount4
  9087  0437  2C53               	goto	l590
  9088  0438                     l4498:	
  9089                           ;newmain.c: 984: case 5: padcount5=num;break;
  9090                           
  9091  0438  0825               	movf	_num+1,w
  9092  0439  00AD               	movwf	_padcount5+1
  9093  043A  0824               	movf	_num,w
  9094  043B  00AC               	movwf	_padcount5
  9095                           
  9096                           ;newmain.c: 986: }
  9097  043C  2C53               	goto	l590
  9098  043D                     l4502:	
  9099                           
  9100                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9101                           ; Switch size 1, requested type "space"
  9102                           ; Number of cases is 1, Range of values is 0 to 0
  9103                           ; switch strategies available:
  9104                           ; Name         Instructions Cycles
  9105                           ; simple_byte            4     3 (average)
  9106                           ; direct_byte           11     8 (fixed)
  9107                           ; jumptable            260     6 (fixed)
  9108                           ;	Chosen strategy is simple_byte
  9109  043D  0823               	movf	_stock+1,w
  9110  043E  3A00               	xorlw	0	; case 0
  9111  043F  1903               	skipnz
  9112  0440  2C42               	goto	l5074
  9113  0441  2C53               	goto	l590
  9114  0442                     l5074:	
  9115                           
  9116                           ; Switch size 1, requested type "space"
  9117                           ; Number of cases is 5, Range of values is 1 to 5
  9118                           ; switch strategies available:
  9119                           ; Name         Instructions Cycles
  9120                           ; simple_byte           16     9 (average)
  9121                           ; direct_byte           26    11 (fixed)
  9122                           ; jumptable            263     9 (fixed)
  9123                           ;	Chosen strategy is simple_byte
  9124  0442  0822               	movf	_stock,w
  9125  0443  3A01               	xorlw	1	; case 1
  9126  0444  1903               	skipnz
  9127  0445  2C24               	goto	l4490
  9128  0446  3A03               	xorlw	3	; case 2
  9129  0447  1903               	skipnz
  9130  0448  2C29               	goto	l4492
  9131  0449  3A01               	xorlw	1	; case 3
  9132  044A  1903               	skipnz
  9133  044B  2C2E               	goto	l4494
  9134  044C  3A07               	xorlw	7	; case 4
  9135  044D  1903               	skipnz
  9136  044E  2C33               	goto	l4496
  9137  044F  3A01               	xorlw	1	; case 5
  9138  0450  1903               	skipnz
  9139  0451  2C38               	goto	l4498
  9140  0452  2C53               	goto	l590
  9141  0453                     l590:	
  9142                           
  9143                           ;newmain.c: 987: }
  9144                           ;newmain.c: 988: if(!pad && coin)
  9145  0453  1AF0               	btfsc	_pad/(0+8),_pad& (0+7)
  9146  0454  2C87               	goto	l584
  9147  0455  1A70               	btfsc	_coin/(0+8),_coin& (0+7)
  9148  0456  2C71               	goto	l4520
  9149  0457  2C87               	goto	l584
  9150  0458                     l4508:	
  9151                           ;newmain.c: 991: {
  9152                           ;newmain.c: 992: case 1: rupee1=num;break;
  9153                           
  9154                           ;newmain.c: 989: {
  9155                           ;newmain.c: 990: switch(stock)
  9156                           
  9157  0458  0825               	movf	_num+1,w
  9158  0459  00BF               	movwf	_rupee1+1
  9159  045A  0824               	movf	_num,w
  9160  045B  00BE               	movwf	_rupee1
  9161  045C  2C87               	goto	l584
  9162  045D                     l4510:	
  9163                           ;newmain.c: 993: case 2: rupee2=num;break;
  9164                           
  9165  045D  0825               	movf	_num+1,w
  9166  045E  00BB               	movwf	_rupee2+1
  9167  045F  0824               	movf	_num,w
  9168  0460  00BA               	movwf	_rupee2
  9169  0461  2C87               	goto	l584
  9170  0462                     l4512:	
  9171                           ;newmain.c: 994: case 3: rupee3=num;break;
  9172                           
  9173  0462  0825               	movf	_num+1,w
  9174  0463  00B3               	movwf	_rupee3+1
  9175  0464  0824               	movf	_num,w
  9176  0465  00B2               	movwf	_rupee3
  9177  0466  2C87               	goto	l584
  9178  0467                     l4514:	
  9179                           ;newmain.c: 995: case 4: rupee4=num;break;
  9180                           
  9181  0467  0825               	movf	_num+1,w
  9182  0468  00AF               	movwf	_rupee4+1
  9183  0469  0824               	movf	_num,w
  9184  046A  00AE               	movwf	_rupee4
  9185  046B  2C87               	goto	l584
  9186  046C                     l4516:	
  9187                           ;newmain.c: 996: case 5: rupee5=num;break;
  9188                           
  9189  046C  0825               	movf	_num+1,w
  9190  046D  00AB               	movwf	_rupee5+1
  9191  046E  0824               	movf	_num,w
  9192  046F  00AA               	movwf	_rupee5
  9193                           
  9194                           ;newmain.c: 997: }
  9195  0470  2C87               	goto	l584
  9196  0471                     l4520:	
  9197                           
  9198                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9199                           ; Switch size 1, requested type "space"
  9200                           ; Number of cases is 1, Range of values is 0 to 0
  9201                           ; switch strategies available:
  9202                           ; Name         Instructions Cycles
  9203                           ; simple_byte            4     3 (average)
  9204                           ; direct_byte           11     8 (fixed)
  9205                           ; jumptable            260     6 (fixed)
  9206                           ;	Chosen strategy is simple_byte
  9207  0471  0823               	movf	_stock+1,w
  9208  0472  3A00               	xorlw	0	; case 0
  9209  0473  1903               	skipnz
  9210  0474  2C76               	goto	l5076
  9211  0475  2C87               	goto	l584
  9212  0476                     l5076:	
  9213                           
  9214                           ; Switch size 1, requested type "space"
  9215                           ; Number of cases is 5, Range of values is 1 to 5
  9216                           ; switch strategies available:
  9217                           ; Name         Instructions Cycles
  9218                           ; simple_byte           16     9 (average)
  9219                           ; direct_byte           26    11 (fixed)
  9220                           ; jumptable            263     9 (fixed)
  9221                           ;	Chosen strategy is simple_byte
  9222  0476  0822               	movf	_stock,w
  9223  0477  3A01               	xorlw	1	; case 1
  9224  0478  1903               	skipnz
  9225  0479  2C58               	goto	l4508
  9226  047A  3A03               	xorlw	3	; case 2
  9227  047B  1903               	skipnz
  9228  047C  2C5D               	goto	l4510
  9229  047D  3A01               	xorlw	1	; case 3
  9230  047E  1903               	skipnz
  9231  047F  2C62               	goto	l4512
  9232  0480  3A07               	xorlw	7	; case 4
  9233  0481  1903               	skipnz
  9234  0482  2C67               	goto	l4514
  9235  0483  3A01               	xorlw	1	; case 5
  9236  0484  1903               	skipnz
  9237  0485  2C6C               	goto	l4516
  9238  0486  2C87               	goto	l584
  9239  0487                     l584:	
  9240                           
  9241                           ;newmain.c: 998: }
  9242                           ;newmain.c: 999: }
  9243                           ;newmain.c: 1001: if(!RE3)
  9244  0487  1989               	btfsc	9,3	;volatile
  9245  0488  2EB3               	goto	l535
  9246  0489                     l607:	
  9247                           ;newmain.c: 1002: {
  9248                           ;newmain.c: 1003: while(!RE3);
  9249                           
  9250  0489  1D89               	btfss	9,3	;volatile
  9251  048A  2C89               	goto	l607
  9252                           
  9253                           ;newmain.c: 1004: if(!pad && coin)
  9254  048B  1AF0               	btfsc	_pad/(0+8),_pad& (0+7)
  9255  048C  2D9D               	goto	l610
  9256  048D  1A70               	btfsc	_coin/(0+8),_coin& (0+7)
  9257  048E  2D85               	goto	l4604
  9258  048F  2D9D               	goto	l610
  9259  0490                     l4528:	
  9260                           ;newmain.c: 1007: {
  9261                           ;newmain.c: 1008: case 1: Write_EEPROM_Price(0X14,0X15,0X16,rupee1);pad=1;coin=0;stock=2
      +                          ;num=padcount2;Qflag=0;buzzer(50);break;
  9262                           
  9263                           ;newmain.c: 1005: {
  9264                           ;newmain.c: 1006: switch(stock)
  9265                           
  9266  0490  3015               	movlw	21
  9267  0491  00EB               	movwf	??_main
  9268  0492  086B               	movf	??_main,w
  9269  0493  00DE               	movwf	Write_EEPROM_Price@a2
  9270  0494  3016               	movlw	22
  9271  0495  00EC               	movwf	??_main+1
  9272  0496  086C               	movf	??_main+1,w
  9273  0497  00DF               	movwf	Write_EEPROM_Price@a3
  9274  0498  083F               	movf	_rupee1+1,w
  9275  0499  00E1               	movwf	Write_EEPROM_Price@data_value+1
  9276  049A  083E               	movf	_rupee1,w
  9277  049B  00E0               	movwf	Write_EEPROM_Price@data_value
  9278  049C  3014               	movlw	20
  9279  049D  160A  118A  25B5  120A  118A  	fcall	_Write_EEPROM_Price
  9280  04A2  16F0               	bsf	_pad/(0+8),_pad& (0+7)
  9281  04A3  1270               	bcf	_coin/(0+8),_coin& (0+7)
  9282  04A4  3002               	movlw	2
  9283  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  9284  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  9285  04A7  00A2               	movwf	_stock
  9286  04A8  3000               	movlw	0
  9287  04A9  00A3               	movwf	_stock+1
  9288  04AA  083D               	movf	_padcount2+1,w
  9289  04AB  00A5               	movwf	_num+1
  9290  04AC  083C               	movf	_padcount2,w
  9291  04AD  00A4               	movwf	_num
  9292  04AE  1070               	bcf	_Qflag/(0+8),_Qflag& (0+7)
  9293  04AF  3032               	movlw	50
  9294  04B0  00CD               	movwf	buzzer@a
  9295  04B1  3000               	movlw	0
  9296  04B2  00CE               	movwf	buzzer@a+1
  9297  04B3  160A  158A  279C  120A  118A  	fcall	_buzzer
  9298  04B8  2D9D               	goto	l610
  9299  04B9                     l4540:	
  9300                           ;newmain.c: 1009: case 2: Write_EEPROM_Price(0X17,0X18,0X19,rupee2);pad=1;coin=0;stock=3
      +                          ;num=padcount3;Qflag=0;buzzer(50);break;
  9301                           
  9302  04B9  3018               	movlw	24
  9303  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  9304  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  9305  04BC  00EB               	movwf	??_main
  9306  04BD  086B               	movf	??_main,w
  9307  04BE  00DE               	movwf	Write_EEPROM_Price@a2
  9308  04BF  3019               	movlw	25
  9309  04C0  00EC               	movwf	??_main+1
  9310  04C1  086C               	movf	??_main+1,w
  9311  04C2  00DF               	movwf	Write_EEPROM_Price@a3
  9312  04C3  083B               	movf	_rupee2+1,w
  9313  04C4  00E1               	movwf	Write_EEPROM_Price@data_value+1
  9314  04C5  083A               	movf	_rupee2,w
  9315  04C6  00E0               	movwf	Write_EEPROM_Price@data_value
  9316  04C7  3017               	movlw	23
  9317  04C8  160A  118A  25B5  120A  118A  	fcall	_Write_EEPROM_Price
  9318  04CD  16F0               	bsf	_pad/(0+8),_pad& (0+7)
  9319  04CE  1270               	bcf	_coin/(0+8),_coin& (0+7)
  9320  04CF  3003               	movlw	3
  9321  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  9322  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  9323  04D2  00A2               	movwf	_stock
  9324  04D3  3000               	movlw	0
  9325  04D4  00A3               	movwf	_stock+1
  9326  04D5  0835               	movf	_padcount3+1,w
  9327  04D6  00A5               	movwf	_num+1
  9328  04D7  0834               	movf	_padcount3,w
  9329  04D8  00A4               	movwf	_num
  9330  04D9  1070               	bcf	_Qflag/(0+8),_Qflag& (0+7)
  9331  04DA  3032               	movlw	50
  9332  04DB  00CD               	movwf	buzzer@a
  9333  04DC  3000               	movlw	0
  9334  04DD  00CE               	movwf	buzzer@a+1
  9335  04DE  160A  158A  279C  120A  118A  	fcall	_buzzer
  9336  04E3  2D9D               	goto	l610
  9337  04E4                     l4552:	
  9338                           ;newmain.c: 1010: case 3: Write_EEPROM_Price(0X1A,0X1B,0X1C,rupee3);pad=1;coin=0;stock=4
      +                          ;num=padcount4;Qflag=0;buzzer(50);break;
  9339                           
  9340  04E4  301B               	movlw	27
  9341  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  9342  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  9343  04E7  00EB               	movwf	??_main
  9344  04E8  086B               	movf	??_main,w
  9345  04E9  00DE               	movwf	Write_EEPROM_Price@a2
  9346  04EA  301C               	movlw	28
  9347  04EB  00EC               	movwf	??_main+1
  9348  04EC  086C               	movf	??_main+1,w
  9349  04ED  00DF               	movwf	Write_EEPROM_Price@a3
  9350  04EE  0833               	movf	_rupee3+1,w
  9351  04EF  00E1               	movwf	Write_EEPROM_Price@data_value+1
  9352  04F0  0832               	movf	_rupee3,w
  9353  04F1  00E0               	movwf	Write_EEPROM_Price@data_value
  9354  04F2  301A               	movlw	26
  9355  04F3  160A  118A  25B5  120A  118A  	fcall	_Write_EEPROM_Price
  9356  04F8  16F0               	bsf	_pad/(0+8),_pad& (0+7)
  9357  04F9  1270               	bcf	_coin/(0+8),_coin& (0+7)
  9358  04FA  3004               	movlw	4
  9359  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  9360  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  9361  04FD  00A2               	movwf	_stock
  9362  04FE  3000               	movlw	0
  9363  04FF  00A3               	movwf	_stock+1
  9364  0500  0831               	movf	_padcount4+1,w
  9365  0501  00A5               	movwf	_num+1
  9366  0502  0830               	movf	_padcount4,w
  9367  0503  00A4               	movwf	_num
  9368  0504  1070               	bcf	_Qflag/(0+8),_Qflag& (0+7)
  9369  0505  3032               	movlw	50
  9370  0506  00CD               	movwf	buzzer@a
  9371  0507  3000               	movlw	0
  9372  0508  00CE               	movwf	buzzer@a+1
  9373  0509  160A  158A  279C  120A  118A  	fcall	_buzzer
  9374  050E  2D9D               	goto	l610
  9375  050F                     l4564:	
  9376                           ;newmain.c: 1011: case 4: Write_EEPROM_Price(0X1D,0X1E,0X1F,rupee4);pad=1;coin=0;stock=5
      +                          ;num=padcount5;Qflag=0;buzzer(50);break;
  9377                           
  9378  050F  301E               	movlw	30
  9379  0510  1283               	bcf	3,5	;RP0=0, select bank0
  9380  0511  1303               	bcf	3,6	;RP1=0, select bank0
  9381  0512  00EB               	movwf	??_main
  9382  0513  086B               	movf	??_main,w
  9383  0514  00DE               	movwf	Write_EEPROM_Price@a2
  9384  0515  301F               	movlw	31
  9385  0516  00EC               	movwf	??_main+1
  9386  0517  086C               	movf	??_main+1,w
  9387  0518  00DF               	movwf	Write_EEPROM_Price@a3
  9388  0519  082F               	movf	_rupee4+1,w
  9389  051A  00E1               	movwf	Write_EEPROM_Price@data_value+1
  9390  051B  082E               	movf	_rupee4,w
  9391  051C  00E0               	movwf	Write_EEPROM_Price@data_value
  9392  051D  301D               	movlw	29
  9393  051E  160A  118A  25B5  120A  118A  	fcall	_Write_EEPROM_Price
  9394  0523  16F0               	bsf	_pad/(0+8),_pad& (0+7)
  9395  0524  1270               	bcf	_coin/(0+8),_coin& (0+7)
  9396  0525  3005               	movlw	5
  9397  0526  1283               	bcf	3,5	;RP0=0, select bank0
  9398  0527  1303               	bcf	3,6	;RP1=0, select bank0
  9399  0528  00A2               	movwf	_stock
  9400  0529  3000               	movlw	0
  9401  052A  00A3               	movwf	_stock+1
  9402  052B  082D               	movf	_padcount5+1,w
  9403  052C  00A5               	movwf	_num+1
  9404  052D  082C               	movf	_padcount5,w
  9405  052E  00A4               	movwf	_num
  9406  052F  1070               	bcf	_Qflag/(0+8),_Qflag& (0+7)
  9407  0530  3032               	movlw	50
  9408  0531  00CD               	movwf	buzzer@a
  9409  0532  3000               	movlw	0
  9410  0533  00CE               	movwf	buzzer@a+1
  9411  0534  160A  158A  279C  120A  118A  	fcall	_buzzer
  9412  0539  2D9D               	goto	l610
  9413  053A                     l4576:	
  9414                           ;newmain.c: 1012: case 5: Write_EEPROM_Price(0X20,0X21,0X22,rupee5);pad=0;coin=0;stock=1
      +                          ;num=0;status=0;set=0;Qflag=0;
  9415                           
  9416  053A  3021               	movlw	33
  9417  053B  1283               	bcf	3,5	;RP0=0, select bank0
  9418  053C  1303               	bcf	3,6	;RP1=0, select bank0
  9419  053D  00EB               	movwf	??_main
  9420  053E  086B               	movf	??_main,w
  9421  053F  00DE               	movwf	Write_EEPROM_Price@a2
  9422  0540  3022               	movlw	34
  9423  0541  00EC               	movwf	??_main+1
  9424  0542  086C               	movf	??_main+1,w
  9425  0543  00DF               	movwf	Write_EEPROM_Price@a3
  9426  0544  082B               	movf	_rupee5+1,w
  9427  0545  00E1               	movwf	Write_EEPROM_Price@data_value+1
  9428  0546  082A               	movf	_rupee5,w
  9429  0547  00E0               	movwf	Write_EEPROM_Price@data_value
  9430  0548  3020               	movlw	32
  9431  0549  160A  118A  25B5  120A  118A  	fcall	_Write_EEPROM_Price
  9432  054E  12F0               	bcf	_pad/(0+8),_pad& (0+7)
  9433  054F  1270               	bcf	_coin/(0+8),_coin& (0+7)
  9434  0550  3001               	movlw	1
  9435  0551  1283               	bcf	3,5	;RP0=0, select bank0
  9436  0552  1303               	bcf	3,6	;RP1=0, select bank0
  9437  0553  00A2               	movwf	_stock
  9438  0554  3000               	movlw	0
  9439  0555  00A3               	movwf	_stock+1
  9440  0556  01A4               	clrf	_num
  9441  0557  01A5               	clrf	_num+1
  9442  0558  10F1               	bcf	_status/(0+8),_status& (0+7)
  9443  0559  13F0               	bcf	_set/(0+8),_set& (0+7)
  9444  055A  1070               	bcf	_Qflag/(0+8),_Qflag& (0+7)
  9445                           
  9446                           ;newmain.c: 1013: buzzer(50);
  9447  055B  3032               	movlw	50
  9448  055C  00CD               	movwf	buzzer@a
  9449  055D  3000               	movlw	0
  9450  055E  00CE               	movwf	buzzer@a+1
  9451  055F  160A  158A  279C  120A  118A  	fcall	_buzzer
  9452                           
  9453                           ;newmain.c: 1014: LCD_Clear();
  9454  0564  160A  158A  26F5  120A  118A  	fcall	_LCD_Clear
  9455                           
  9456                           ;newmain.c: 1015: LCD_DisplayString("  DATAS STORED..");
  9457  0569  3045               	movlw	low (STR_34| (0+32768))
  9458  056A  1283               	bcf	3,5	;RP0=0, select bank0
  9459  056B  1303               	bcf	3,6	;RP1=0, select bank0
  9460  056C  00D0               	movwf	LCD_DisplayString@s
  9461  056D  3091               	movlw	high (STR_34| (0+32768))
  9462  056E  00D1               	movwf	LCD_DisplayString@s+1
  9463  056F  160A  118A  2272  120A  118A  	fcall	_LCD_DisplayString
  9464                           
  9465                           ;newmain.c: 1016: buzzer(1000);
  9466  0574  30E8               	movlw	232
  9467  0575  1283               	bcf	3,5	;RP0=0, select bank0
  9468  0576  1303               	bcf	3,6	;RP1=0, select bank0
  9469  0577  00CD               	movwf	buzzer@a
  9470  0578  3003               	movlw	3
  9471  0579  00CE               	movwf	buzzer@a+1
  9472  057A  160A  158A  279C  120A  118A  	fcall	_buzzer
  9473                           
  9474                           ;newmain.c: 1017: LCD_Clear();
  9475  057F  160A  158A  26F5  120A  118A  	fcall	_LCD_Clear
  9476                           
  9477                           ;newmain.c: 1019: }
  9478                           
  9479                           ;newmain.c: 1018: break;
  9480  0584  2D9D               	goto	l610
  9481  0585                     l4604:	
  9482                           
  9483                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9484                           ; Switch size 1, requested type "space"
  9485                           ; Number of cases is 1, Range of values is 0 to 0
  9486                           ; switch strategies available:
  9487                           ; Name         Instructions Cycles
  9488                           ; simple_byte            4     3 (average)
  9489                           ; direct_byte           11     8 (fixed)
  9490                           ; jumptable            260     6 (fixed)
  9491                           ;	Chosen strategy is simple_byte
  9492  0585  1283               	bcf	3,5	;RP0=0, select bank0
  9493  0586  1303               	bcf	3,6	;RP1=0, select bank0
  9494  0587  0823               	movf	_stock+1,w
  9495  0588  3A00               	xorlw	0	; case 0
  9496  0589  1903               	skipnz
  9497  058A  2D8C               	goto	l5078
  9498  058B  2D9D               	goto	l610
  9499  058C                     l5078:	
  9500                           
  9501                           ; Switch size 1, requested type "space"
  9502                           ; Number of cases is 5, Range of values is 1 to 5
  9503                           ; switch strategies available:
  9504                           ; Name         Instructions Cycles
  9505                           ; simple_byte           16     9 (average)
  9506                           ; direct_byte           26    11 (fixed)
  9507                           ; jumptable            263     9 (fixed)
  9508                           ;	Chosen strategy is simple_byte
  9509  058C  0822               	movf	_stock,w
  9510  058D  3A01               	xorlw	1	; case 1
  9511  058E  1903               	skipnz
  9512  058F  2C90               	goto	l4528
  9513  0590  3A03               	xorlw	3	; case 2
  9514  0591  1903               	skipnz
  9515  0592  2CB9               	goto	l4540
  9516  0593  3A01               	xorlw	1	; case 3
  9517  0594  1903               	skipnz
  9518  0595  2CE4               	goto	l4552
  9519  0596  3A07               	xorlw	7	; case 4
  9520  0597  1903               	skipnz
  9521  0598  2D0F               	goto	l4564
  9522  0599  3A01               	xorlw	1	; case 5
  9523  059A  1903               	skipnz
  9524  059B  2D3A               	goto	l4576
  9525  059C  2D9D               	goto	l610
  9526  059D                     l610:	
  9527                           
  9528                           ;newmain.c: 1020: }
  9529                           ;newmain.c: 1022: if(pad && !coin && Qflag)
  9530  059D  1AF0               	btfsc	_pad/(0+8),_pad& (0+7)
  9531  059E  1A70               	btfsc	_coin/(0+8),_coin& (0+7)
  9532  059F  2EB3               	goto	l535
  9533  05A0  1870               	btfsc	_Qflag/(0+8),_Qflag& (0+7)
  9534  05A1  2E9B               	goto	l4664
  9535  05A2  2EB3               	goto	l535
  9536  05A3                     l4612:	
  9537                           ;newmain.c: 1025: {
  9538                           ;newmain.c: 1026: case 1: Write_EEPROM(0,1,padcount1);Write_EEPROM(2,3,padcount1);pad=0;
      +                          coin=1;num=rupee1;buzzer(50);break;
  9539                           
  9540                           ;newmain.c: 1023: {
  9541                           ;newmain.c: 1024: switch(stock)
  9542                           
  9543  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  9544  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  9545  05A5  01DE               	clrf	Write_EEPROM@a2
  9546  05A6  0ADE               	incf	Write_EEPROM@a2,f
  9547  05A7  0841               	movf	_padcount1+1,w
  9548  05A8  00E0               	movwf	Write_EEPROM@data_value+1
  9549  05A9  0840               	movf	_padcount1,w
  9550  05AA  00DF               	movwf	Write_EEPROM@data_value
  9551  05AB  3000               	movlw	0
  9552  05AC  160A  118A  2356  120A  118A  	fcall	_Write_EEPROM
  9553  05B1  3003               	movlw	3
  9554  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  9555  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  9556  05B4  00EB               	movwf	??_main
  9557  05B5  086B               	movf	??_main,w
  9558  05B6  00DE               	movwf	Write_EEPROM@a2
  9559  05B7  0841               	movf	_padcount1+1,w
  9560  05B8  00E0               	movwf	Write_EEPROM@data_value+1
  9561  05B9  0840               	movf	_padcount1,w
  9562  05BA  00DF               	movwf	Write_EEPROM@data_value
  9563  05BB  3002               	movlw	2
  9564  05BC  160A  118A  2356  120A  118A  	fcall	_Write_EEPROM
  9565  05C1  12F0               	bcf	_pad/(0+8),_pad& (0+7)
  9566  05C2  1670               	bsf	_coin/(0+8),_coin& (0+7)
  9567  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  9568  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  9569  05C5  083F               	movf	_rupee1+1,w
  9570  05C6  00A5               	movwf	_num+1
  9571  05C7  083E               	movf	_rupee1,w
  9572  05C8  00A4               	movwf	_num
  9573  05C9  3032               	movlw	50
  9574  05CA  00CD               	movwf	buzzer@a
  9575  05CB  3000               	movlw	0
  9576  05CC  00CE               	movwf	buzzer@a+1
  9577  05CD  160A  158A  279C  120A  118A  	fcall	_buzzer
  9578  05D2  2EB3               	goto	l535
  9579  05D3                     l4622:	
  9580                           ;newmain.c: 1027: case 2: Write_EEPROM(4,5,padcount2);Write_EEPROM(6,7,padcount2);pad=0;
      +                          coin=1;num=rupee2;buzzer(50);break;
  9581                           
  9582  05D3  3005               	movlw	5
  9583  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  9584  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  9585  05D6  00EB               	movwf	??_main
  9586  05D7  086B               	movf	??_main,w
  9587  05D8  00DE               	movwf	Write_EEPROM@a2
  9588  05D9  083D               	movf	_padcount2+1,w
  9589  05DA  00E0               	movwf	Write_EEPROM@data_value+1
  9590  05DB  083C               	movf	_padcount2,w
  9591  05DC  00DF               	movwf	Write_EEPROM@data_value
  9592  05DD  3004               	movlw	4
  9593  05DE  160A  118A  2356  120A  118A  	fcall	_Write_EEPROM
  9594  05E3  3007               	movlw	7
  9595  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  9596  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  9597  05E6  00EB               	movwf	??_main
  9598  05E7  086B               	movf	??_main,w
  9599  05E8  00DE               	movwf	Write_EEPROM@a2
  9600  05E9  083D               	movf	_padcount2+1,w
  9601  05EA  00E0               	movwf	Write_EEPROM@data_value+1
  9602  05EB  083C               	movf	_padcount2,w
  9603  05EC  00DF               	movwf	Write_EEPROM@data_value
  9604  05ED  3006               	movlw	6
  9605  05EE  160A  118A  2356  120A  118A  	fcall	_Write_EEPROM
  9606  05F3  12F0               	bcf	_pad/(0+8),_pad& (0+7)
  9607  05F4  1670               	bsf	_coin/(0+8),_coin& (0+7)
  9608  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  9609  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  9610  05F7  083B               	movf	_rupee2+1,w
  9611  05F8  00A5               	movwf	_num+1
  9612  05F9  083A               	movf	_rupee2,w
  9613  05FA  00A4               	movwf	_num
  9614  05FB  3032               	movlw	50
  9615  05FC  00CD               	movwf	buzzer@a
  9616  05FD  3000               	movlw	0
  9617  05FE  00CE               	movwf	buzzer@a+1
  9618  05FF  160A  158A  279C  120A  118A  	fcall	_buzzer
  9619  0604  2EB3               	goto	l535
  9620  0605                     l4632:	
  9621                           ;newmain.c: 1028: case 3: Write_EEPROM(8,9,padcount3);Write_EEPROM(0X0A,0X0B,padcount3);
      +                          pad=0;coin=1;num=rupee3;buzzer(50);break;
  9622                           
  9623  0605  3009               	movlw	9
  9624  0606  1283               	bcf	3,5	;RP0=0, select bank0
  9625  0607  1303               	bcf	3,6	;RP1=0, select bank0
  9626  0608  00EB               	movwf	??_main
  9627  0609  086B               	movf	??_main,w
  9628  060A  00DE               	movwf	Write_EEPROM@a2
  9629  060B  0835               	movf	_padcount3+1,w
  9630  060C  00E0               	movwf	Write_EEPROM@data_value+1
  9631  060D  0834               	movf	_padcount3,w
  9632  060E  00DF               	movwf	Write_EEPROM@data_value
  9633  060F  3008               	movlw	8
  9634  0610  160A  118A  2356  120A  118A  	fcall	_Write_EEPROM
  9635  0615  300B               	movlw	11
  9636  0616  1283               	bcf	3,5	;RP0=0, select bank0
  9637  0617  1303               	bcf	3,6	;RP1=0, select bank0
  9638  0618  00EB               	movwf	??_main
  9639  0619  086B               	movf	??_main,w
  9640  061A  00DE               	movwf	Write_EEPROM@a2
  9641  061B  0835               	movf	_padcount3+1,w
  9642  061C  00E0               	movwf	Write_EEPROM@data_value+1
  9643  061D  0834               	movf	_padcount3,w
  9644  061E  00DF               	movwf	Write_EEPROM@data_value
  9645  061F  300A               	movlw	10
  9646  0620  160A  118A  2356  120A  118A  	fcall	_Write_EEPROM
  9647  0625  12F0               	bcf	_pad/(0+8),_pad& (0+7)
  9648  0626  1670               	bsf	_coin/(0+8),_coin& (0+7)
  9649  0627  1283               	bcf	3,5	;RP0=0, select bank0
  9650  0628  1303               	bcf	3,6	;RP1=0, select bank0
  9651  0629  0833               	movf	_rupee3+1,w
  9652  062A  00A5               	movwf	_num+1
  9653  062B  0832               	movf	_rupee3,w
  9654  062C  00A4               	movwf	_num
  9655  062D  3032               	movlw	50
  9656  062E  00CD               	movwf	buzzer@a
  9657  062F  3000               	movlw	0
  9658  0630  00CE               	movwf	buzzer@a+1
  9659  0631  160A  158A  279C  120A  118A  	fcall	_buzzer
  9660  0636  2EB3               	goto	l535
  9661  0637                     l4642:	
  9662                           ;newmain.c: 1029: case 4: Write_EEPROM(0X0C,0X0D,padcount4);Write_EEPROM(0X0E,0X0F,padco
      +                          unt4);pad=0;coin=1;num=rupee4;buzzer(50);break;
  9663                           
  9664  0637  300D               	movlw	13
  9665  0638  1283               	bcf	3,5	;RP0=0, select bank0
  9666  0639  1303               	bcf	3,6	;RP1=0, select bank0
  9667  063A  00EB               	movwf	??_main
  9668  063B  086B               	movf	??_main,w
  9669  063C  00DE               	movwf	Write_EEPROM@a2
  9670  063D  0831               	movf	_padcount4+1,w
  9671  063E  00E0               	movwf	Write_EEPROM@data_value+1
  9672  063F  0830               	movf	_padcount4,w
  9673  0640  00DF               	movwf	Write_EEPROM@data_value
  9674  0641  300C               	movlw	12
  9675  0642  160A  118A  2356  120A  118A  	fcall	_Write_EEPROM
  9676  0647  300F               	movlw	15
  9677  0648  1283               	bcf	3,5	;RP0=0, select bank0
  9678  0649  1303               	bcf	3,6	;RP1=0, select bank0
  9679  064A  00EB               	movwf	??_main
  9680  064B  086B               	movf	??_main,w
  9681  064C  00DE               	movwf	Write_EEPROM@a2
  9682  064D  0831               	movf	_padcount4+1,w
  9683  064E  00E0               	movwf	Write_EEPROM@data_value+1
  9684  064F  0830               	movf	_padcount4,w
  9685  0650  00DF               	movwf	Write_EEPROM@data_value
  9686  0651  300E               	movlw	14
  9687  0652  160A  118A  2356  120A  118A  	fcall	_Write_EEPROM
  9688  0657  12F0               	bcf	_pad/(0+8),_pad& (0+7)
  9689  0658  1670               	bsf	_coin/(0+8),_coin& (0+7)
  9690  0659  1283               	bcf	3,5	;RP0=0, select bank0
  9691  065A  1303               	bcf	3,6	;RP1=0, select bank0
  9692  065B  082F               	movf	_rupee4+1,w
  9693  065C  00A5               	movwf	_num+1
  9694  065D  082E               	movf	_rupee4,w
  9695  065E  00A4               	movwf	_num
  9696  065F  3032               	movlw	50
  9697  0660  00CD               	movwf	buzzer@a
  9698  0661  3000               	movlw	0
  9699  0662  00CE               	movwf	buzzer@a+1
  9700  0663  160A  158A  279C  120A  118A  	fcall	_buzzer
  9701  0668  2EB3               	goto	l535
  9702  0669                     l4652:	
  9703                           ;newmain.c: 1030: case 5: Write_EEPROM(0X10,0X11,padcount5);Write_EEPROM(0X12,0X13,padco
      +                          unt5);pad=0;coin=1;num=rupee5;buzzer(50);break;
  9704                           
  9705  0669  3011               	movlw	17
  9706  066A  1283               	bcf	3,5	;RP0=0, select bank0
  9707  066B  1303               	bcf	3,6	;RP1=0, select bank0
  9708  066C  00EB               	movwf	??_main
  9709  066D  086B               	movf	??_main,w
  9710  066E  00DE               	movwf	Write_EEPROM@a2
  9711  066F  082D               	movf	_padcount5+1,w
  9712  0670  00E0               	movwf	Write_EEPROM@data_value+1
  9713  0671  082C               	movf	_padcount5,w
  9714  0672  00DF               	movwf	Write_EEPROM@data_value
  9715  0673  3010               	movlw	16
  9716  0674  160A  118A  2356  120A  118A  	fcall	_Write_EEPROM
  9717  0679  3013               	movlw	19
  9718  067A  1283               	bcf	3,5	;RP0=0, select bank0
  9719  067B  1303               	bcf	3,6	;RP1=0, select bank0
  9720  067C  00EB               	movwf	??_main
  9721  067D  086B               	movf	??_main,w
  9722  067E  00DE               	movwf	Write_EEPROM@a2
  9723  067F  082D               	movf	_padcount5+1,w
  9724  0680  00E0               	movwf	Write_EEPROM@data_value+1
  9725  0681  082C               	movf	_padcount5,w
  9726  0682  00DF               	movwf	Write_EEPROM@data_value
  9727  0683  3012               	movlw	18
  9728  0684  160A  118A  2356  120A  118A  	fcall	_Write_EEPROM
  9729  0689  12F0               	bcf	_pad/(0+8),_pad& (0+7)
  9730  068A  1670               	bsf	_coin/(0+8),_coin& (0+7)
  9731  068B  1283               	bcf	3,5	;RP0=0, select bank0
  9732  068C  1303               	bcf	3,6	;RP1=0, select bank0
  9733  068D  082B               	movf	_rupee5+1,w
  9734  068E  00A5               	movwf	_num+1
  9735  068F  082A               	movf	_rupee5,w
  9736  0690  00A4               	movwf	_num
  9737  0691  3032               	movlw	50
  9738  0692  00CD               	movwf	buzzer@a
  9739  0693  3000               	movlw	0
  9740  0694  00CE               	movwf	buzzer@a+1
  9741  0695  160A  158A  279C  120A  118A  	fcall	_buzzer
  9742                           
  9743                           ;newmain.c: 1031: }
  9744  069A  2EB3               	goto	l535
  9745  069B                     l4664:	
  9746                           
  9747                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9748                           ; Switch size 1, requested type "space"
  9749                           ; Number of cases is 1, Range of values is 0 to 0
  9750                           ; switch strategies available:
  9751                           ; Name         Instructions Cycles
  9752                           ; simple_byte            4     3 (average)
  9753                           ; direct_byte           11     8 (fixed)
  9754                           ; jumptable            260     6 (fixed)
  9755                           ;	Chosen strategy is simple_byte
  9756  069B  1283               	bcf	3,5	;RP0=0, select bank0
  9757  069C  1303               	bcf	3,6	;RP1=0, select bank0
  9758  069D  0823               	movf	_stock+1,w
  9759  069E  3A00               	xorlw	0	; case 0
  9760  069F  1903               	skipnz
  9761  06A0  2EA2               	goto	l5080
  9762  06A1  2EB3               	goto	l535
  9763  06A2                     l5080:	
  9764                           
  9765                           ; Switch size 1, requested type "space"
  9766                           ; Number of cases is 5, Range of values is 1 to 5
  9767                           ; switch strategies available:
  9768                           ; Name         Instructions Cycles
  9769                           ; simple_byte           16     9 (average)
  9770                           ; direct_byte           26    11 (fixed)
  9771                           ; jumptable            263     9 (fixed)
  9772                           ;	Chosen strategy is simple_byte
  9773  06A2  0822               	movf	_stock,w
  9774  06A3  3A01               	xorlw	1	; case 1
  9775  06A4  1903               	skipnz
  9776  06A5  2DA3               	goto	l4612
  9777  06A6  3A03               	xorlw	3	; case 2
  9778  06A7  1903               	skipnz
  9779  06A8  2DD3               	goto	l4622
  9780  06A9  3A01               	xorlw	1	; case 3
  9781  06AA  1903               	skipnz
  9782  06AB  2E05               	goto	l4632
  9783  06AC  3A07               	xorlw	7	; case 4
  9784  06AD  1903               	skipnz
  9785  06AE  2E37               	goto	l4642
  9786  06AF  3A01               	xorlw	1	; case 5
  9787  06B0  1903               	skipnz
  9788  06B1  2E69               	goto	l4652
  9789  06B2  2EB3               	goto	l535
  9790  06B3                     l535:	
  9791  06B3  1FF0               	btfss	_set/(0+8),_set& (0+7)
  9792  06B4  2EB9               	goto	L24
  9793  06B5  2A0E               	goto	l536
  9794  06B6                     l628:	
  9795  06B6  120A  118A  2812   	ljmp	start
  9796  06B9                     L24:	
  9797  06B9                     __end_of_main:	
  9798  06B9  120A  158A  2DFC   	ljmp	l250


Data Sizes:
    Strings     510
    Constant    10
    Data        8
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     33      78
    BANK1            80      0       8
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_36(CODE[3]), STR_35(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> dispvalue(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_BuildChar@p	PTR unsigned char  size(1) Largest target is 8
		 -> RupeeSymbol(BANK1[8]), 

    LCD_DisplayString@s	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_38(CODE[19]), STR_37(CODE[18]), dispvalue(BANK0[10]), STR_34(CODE[17]), 
		 -> STR_33(CODE[11]), STR_32(CODE[5]), STR_31(CODE[9]), STR_30(CODE[10]), 
		 -> STR_29(CODE[7]), STR_28(CODE[17]), STR_27(CODE[16]), STR_26(CODE[18]), 
		 -> STR_25(CODE[17]), STR_24(CODE[3]), STR_23(CODE[17]), STR_22(CODE[17]), 
		 -> STR_21(CODE[17]), STR_20(CODE[17]), STR_19(CODE[18]), STR_18(CODE[18]), 
		 -> STR_17(CODE[17]), STR_16(CODE[16]), STR_15(CODE[16]), STR_14(CODE[17]), 
		 -> STR_13(CODE[3]), STR_12(CODE[12]), STR_11(CODE[17]), STR_10(CODE[4]), 
		 -> STR_9(CODE[6]), STR_8(CODE[17]), STR_7(CODE[16]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[18]), STR_3(CODE[17]), STR_2(CODE[18]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _COINCOUNTER in COMMON

    _COINCOUNTER->_Monitor_Balance

Critical Paths under _main in BANK0

    _main->_display
    _main->_display_price
    _escprocess->_LCD_Clear
    _escprocess->_buzzer
    _displaypass->___awdiv
    _display_price->_sprintf
    _display->_sprintf
    _sprintf->___lwmod
    _Write_EEPROM_Price->_eeprom_write
    _Write_EEPROM->_eeprom_write
    _eeprom_write->___lwmod
    ___lwmod->___lwdiv
    _STOCK_EMPTY_ROUTINE->_LCD_Clear
    _STOCK_EMPTY_ROUTINE->_LCD_DisplayString
    _STOCK_EMPTY_ROUTINE->_buzzer
    _LCD_DisplayString->_LCD_DataWrite
    _LCD_Clear->_LCD_CmdWrite
    _Read_EEPROM_Price->___wmul
    _Read_EEPROM->___wmul
    _LCD_Init->_LCD_BuildChar
    _LCD_BuildChar->_LCD_CmdWrite
    _LCD_BuildChar->_LCD_DataWrite
    _LCD_DataWrite->_ToggleEpinOfLCD
    _LCD_CmdWrite->_ToggleEpinOfLCD

Critical Paths under _COINCOUNTER in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _COINCOUNTER in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _COINCOUNTER in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _COINCOUNTER in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   30913
                                             30 BANK0      3     3      0
                          _LCD_Clear
                       _LCD_CmdWrite
                      _LCD_DataWrite
                  _LCD_DisplayString
                           _LCD_Init
                          _PORT_Init
                        _Read_EEPROM
                  _Read_EEPROM_Price
                _STOCK_EMPTY_ROUTINE
                        _Set_Channel
                       _Write_EEPROM
                 _Write_EEPROM_Price
                             _buzzer
                            _display
                      _display_price
                        _displaypass
                         _escprocess
 ---------------------------------------------------------------------------------
 (1) _escprocess                                           0     0      0    2316
                          _LCD_Clear
                             _buzzer
 ---------------------------------------------------------------------------------
 (1) _displaypass                                          2     0      2     949
                                              9 BANK0      2     0      2
                      _LCD_DataWrite
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _display_price                                        2     0      2    4037
                                             28 BANK0      2     0      2
                  _LCD_DisplayString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _display                                              2     0      2    4090
                                             28 BANK0      2     0      2
                  _LCD_DisplayString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    18      4    1806
                                             14 BANK0     14    10      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _Write_EEPROM_Price                                   6     2      4    3200
                                             17 BANK0      6     2      4
                            ___lwdiv
                            ___lwmod
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (1) _Write_EEPROM                                         5     2      3    3686
                                             17 BANK0      5     2      3
                            ___lwdiv
                            ___lwmod
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (2) _eeprom_write                                         3     2      1     309
                                             14 BANK0      3     2      1
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     583
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     586
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Set_Channel                                          2     0      2     397
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _STOCK_EMPTY_ROUTINE                                  3     3      0    4463
                                              5 BANK0      3     3      0
                          _LCD_Clear
                       _LCD_CmdWrite
                  _LCD_DisplayString
                             _buzzer
 ---------------------------------------------------------------------------------
 (2) _buzzer                                               5     3      2    2272
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayString                                    2     0      2    2103
                                              3 BANK0      2     0      2
                      _LCD_DataWrite
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            2     2      0      44
                                              3 BANK0      2     2      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (1) _Read_EEPROM_Price                                   13    11      2    1630
                                              6 BANK0     13    11      2
                             ___wmul
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (1) _Read_EEPROM                                          9     7      2    1319
                                              6 BANK0      9     7      2
                             ___wmul
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     410
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _PORT_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0     319
                                              7 BANK0      1     1      0
                      _LCD_BuildChar
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (2) _LCD_BuildChar                                        4     3      1     275
                                              3 BANK0      4     3      1
                       _LCD_CmdWrite
                      _LCD_DataWrite
 ---------------------------------------------------------------------------------
 (2) _LCD_DataWrite                                        2     2      0      44
                                              1 BANK0      2     2      0
                    _ToggleEpinOfLCD
 ---------------------------------------------------------------------------------
 (3) _LCD_CmdWrite                                         2     2      0      44
                                              1 BANK0      2     2      0
                    _ToggleEpinOfLCD
 ---------------------------------------------------------------------------------
 (4) _ToggleEpinOfLCD                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _COINCOUNTER                                          6     6      0     141
                                              2 COMMON     6     6      0
                    _Monitor_Balance
 ---------------------------------------------------------------------------------
 (6) _Monitor_Balance                                      2     0      2     141
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_CmdWrite
       _ToggleEpinOfLCD
   _LCD_CmdWrite
     _ToggleEpinOfLCD
   _LCD_DataWrite
     _ToggleEpinOfLCD
   _LCD_DisplayString
     _LCD_DataWrite
       _ToggleEpinOfLCD
   _LCD_Init
     _LCD_BuildChar
       _LCD_CmdWrite
         _ToggleEpinOfLCD
       _LCD_DataWrite
         _ToggleEpinOfLCD
     _LCD_CmdWrite
       _ToggleEpinOfLCD
   _PORT_Init
   _Read_EEPROM
     ___wmul
     _eeprom_read
   _Read_EEPROM_Price
     ___wmul
     _eeprom_read
   _STOCK_EMPTY_ROUTINE
     _LCD_Clear
       _LCD_CmdWrite
         _ToggleEpinOfLCD
     _LCD_CmdWrite
       _ToggleEpinOfLCD
     _LCD_DisplayString
       _LCD_DataWrite
         _ToggleEpinOfLCD
     _buzzer
   _Set_Channel
   _Write_EEPROM
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _eeprom_write
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
   _Write_EEPROM_Price
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _eeprom_write
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
   _buzzer
   _display
     _LCD_DisplayString
       _LCD_DataWrite
         _ToggleEpinOfLCD
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _display_price
     _LCD_DisplayString
       _LCD_DataWrite
         _ToggleEpinOfLCD
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _displaypass
     _LCD_DataWrite
       _ToggleEpinOfLCD
     ___awdiv
     ___awmod
   _escprocess
     _LCD_Clear
       _LCD_CmdWrite
         _ToggleEpinOfLCD
     _buzzer

 _COINCOUNTER (ROOT)
   _Monitor_Balance

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       8       7       10.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       E       1      100.0%
BITCOMMON            E      0       2       0       14.3%
CODE                 0      0       0       0        0.0%
DATA                 0      0      64      12        0.0%
ABS                  0      0      64       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Dec 20 12:12:27 2017

                           pc 0002                   __CFG_CP$OFF 0000                 ?_LCD_CmdWrite 0072  
                          _RD 0C60                            _WR 0C61                  ___awdiv@sign 0053  
                ?_displaypass 0056                            fsr 0004           ___wmul@multiplicand 004F  
              ?_LCD_DataWrite 0072          ??_Write_EEPROM_Price 0062                           l304 16E8  
                         l401 0995                           l321 173D                           l313 1725  
                         l410 09A3                           l402 098B                           l330 176B  
                         l322 1733                           l314 171B                           l250 0DFC  
                         l331 1752                           l308 1719                           l252 0E05  
                         l405 09A1                           l317 1731                           l309 1714  
                         l406 0997                           l342 178B                           l334 1777  
                         l326 173F                           l318 1727                           l270 0ED5  
                         l351 17A1                           l343 1783                           l335 176D  
                         l263 0E81                           l255 0E2D                           l511 020B  
                         l440 0A4E                           l432 09FD                           l424 09F7  
                         l360 17AD                           l352 179E                           l248 0D04  
                         l521 008D                           l281 0F37                           l610 059D  
                         l442 0A50                           l338 1781                           l274 0EE3  
                         l515 0079                           l443 0A52                           l419 09F2  
                         l363 17BF                           l355 17AB                           l347 178D  
                         l339 1779                           l291 0FD1                           l267 0E8F  
                         l259 0E3B                           l524 008B                           l508 0C11  
                         l444 0A54                           l436 0A00                           l428 09FA  
                         l380 17E9                           l372 17D5                           l364 17B7  
                         l356 17A3                           l284 0F7D                           l461 0A8A  
                         l453 0A84                           l445 0A56                           l381 17E1  
                         l373 17D2                           l277 0F29                           l518 0077  
                         l607 0489                           l535 06B3                           l471 0AAB  
                         l359 17B5                           l536 020E                           l528 008F  
                         l472 0AAD                           l448 0A7F                           l384 17F3  
                         l376 17DF                           l368 17C1                           l288 0F8B  
                         l561 03EB                           l473 0AAF                           l465 0A8D  
                         l457 0A87                           l393 097D                           l385 17EB  
                         l377 17D7                           l490 0AD3                           l482 0ACD  
                         l474 0AB1                           l394 0964                           l628 06B6  
                         l477 0ACA                           l469 0AA9                           l397 0989  
                         l389 17F5                           l750 122F                           l670 1FA1  
                         l590 0453                           l494 0AD6                           l486 0AD0  
                         l398 097F                           l672 1FBA                           l584 0487  
                         l568 03B7                           l587 040D                           l772 12F5  
                         l862 1FE9                           l697 14F6                           _GIE 005F  
                         _RA1 0029                           _RA2 002A                           _RB1 0031  
                         _RA3 002B                           _RB2 0032                           _RA4 002C  
                         _RC0 0038                           _RB3 0033                           _RA5 002D  
                         _RC1 0039                           _RB4 0034                           _RA6 002E  
                         _RC2 003A                           _RB5 0035                           _RA7 002F  
                         _RC3 003B                           _RD1 0041                           _RE0 0048  
                         _RB6 0036                           _RC4 003C                           _RD2 0042  
                         _RE1 0049                           _RC5 003D                           _RB7 0037  
                         _RD3 0043                           _RD4 0044                           _RC6 003E  
                         _RE2 004A                           _RD5 0045                           _RC7 003F  
                         _RE3 004B                           _RD6 0046                           _RD7 0047  
                __CFG_CPD$OFF 0000                           _pad 0385                           _set 0387  
                         _num 0024                           fsr0 0004                           _run 0383  
                         indf 0000                  ___awmod@sign 0053         __size_of_Write_EEPROM 0036  
                __CFG_LVP$OFF 0000                ?_LCD_BuildChar 0050                          l3210 1346  
                        l3204 132A                          l3206 1338                          l3214 1351  
                        l4102 0B38                          l3224 1272                          l3304 075A  
                        l4112 0B62                          l4016 095B                          l3306 06C3  
                        l3402 07B2                          l4106 0B4D                          l4114 0B7A  
                        l4042 09AD                          l3252 13C0                          l3180 1441  
                        l3308 07A1                          l3420 07DB                          l4204 0085  
                        l4060 0A03                          l4052 09EB                          l3246 13AA  
                        l3182 144F                          l3262 06E9                          l3414 07BF  
                        l3406 07B9                          l4062 0A1B                          l3192 1470  
                        l3416 07CD                          l3424 07E6                          l4320 0259  
                        l4144 0BFE                          l4072 0A58                          l3338 1FE1  
                        l3530 14D7                          l3290 0747                          l4322 025B  
                        l4330 027A                          l4090 0AFB                          l4082 0AB3  
                        l4074 0A70                          l5050 168F                          l3524 14C4  
                        l3188 1465                          l3284 0722                          l3268 0705  
                        l3364 1512                          l3428 07EE                          l4412 0367  
                        l4324 025D                          l4316 0253                          l4156 0CEB  
                        l5060 0ADE                          l5052 0A0A                          l4172 0FE7  
                        l3278 071C                          l3390 1551                          l3382 153E  
                        l3374 151A                          l3358 1507                          l4510 045D  
                        l4502 043D                          l5070 03A6                          l4422 037B  
                        l4350 02B2                          l4342 02A8                          l4318 0257  
                        l4174 0033                          l5062 0B69                          l4094 0B0E  
                        l4086 0AD9                          l4078 0A90                          l5054 0A5F  
                        l3536 14EA                          l3296 0756                          l3376 1528  
                        l5080 06A2                          l4512 0462                          l4520 0471  
                        l5072 03DA                          l4440 039C                          l4432 0388  
                        l5064 0269                          l4328 0262                          l4248 0160  
                        l4184 0057                          l4088 0AEF                          l5056 0A97  
                        l3800 0F27                          l3386 1549                          l4514 0467  
                        l5074 0442                          l4450 03BC                          l4434 038D  
                        l4418 0371                          l4426 0383                          l5066 02C7  
                        l4354 02B6                          l4346 02AE                          l4098 0B23  
                        l5058 0AB8                          l4612 05A3                          l4540 04B9  
                        l4604 0585                          l5076 0476                          l4516 046C  
                        l4508 0458                          l4452 03C1                          l4436 0392  
                        l4444 03A1                          l5068 0325                          l4380 030D  
                        l4364 02C0                          l4196 0071                          l4188 0064  
                        l3804 0F2B                          l3732 0E2F                          l4622 05D3  
                        l5078 058C                          l4454 03C6                          l4462 03D5  
                        l4438 0397                          l4382 0311                          l4390 031E  
                        l4358 02BA                          l4366 02D8                          l3910 170E  
                        l4632 0605                          l4552 04E4                          l4528 0490  
                        l4480 0417                          l4472 0402                          l4456 03CB  
                        l4384 0315                          l4392 0336                          l4368 02EC  
                        l3824 0F7B                          l3752 0E7F                          l4642 0637  
                        l4490 0424                          l4458 03D0                          l4386 0319  
                        l4378 0307                          l4652 0669                          l4564 050F  
                        l4492 0429                          l4484 041F                          l3860 1679  
                        l3828 0F7F                          l3780 0ED7                          l3756 0E83  
                        l4494 042E                          l4398 034D                          l3862 167D  
                        l4664 069B                          l4576 053A                          l4496 0433  
                        l3936 1749                          l3864 167F                          l3872 1688  
                        l3848 0FCF                          l3776 0ED3                          l4498 0438  
                        l3866 1681                          l3874 16A0                          l3964 1795  
                        l3868 1683                          l3990 17C9                          STR_1 10F0  
                        STR_2 1089                          STR_3 10CE                          STR_4 1077  
                        STR_5 10BD                          STR_6 1167                          STR_7 119A  
                        STR_8 1189                          STR_9 1205                          _IOCB 0096  
                        u2315 1444                          u2405 133E                          u2335 1450  
                        u2415 1347                          u2601 122D                          u2345 145C  
                        u2355 1466                          u2285 1F69                          u2445 1FA7  
                        u2525 073D                          u2295 1F86                          u2465 1396  
                        u2625 1FEA                          u2385 132D                          u2705 1529  
                        u2635 1FF1                          u2715 1535                          u2725 153F  
                        u2805 07D3                          u2815 07DC                          u2685 151D  
                        _INTE 005C                          _INTF 0059                          u4607 0A78  
                        u2785 07C2                          u4617 0BAF                          u4707 1588  
                        u4627 0C0C                          u4717 15A0                          u4637 0CE4  
                        u4557 080B                          u4727 1FAD                          u4647 0198  
                        u4567 0852                          u4737 1F01                          u4657 01B0  
                        u4577 087B                          u4747 1F1E                          u4667 01F4  
                        u4587 0942                          u4757 1F29                          u4677 022A  
                        u4597 0DE5                          u4687 0357                          u4697 03F3  
              ?_display_price 0069                          _WREN 0C62                          _WPUB 0095  
              ??_eeprom_write 005C                   display@data 0069                  __CFG_WRT$OFF 0000  
                        _coin 0384                          _main 0805                          _menu 0388  
          __size_of_LCD_Clear 0011                          btemp 007E                 ??_Read_EEPROM 0055  
               __CFG_BOREN$ON 0000                          start 0012                 __CFG_IESO$OFF 0000  
              ??_LCD_CmdWrite 004E                  _Write_EEPROM 1356              __end_of_LCD_Init 13FE  
                       ?_main 0072               __end_of___awdiv 1556                         _EEADR 010D  
                       STR_10 1210                         STR_11 1134                         STR_12 11DA  
                       STR_20 1101                         STR_13 10A9                         STR_21 109B  
                       STR_30 11F1                         STR_14 1112                         STR_22 10DF  
                       STR_31 11FB                         STR_15 11AA                         STR_23 1156  
                       STR_24 1214                         STR_32 120B                         STR_16 11BA  
                       STR_33 11E6                         STR_17 1123                         STR_25 10AC  
               __CFG_WDTE$OFF 0000                         STR_34 1145                         STR_26 1053  
                       STR_18 102F                         STR_35 1217                         STR_27 11CA  
                       STR_19 1065                         STR_36 1217                         STR_28 1178  
             __end_of___awmod 07F3                         STR_29 1204                         STR_37 1041  
                       STR_38 101C                         _CARRY 0018                         _ANSEL 0188  
             ___awdiv@divisor 004D               __end_of___lwdiv 1475                         i1l239 14AB  
             __end_of___lwmod 1356               ___awdiv@counter 0052                         _PORTA 0005  
                       _PORTB 0006                         _PORTC 0007                         _PORTD 0008  
                       _PORTE 0009                         _TRISA 0085                         _TRISB 0086  
                       _TRISC 0087                         _TRISD 0088                         _TRISE 0089  
                       _Qflag 0380                __CFG_FCMEN$OFF 0000               __end_of_display 1F48  
                       _check 0386               __end_of_dpowers 101C                         _count 007A  
                       _value 0028                         _motor 0381            __size_of_PORT_Init 0025  
                       _start 0020                         _rupee 007C                         _stock 0022  
             _Monitor_Balance 1297                __pbitbssCOMMON 0380                         pclath 000A  
                       status 0003                         wtemp0 007E               __end_of_sprintf 07A6  
        __size_of_COINCOUNTER 0043               _ToggleEpinOfLCD 1F17                __CFG_MCLRE$OFF 0000  
             __initialization 0015                  __end_of_main 06B9           __end_of_Read_EEPROM 1437  
             ??_LCD_DataWrite 004E                 ??_Set_Channel 004F                        ??_main 006B  
           __end_of_LCD_Clear 1F06                Write_EEPROM@a1 0062                Write_EEPROM@a2 005E  
             ??_LCD_BuildChar 0051               ??_display_price 006B                        _EEDATA 010C  
                      _EECON1 018C                        _EECON2 018D              ___awdiv@dividend 004F  
                      _ANSELH 0189                        i1l3440 12AC                        i1l3444 12B8  
                      i1l3436 12A1                        _INTCON 000B                        u295_25 149F  
                      _OSCCON 008F                        _TRISA0 0428                        _TRISA1 0429  
                      _TRISC0 0438                        _TRISA5 042D                        _TRISC1 0439  
                      _TRISA6 042E                        _TRISC2 043A                        _TRISA7 042F  
                      _TRISC3 043B                        _TRISB6 0436                        _TRISB7 0437  
         _STOCK_EMPTY_ROUTINE 1556                __CFG_PWRTE$OFF 0000          __size_of_eeprom_read 0024  
                      ___wmul 1FDD                     ??___awdiv 0051                     ??___awmod 0051  
                   ??___lwdiv 0051                     ??___lwmod 0059             __end_of_PORT_Init 1272  
             Set_Channel@data 004D                        _buzzer 1F9C              ___awdiv@quotient 0054  
             ___awmod@divisor 004D          __end_of_eeprom_write 1322               ___awmod@counter 0052  
                      _rupee1 003E                        _rupee2 003A                        _rupee3 0032  
                      _rupee4 002E                        _rupee5 002A                        _status 0389  
                   ??_display 006B          ?_STOCK_EMPTY_ROUTINE 0072          __size_of_displaypass 002F  
     __end_of_Monitor_Balance 12C3           __end_of_Set_Channel 14FB                        saved_w 007E  
                   ??_sprintf 005F          __end_of_LCD_CmdWrite 1F7F       __end_of_ToggleEpinOfLCD 1F2E  
     __end_of__initialization 002F                     ?_LCD_Init 0072               eeprom_read@addr 004E  
                 _Read_EEPROM 13FE                __pcstackCOMMON 0072                  __pidataBANK1 07F3  
       ??_STOCK_EMPTY_ROUTINE 0052             eeprom_write@value 005B                    __pbssBANK0 0020  
        Write_EEPROM_Price@a1 0063          Write_EEPROM_Price@a2 005E          Write_EEPROM_Price@a3 005F  
                  ??_LCD_Init 0054                 Read_EEPROM@b1 0057                 Read_EEPROM@b2 0053  
               Read_EEPROM@c1 0058                 Read_EEPROM@c2 005A                    __pmaintext 0805  
                     ?___wmul 004D                    __pintentry 0004           Read_EEPROM_Price@b1 0059  
         Read_EEPROM_Price@b2 0053           Read_EEPROM_Price@c1 005A           Read_EEPROM_Price@b3 0054  
         Read_EEPROM_Price@c2 005C           Read_EEPROM_Price@c3 005E                       ?_buzzer 004D  
                 _Set_Channel 14B8   __size_of_Write_EEPROM_Price 0060                    _coin_input 0382  
            ?_Monitor_Balance 0072                    __stringtab 1000              ?_ToggleEpinOfLCD 0072  
                  _escprocess 1FBC         __size_of_eeprom_write 0030                       ___awdiv 14FB  
                     ___awmod 07A6               __size_of___wmul 0023                       ___lwdiv 1437  
                     ___lwmod 1322                       _balance 0038               __size_of_buzzer 0020  
                     __ptext1 1FBC                       __ptext2 12C3                       __ptext3 07A6  
                     __ptext4 14FB                       __ptext5 1F48                       __ptext6 1F2E  
                     __ptext7 06BC                       __ptext8 15B5                       __ptext9 1356  
                     _display 1F2E                       _dpowers 1012              ___awmod@dividend 004F  
       __size_of_LCD_CmdWrite 001D            LCD_DisplayString@s 0050                     _LCD_Clear 1EF5  
                     _sprintf 06BC                       clrloop0 1222          end_of_initialization 002F  
               ??_COINCOUNTER 0074                LCD_BuildChar@i 0053                LCD_BuildChar@p 0050  
                _eeprom_write 12F2                       buzzer@a 004D                       buzzer@i 0050  
       Monitor_Balance@amount 0072                       psplit$0 E002D                       psplit$1 2D002E  
                     psplit$2 2E002F                       psplit$3 2F0030                       psplit$4 300031  
                __pstringtext 1000                  _LCD_CmdWrite 1F62         __end_of_LCD_DataWrite 1F9C  
                   _PORT_Init 124D                   _RupeeSymbol 00A0                    ?_LCD_Clear 0072  
        pnum$maintext_split_1 002D          pnum$maintext_split_2 002E          pnum$maintext_split_3 002F  
        pnum$maintext_split_4 0030          pnum$maintext_split_5 0031         __end_of_LCD_BuildChar 13C5  
           _Read_EEPROM_Price 1615         __end_of_display_price 1F62            ?_Read_EEPROM_Price 0053  
                  _stock_data 0042                 ??_eeprom_read 004D                  ?_Read_EEPROM 0053  
                 ?_escprocess 0072             __size_of_LCD_Init 0039           __end_of_COINCOUNTER 14B8  
         ??_Read_EEPROM_Price 0055                 ??_displaypass 0058                __end_of___wmul 2000  
              __end_of_buzzer 1FBC                    ?_PORT_Init 0072           start_initialization 0015  
        LCD_DataWrite@LCDChar 004F     __end_of_Read_EEPROM_Price 1679      __CFG_FOSC$INTRC_NOCLKOUT 0000  
 __end_of_STOCK_EMPTY_ROUTINE 15B5                      ??___wmul 0051           __end_of_eeprom_read 124D  
                  init_fetch0 1F06                 ?_Write_EEPROM 005E                   __pdataBANK1 00A0  
                ?_Set_Channel 004D                      ??_buzzer 004F                   __pbssCOMMON 007A  
         __end_of_displaypass 12F2                     ___latbits 0002                 __pcstackBANK0 004D  
         __size_of_escprocess 0021                   ??_LCD_Clear 0050              eeprom_write@addr 005D  
                 _COINCOUNTER 1475                   sprintf@flag 0063  Write_EEPROM_Price@data_value 0060  
                 sprintf@prec 0064              ___lwdiv@dividend 004F                ??_Write_EEPROM 0061  
                    ?___awdiv 004D                      ?___awmod 004D    __end_of_Write_EEPROM_Price 1615  
                    ?___lwdiv 004D                      ?___lwmod 0055                      ?_display 0069  
                   _dispvalue 0043                   ??_PORT_Init 004D             _LCD_DisplayString 1272  
  __size_of_Read_EEPROM_Price 0064                     _padcount1 0040                     _padcount2 003C  
                   _padcount3 0034                     _padcount4 0030                     _padcount5 002C  
            ___lwdiv@quotient 0052            ?_LCD_DisplayString 0050                      ?_sprintf 005B  
    __size_of_Monitor_Balance 002C             interrupt_function 0004                      _LCD_Init 13C5  
              ___wmul@product 0051           ??_LCD_DisplayString 0052                     clear_ram0 1221  
                 _eeprom_read 1229          __size_of_Read_EEPROM 0039      __size_of_ToggleEpinOfLCD 0017  
                 _displaypass 12C3                   __stringbase 1012             ___wmul@multiplier 004D  
   __end_of_LCD_DisplayString 1297                  ??_escprocess 0052             display_price@data 0069  
                pnum$maintext 000E              LCD_BuildChar@loc 0052              __size_of___awdiv 005B  
            __size_of___awmod 004D              __size_of___lwdiv 003E              __size_of___lwmod 0034  
          __end_of__stringtab 1012          __size_of_Set_Channel 0043              __size_of_display 001A  
                  sprintf@val 0065               ___lwdiv@divisor 004D                   _error_count 0026  
          __end_of_escprocess 1FDD               ___lwdiv@counter 0054                      __ptext10 12F2  
                    __ptext11 1322                      __ptext20 1229                      __ptext12 1437  
                    __ptext21 1FDD                      __ptext13 14B8                      __ptext22 124D  
                    __ptext14 1556                      __ptext23 13C5                      __ptext15 1F9C  
                    __ptext24 138C                      __ptext16 1272                      __ptext25 1F7F  
                    __ptext17 1EF5                      __ptext26 1F62                      __ptext18 1615  
                    __ptext27 1F17                      __ptext19 13FE                      __ptext28 1475  
                    __ptext29 1297             __CFG_BOR4V$BOR40V 0000          __end_of_Write_EEPROM 138C  
            __size_of_sprintf 00EA                      _padcount 0036                 __size_of_main FEB4  
      __size_of_LCD_DataWrite 001D             ??_Monitor_Balance 0074        __size_of_LCD_BuildChar 0039  
      Write_EEPROM@data_value 005F             ??_ToggleEpinOfLCD 004D        __size_of_display_price 001A  
  __size_of_LCD_DisplayString 0025           LCD_CmdWrite@Command 004F                      init_ram0 1F0A  
                    intlevel1 0000                     sprintf@ap 0062                     sprintf@sp 0067  
                ?_COINCOUNTER 0072              ___lwmod@dividend 0057                     stringcode 100A  
               _LCD_DataWrite 1F7F                    _OPTION_REG 0081                      sprintf@c 0068  
                    sprintf@f 005B  __size_of_STOCK_EMPTY_ROUTINE 005F               ___lwmod@divisor 0055  
             ___lwmod@counter 005A                      stringtab 1000            _Write_EEPROM_Price 15B5  
               _LCD_BuildChar 138C                 _display_price 1F48                 ?_eeprom_write 005B  
         ?_Write_EEPROM_Price 005E                  ?_eeprom_read 0072               displaypass@data 0056  
