Microchip MPLAB XC8 Compiler V1.44 ()

Linker command line:

--edf=C:\Program Files\Microchip\xc8\v1.44\dat\en_msgs.txt -cs \
  -h+dist/default/production\lcd8676.X.production.sym \
  --cmf=dist/default/production\lcd8676.X.production.cmf -z -Q16F676 \
  -oC:\Users\admin\AppData\Local\Temp\sit0.2 \
  -Mdist/default/production/lcd8676.X.production.map -E1 -ver=XC8 \
  -ASTACK=034h-05dh -pstack=STACK -ACODE=00h-03FEh -ASTRCODE=00h-03FEh \
  -ASTRING=00h-0FFhx3,0300h-03FEh -ACONST=00h-0FFhx3,0300h-03FEh \
  -AENTRY=00h-0FFhx3,0300h-03FEh -ABANK0=020h-05Dh -ARAM=020h-05Dh \
  -AABS1=020h-05Fh -ACOMMON=05Eh-05Fh -ASFR0=00h-01Fh -ASFR1=080h-0DDh \
  -preset_vec=00h,intentry,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-07Fh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -posccal=03FFh -DCODE=2 -DSTRCODE=2 \
  -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\admin\AppData\Local\Temp\sit0.obj \
  dist/default/production\lcd8676.X.production.obj 

Object code version is 3.11

Machine type is 16F676



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\admin\AppData\Local\Temp\sit0.obj
                end_init                              0        0        1        0       0
                config                             2007     2007        1     400E       0
dist/default/production\lcd8676.X.production.obj
                cinit                               3F2      3F2        D      7E4       0
                text6                               399      399       59      732       0
                text5                               31B      31B       12      636       0
                text4                               36A      36A       2F      6D4       0
                text3                               32D      32D       12      65A       0
                text2                               33F      33F       13      67E       0
                text1                               352      352       18      6A4       0
                maintext                            30A      30A       11      614       0
                cstackBANK0                          2A       2A        A       20       1
                bssBANK0                             20       20        A       20       1
                strings                               1        1        C        2       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              0        0        1         0
                cinit                               3F2      3F2        D         0
                text6                               399      399       59         0
                text5                               31B      31B       12         0
                text4                               36A      36A       2F         0
                text3                               32D      32D       12         0
                text2                               33F      33F       13         0
                text1                               352      352       18         0
                maintext                            30A      30A       11         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                               1        1        C         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   BANK0          
                cstackBANK0                          2A       2A        A         1
                bssBANK0                             20       20        A         1

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               5E       5E        2         1

        CLASS   COMMON         

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK1          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                strings                        000001  00000C  00000D         2       0  STRING      2
                bssBANK0                       000020  000014  000034        20       1  BANK0       1
                maintext                       00030A  000011  00031B       614       0  CODE        2
                text5                          00031B  000012  00032D       636       0  CODE        2
                text3                          00032D  000012  00033F       65A       0  CODE        2
                text2                          00033F  000013  000352       67E       0  CODE        2
                text1                          000352  000018  00036A       6A4       0  CODE        2
                text4                          00036A  00002F  000399       6D4       0  CODE        2
                text6                          000399  000059  0003F2       732       0  CODE        2
                cinit                          0003F2  00000D  0003FF       7E4       0  CODE        2
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0034-005D             2A           1
        CODE             000D-0309            2FD           2
        CONST            000D-0309            100           2
        EEDATA           2100-217F             80           2
        ENTRY            000D-0309            100           2
        IDLOC            2000-2003              4           2
        RAM              0034-005D             2A           1
        SFR0             0000-001F             20           1
        SFR1             0080-00DD             5E           1
        STACK            0034-005D             2A           1
        STRCODE          000D-0309            2FD           2
        STRING           000D-0309            100           2

                                  Symbol Table

Lcd8_Cmd@a                  cstackBANK0  0030
Lcd8_Port@a                 cstackBANK0  002D
Lcd8_Port@i                 cstackBANK0  002B
Lcd8_Set_Cursor@a           cstackBANK0  0032
Lcd8_Set_Cursor@b           cstackBANK0  0031
Lcd8_Write_Char@a           cstackBANK0  0030
Lcd8_Write_String@a         cstackBANK0  0033
Lcd8_Write_String@i         cstackBANK0  0031
_ANSEL                      (abs)        0091
_CMCON                      (abs)        0019
_D                          bssBANK0     0020
_Lcd8_Cmd                   text5        031B
_Lcd8_Init                  text4        036A
_Lcd8_Port                  text6        0399
_Lcd8_Set_Cursor            text3        032D
_Lcd8_Write_Char            text2        033F
_Lcd8_Write_String          text1        0352
_RC0                        (abs)        0038
_RC1                        (abs)        0039
_RC4                        (abs)        003C
_RC5                        (abs)        003D
_TRISA                      (abs)        0085
_TRISC                      (abs)        0087
__CFG_BOREN$ON              (abs)        0000
__CFG_CP$OFF                (abs)        0000
__CFG_CPD$OFF               (abs)        0000
__CFG_FOSC$INTRCIO          (abs)        0000
__CFG_MCLRE$OFF             (abs)        0000
__CFG_PWRTE$OFF             (abs)        0000
__CFG_WDTE$OFF              (abs)        0000
__Habs1                     abs1         07FE
__Hbank0                    bank0        07FE
__Hbank1                    bank1        07FE
__HbssBANK0                 bssBANK0     07FE
__Hcinit                    cinit        03FF
__Hclrtext                  clrtext      07FE
__Hcode                     code         07FE
__Hcommon                   common       07FE
__Hconfig                   config       2008
__HcstackBANK0              cstackBANK0  07FE
__HcstackCOMMON             cstackCOMMON 07FE
__Heeprom_data              eeprom_data  0000
__Hend_init                 end_init     0001
__Hfunctab                  functab      0000
__Hidloc                    idloc        0000
__Hinit                     init         0000
__Hintentry                 intentry     0000
__Hmaintext                 maintext     07FE
__Hosccal                   osccal       03FF
__Hpowerup                  powerup      0000
__Hram                      ram          07FE
__Hreset_vec                reset_vec    0000
__Hsfr0                     sfr0         07FE
__Hsfr1                     sfr1         07FE
__Hspace_0                  (abs)        2008
__Hspace_1                  (abs)        07FE
__Hspace_2                  (abs)        0000
__Hspace_3                  (abs)        0000
__Hstack                    stack        0000
__Hstrings                  strings      07FE
__Htext                     text         07FE
__Labs1                     abs1         07FE
__Lbank0                    bank0        07FE
__Lbank1                    bank1        07FE
__LbssBANK0                 bssBANK0     07FE
__Lcinit                    cinit        03F2
__Lclrtext                  clrtext      07FE
__Lcode                     code         07FE
__Lcommon                   common       07FE
__Lconfig                   config       2007
__LcstackBANK0              cstackBANK0  07FE
__LcstackCOMMON             cstackCOMMON 07FE
__Leeprom_data              eeprom_data  0000
__Lend_init                 end_init     0000
__Lfunctab                  functab      0000
__Lidloc                    idloc        0000
__Linit                     init         0000
__Lintentry                 intentry     0000
__Lmaintext                 maintext     07FE
__Losccal                   osccal       03FF
__Lpowerup                  powerup      0000
__Lram                      ram          07FE
__Lreset_vec                reset_vec    0000
__Lsfr0                     sfr0         07FE
__Lsfr1                     sfr1         07FE
__Lspace_0                  (abs)        0000
__Lspace_1                  (abs)        0000
__Lspace_2                  (abs)        0000
__Lspace_3                  (abs)        0000
__Lstack                    stack        0000
__Lstrings                  strings      07FE
__Ltext                     text         07FE
__S0                        (abs)        2008
__S1                        (abs)        0034
__S2                        (abs)        0000
__S3                        (abs)        0000
___int_sp                   stack        0000
___latbits                  (abs)        0000
___osccal_val               osccal       03FF
___sp                       stack        0000
__end_of_Lcd8_Cmd           text5        032D
__end_of_Lcd8_Init          text4        0399
__end_of_Lcd8_Port          text6        03F2
__end_of_Lcd8_Set_Cursor    text3        033F
__end_of_Lcd8_Write_Char    text2        0352
__end_of_Lcd8_Write_String  text1        036A
__end_of__initialization    cinit        03FD
__end_of__stringtab         strings      0007
__end_of_main               maintext     031B
__initialization            cinit        03F2
__pbssBANK0                 bssBANK0     0020
__pcstackBANK0              cstackBANK0  002A
__pcstackCOMMON             cstackCOMMON 0000
__pmaintext                 maintext     030A
__pstrings                  strings      0001
__ptext1                    text1        0352
__ptext2                    text2        033F
__ptext3                    text3        032D
__ptext4                    text4        036A
__ptext5                    text5        031B
__ptext6                    text6        0399
__size_of_Lcd8_Cmd          (abs)        0000
__size_of_Lcd8_Init         (abs)        0000
__size_of_Lcd8_Port         (abs)        0000
__size_of_Lcd8_Set_Cursor   (abs)        0000
__size_of_Lcd8_Write_Char   (abs)        0000
__size_of_Lcd8_Write_String (abs)        0000
__size_of_main              (abs)        0000
__stringbase                strings      0006
__stringtab                 strings      0001
_main                       maintext     030A
btemp                       (abs)        005E
end_of_initialization       cinit        03FD
intlevel0                   functab      0000
intlevel1                   functab      0000
intlevel2                   functab      0000
intlevel3                   functab      0000
intlevel4                   functab      0000
intlevel5                   functab      0000
reset_vec                   reset_vec    0000
stackhi                     (abs)        0000
stacklo                     (abs)        0000
start                       init         0000
start_initialization        cinit        03F2
wtemp0                      (abs)        005E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 161 in file "LCDCHECK.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       0
      Totals:         0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd8_Init
		_Lcd8_Set_Cursor
		_Lcd8_Write_String
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _Lcd8_Write_String *****************
 Defined at:
		line 144 in file "LCDCHECK.c"
 Parameters:    Size  Location     Type
  a               1    wreg     PTR unsigned char 
		 -> STR_1(6), 
 Auto vars:     Size  Location     Type
  a               1    9[BANK0 ] PTR unsigned char 
		 -> STR_1(6), 
  i               2    7[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       3
      Temps:          0       0
      Totals:         0       3
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd8_Write_Char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd8_Write_Char *****************
 Defined at:
		line 135 in file "LCDCHECK.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    6[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       1
      Temps:          0       2
      Totals:         0       3
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd8_Port
 This function is called by:
		_Lcd8_Write_String
 This function uses a non-reentrant model


 *************** function _Lcd8_Set_Cursor *****************
 Defined at:
		line 109 in file "LCDCHECK.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  b               1    7[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  a               1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       1
      Locals:         0       1
      Temps:          0       0
      Totals:         0       2
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd8_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd8_Init *****************
 Defined at:
		line 117 in file "LCDCHECK.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       2
      Totals:         0       2
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd8_Cmd
		_Lcd8_Port
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd8_Cmd *****************
 Defined at:
		line 95 in file "LCDCHECK.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    6[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       1
      Temps:          0       2
      Totals:         0       3
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd8_Port
 This function is called by:
		_Lcd8_Set_Cursor
		_Lcd8_Init
		_Lcd8_Clear
		_Lcd8_Shift_Right
		_Lcd8_Shift_Left
 This function uses a non-reentrant model


 *************** function _Lcd8_Port *****************
 Defined at:
		line 40 in file "LCDCHECK.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[BANK0 ] unsigned char 
  i               2    1[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       3
      Temps:          0       1
      Totals:         0       4
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Lcd8_Cmd
		_Lcd8_Init
		_Lcd8_Write_Char
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
LCDCHECK.c
		_Lcd8_Write_String		CODE           	0352	0000	25
		_Lcd8_Set_Cursor		CODE           	032D	0000	19
		_Lcd8_Init     		CODE           	036A	0000	48
		_main          		CODE           	030A	0000	18
		_Lcd8_Port     		CODE           	0399	0000	90
		_Lcd8_Write_Char		CODE           	033F	0000	20
		_Lcd8_Cmd      		CODE           	031B	0000	19

LCDCHECK.c estimated size: 239

shared
		__stringtab    		STRING         	0001	0000	7
		__initialization		CODE           	03F2	0000	12

shared estimated size: 19

