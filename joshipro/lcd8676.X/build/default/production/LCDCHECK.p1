Version 3.2 HI-TECH Software Intermediate Code
"1551 C:\Program Files\Microchip\xc8\v1.44\include\pic16f676.h
[v _RC1 `Vb ~T0 @X0 0 e@57 ]
[v F642 `(v ~T0 @X0 1 tf1`ul ]
"153 C:\Program Files\Microchip\xc8\v1.44\include\pic.h
[v __delay `JF642 ~T0 @X0 0 e ]
[p i __delay ]
"1549 C:\Program Files\Microchip\xc8\v1.44\include\pic16f676.h
[v _RC0 `Vb ~T0 @X0 0 e@56 ]
"1557
[v _RC4 `Vb ~T0 @X0 0 e@60 ]
"1559
[v _RC5 `Vb ~T0 @X0 0 e@61 ]
[p mainexit ]
"971
[v _ANSEL `Vuc ~T0 @X0 0 e@145 ]
"496
[v _CMCON `Vuc ~T0 @X0 0 e@25 ]
"729
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"779
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic.h: 9: extern unsigned char __osccal_val(void);
[; ;pic16f676.h: 50: extern volatile unsigned char INDF @ 0x000;
"52 C:\Program Files\Microchip\xc8\v1.44\include\pic16f676.h
[; ;pic16f676.h: 52: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f676.h: 57: extern volatile unsigned char TMR0 @ 0x001;
"59
[; ;pic16f676.h: 59: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f676.h: 64: extern volatile unsigned char PCL @ 0x002;
"66
[; ;pic16f676.h: 66: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f676.h: 71: extern volatile unsigned char STATUS @ 0x003;
"73
[; ;pic16f676.h: 73: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f676.h: 76: typedef union {
[; ;pic16f676.h: 77: struct {
[; ;pic16f676.h: 78: unsigned C :1;
[; ;pic16f676.h: 79: unsigned DC :1;
[; ;pic16f676.h: 80: unsigned Z :1;
[; ;pic16f676.h: 81: unsigned nPD :1;
[; ;pic16f676.h: 82: unsigned nTO :1;
[; ;pic16f676.h: 83: unsigned RP :2;
[; ;pic16f676.h: 84: unsigned IRP :1;
[; ;pic16f676.h: 85: };
[; ;pic16f676.h: 86: struct {
[; ;pic16f676.h: 87: unsigned :5;
[; ;pic16f676.h: 88: unsigned RP0 :1;
[; ;pic16f676.h: 89: unsigned RP1 :1;
[; ;pic16f676.h: 90: };
[; ;pic16f676.h: 91: struct {
[; ;pic16f676.h: 92: unsigned CARRY :1;
[; ;pic16f676.h: 93: unsigned :1;
[; ;pic16f676.h: 94: unsigned ZERO :1;
[; ;pic16f676.h: 95: };
[; ;pic16f676.h: 96: } STATUSbits_t;
[; ;pic16f676.h: 97: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f676.h: 157: extern volatile unsigned char FSR @ 0x004;
"159
[; ;pic16f676.h: 159: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f676.h: 164: extern volatile unsigned char PORTA @ 0x005;
"166
[; ;pic16f676.h: 166: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f676.h: 169: typedef union {
[; ;pic16f676.h: 170: struct {
[; ;pic16f676.h: 171: unsigned RA0 :1;
[; ;pic16f676.h: 172: unsigned RA1 :1;
[; ;pic16f676.h: 173: unsigned RA2 :1;
[; ;pic16f676.h: 174: unsigned RA3 :1;
[; ;pic16f676.h: 175: unsigned RA4 :1;
[; ;pic16f676.h: 176: unsigned RA5 :1;
[; ;pic16f676.h: 177: };
[; ;pic16f676.h: 178: } PORTAbits_t;
[; ;pic16f676.h: 179: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f676.h: 214: extern volatile unsigned char PORTC @ 0x007;
"216
[; ;pic16f676.h: 216: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f676.h: 219: typedef union {
[; ;pic16f676.h: 220: struct {
[; ;pic16f676.h: 221: unsigned RC0 :1;
[; ;pic16f676.h: 222: unsigned RC1 :1;
[; ;pic16f676.h: 223: unsigned RC2 :1;
[; ;pic16f676.h: 224: unsigned RC3 :1;
[; ;pic16f676.h: 225: unsigned RC4 :1;
[; ;pic16f676.h: 226: unsigned RC5 :1;
[; ;pic16f676.h: 227: };
[; ;pic16f676.h: 228: } PORTCbits_t;
[; ;pic16f676.h: 229: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f676.h: 264: extern volatile unsigned char PCLATH @ 0x00A;
"266
[; ;pic16f676.h: 266: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f676.h: 269: typedef union {
[; ;pic16f676.h: 270: struct {
[; ;pic16f676.h: 271: unsigned PCLATH :5;
[; ;pic16f676.h: 272: };
[; ;pic16f676.h: 273: } PCLATHbits_t;
[; ;pic16f676.h: 274: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f676.h: 284: extern volatile unsigned char INTCON @ 0x00B;
"286
[; ;pic16f676.h: 286: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f676.h: 289: typedef union {
[; ;pic16f676.h: 290: struct {
[; ;pic16f676.h: 291: unsigned RAIF :1;
[; ;pic16f676.h: 292: unsigned INTF :1;
[; ;pic16f676.h: 293: unsigned T0IF :1;
[; ;pic16f676.h: 294: unsigned RAIE :1;
[; ;pic16f676.h: 295: unsigned INTE :1;
[; ;pic16f676.h: 296: unsigned T0IE :1;
[; ;pic16f676.h: 297: unsigned PEIE :1;
[; ;pic16f676.h: 298: unsigned GIE :1;
[; ;pic16f676.h: 299: };
[; ;pic16f676.h: 300: struct {
[; ;pic16f676.h: 301: unsigned :2;
[; ;pic16f676.h: 302: unsigned TMR0IF :1;
[; ;pic16f676.h: 303: unsigned :2;
[; ;pic16f676.h: 304: unsigned TMR0IE :1;
[; ;pic16f676.h: 305: };
[; ;pic16f676.h: 306: } INTCONbits_t;
[; ;pic16f676.h: 307: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f676.h: 362: extern volatile unsigned char PIR1 @ 0x00C;
"364
[; ;pic16f676.h: 364: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f676.h: 367: typedef union {
[; ;pic16f676.h: 368: struct {
[; ;pic16f676.h: 369: unsigned TMR1IF :1;
[; ;pic16f676.h: 370: unsigned :2;
[; ;pic16f676.h: 371: unsigned CMIF :1;
[; ;pic16f676.h: 372: unsigned :2;
[; ;pic16f676.h: 373: unsigned ADIF :1;
[; ;pic16f676.h: 374: unsigned EEIF :1;
[; ;pic16f676.h: 375: };
[; ;pic16f676.h: 376: struct {
[; ;pic16f676.h: 377: unsigned T1IF :1;
[; ;pic16f676.h: 378: };
[; ;pic16f676.h: 379: } PIR1bits_t;
[; ;pic16f676.h: 380: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f676.h: 410: extern volatile unsigned short TMR1 @ 0x00E;
"412
[; ;pic16f676.h: 412: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f676.h: 417: extern volatile unsigned char TMR1L @ 0x00E;
"419
[; ;pic16f676.h: 419: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f676.h: 424: extern volatile unsigned char TMR1H @ 0x00F;
"426
[; ;pic16f676.h: 426: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f676.h: 431: extern volatile unsigned char T1CON @ 0x010;
"433
[; ;pic16f676.h: 433: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f676.h: 436: typedef union {
[; ;pic16f676.h: 437: struct {
[; ;pic16f676.h: 438: unsigned TMR1ON :1;
[; ;pic16f676.h: 439: unsigned TMR1CS :1;
[; ;pic16f676.h: 440: unsigned nT1SYNC :1;
[; ;pic16f676.h: 441: unsigned T1OSCEN :1;
[; ;pic16f676.h: 442: unsigned T1CKPS :2;
[; ;pic16f676.h: 443: unsigned TMR1GE :1;
[; ;pic16f676.h: 444: };
[; ;pic16f676.h: 445: struct {
[; ;pic16f676.h: 446: unsigned :4;
[; ;pic16f676.h: 447: unsigned T1CKPS0 :1;
[; ;pic16f676.h: 448: unsigned T1CKPS1 :1;
[; ;pic16f676.h: 449: };
[; ;pic16f676.h: 450: } T1CONbits_t;
[; ;pic16f676.h: 451: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f676.h: 496: extern volatile unsigned char CMCON @ 0x019;
"498
[; ;pic16f676.h: 498: asm("CMCON equ 019h");
[; <" CMCON equ 019h ;# ">
[; ;pic16f676.h: 501: typedef union {
[; ;pic16f676.h: 502: struct {
[; ;pic16f676.h: 503: unsigned CM :3;
[; ;pic16f676.h: 504: unsigned CIS :1;
[; ;pic16f676.h: 505: unsigned CINV :1;
[; ;pic16f676.h: 506: unsigned :1;
[; ;pic16f676.h: 507: unsigned COUT :1;
[; ;pic16f676.h: 508: };
[; ;pic16f676.h: 509: struct {
[; ;pic16f676.h: 510: unsigned CM0 :1;
[; ;pic16f676.h: 511: unsigned CM1 :1;
[; ;pic16f676.h: 512: unsigned CM2 :1;
[; ;pic16f676.h: 513: };
[; ;pic16f676.h: 514: } CMCONbits_t;
[; ;pic16f676.h: 515: extern volatile CMCONbits_t CMCONbits @ 0x019;
[; ;pic16f676.h: 555: extern volatile unsigned char ADRESH @ 0x01E;
"557
[; ;pic16f676.h: 557: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f676.h: 562: extern volatile unsigned char ADCON0 @ 0x01F;
"564
[; ;pic16f676.h: 564: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f676.h: 567: typedef union {
[; ;pic16f676.h: 568: struct {
[; ;pic16f676.h: 569: unsigned ADON :1;
[; ;pic16f676.h: 570: unsigned GO_nDONE :1;
[; ;pic16f676.h: 571: unsigned CHS :3;
[; ;pic16f676.h: 572: unsigned :1;
[; ;pic16f676.h: 573: unsigned VCFG :1;
[; ;pic16f676.h: 574: unsigned ADFM :1;
[; ;pic16f676.h: 575: };
[; ;pic16f676.h: 576: struct {
[; ;pic16f676.h: 577: unsigned :1;
[; ;pic16f676.h: 578: unsigned GO :1;
[; ;pic16f676.h: 579: unsigned CHS0 :1;
[; ;pic16f676.h: 580: unsigned CHS1 :1;
[; ;pic16f676.h: 581: unsigned CHS2 :1;
[; ;pic16f676.h: 582: };
[; ;pic16f676.h: 583: struct {
[; ;pic16f676.h: 584: unsigned :1;
[; ;pic16f676.h: 585: unsigned nDONE :1;
[; ;pic16f676.h: 586: };
[; ;pic16f676.h: 587: struct {
[; ;pic16f676.h: 588: unsigned :1;
[; ;pic16f676.h: 589: unsigned GO_DONE :1;
[; ;pic16f676.h: 590: };
[; ;pic16f676.h: 591: } ADCON0bits_t;
[; ;pic16f676.h: 592: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f676.h: 652: extern volatile unsigned char OPTION_REG @ 0x081;
"654
[; ;pic16f676.h: 654: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f676.h: 657: typedef union {
[; ;pic16f676.h: 658: struct {
[; ;pic16f676.h: 659: unsigned PS :3;
[; ;pic16f676.h: 660: unsigned PSA :1;
[; ;pic16f676.h: 661: unsigned T0SE :1;
[; ;pic16f676.h: 662: unsigned T0CS :1;
[; ;pic16f676.h: 663: unsigned INTEDG :1;
[; ;pic16f676.h: 664: unsigned nRAPU :1;
[; ;pic16f676.h: 665: };
[; ;pic16f676.h: 666: struct {
[; ;pic16f676.h: 667: unsigned PS0 :1;
[; ;pic16f676.h: 668: unsigned PS1 :1;
[; ;pic16f676.h: 669: unsigned PS2 :1;
[; ;pic16f676.h: 670: unsigned :4;
[; ;pic16f676.h: 671: unsigned nGPPU :1;
[; ;pic16f676.h: 672: };
[; ;pic16f676.h: 673: } OPTION_REGbits_t;
[; ;pic16f676.h: 674: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f676.h: 729: extern volatile unsigned char TRISA @ 0x085;
"731
[; ;pic16f676.h: 731: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f676.h: 734: typedef union {
[; ;pic16f676.h: 735: struct {
[; ;pic16f676.h: 736: unsigned TRISA0 :1;
[; ;pic16f676.h: 737: unsigned TRISA1 :1;
[; ;pic16f676.h: 738: unsigned TRISA2 :1;
[; ;pic16f676.h: 739: unsigned TRISA3 :1;
[; ;pic16f676.h: 740: unsigned TRISA4 :1;
[; ;pic16f676.h: 741: unsigned TRISA5 :1;
[; ;pic16f676.h: 742: };
[; ;pic16f676.h: 743: } TRISAbits_t;
[; ;pic16f676.h: 744: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f676.h: 779: extern volatile unsigned char TRISC @ 0x087;
"781
[; ;pic16f676.h: 781: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f676.h: 784: typedef union {
[; ;pic16f676.h: 785: struct {
[; ;pic16f676.h: 786: unsigned TRISC0 :1;
[; ;pic16f676.h: 787: unsigned TRISC1 :1;
[; ;pic16f676.h: 788: unsigned TRISC2 :1;
[; ;pic16f676.h: 789: unsigned TRISC3 :1;
[; ;pic16f676.h: 790: unsigned TRISC4 :1;
[; ;pic16f676.h: 791: unsigned TRISC5 :1;
[; ;pic16f676.h: 792: };
[; ;pic16f676.h: 793: } TRISCbits_t;
[; ;pic16f676.h: 794: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f676.h: 829: extern volatile unsigned char PIE1 @ 0x08C;
"831
[; ;pic16f676.h: 831: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f676.h: 834: typedef union {
[; ;pic16f676.h: 835: struct {
[; ;pic16f676.h: 836: unsigned TMR1IE :1;
[; ;pic16f676.h: 837: unsigned :2;
[; ;pic16f676.h: 838: unsigned CMIE :1;
[; ;pic16f676.h: 839: unsigned :2;
[; ;pic16f676.h: 840: unsigned ADIE :1;
[; ;pic16f676.h: 841: unsigned EEIE :1;
[; ;pic16f676.h: 842: };
[; ;pic16f676.h: 843: struct {
[; ;pic16f676.h: 844: unsigned T1IE :1;
[; ;pic16f676.h: 845: };
[; ;pic16f676.h: 846: } PIE1bits_t;
[; ;pic16f676.h: 847: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f676.h: 877: extern volatile unsigned char PCON @ 0x08E;
"879
[; ;pic16f676.h: 879: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f676.h: 882: typedef union {
[; ;pic16f676.h: 883: struct {
[; ;pic16f676.h: 884: unsigned nBOR :1;
[; ;pic16f676.h: 885: unsigned nPOR :1;
[; ;pic16f676.h: 886: };
[; ;pic16f676.h: 887: struct {
[; ;pic16f676.h: 888: unsigned nBOD :1;
[; ;pic16f676.h: 889: };
[; ;pic16f676.h: 890: } PCONbits_t;
[; ;pic16f676.h: 891: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f676.h: 911: extern volatile unsigned char OSCCAL @ 0x090;
"913
[; ;pic16f676.h: 913: asm("OSCCAL equ 090h");
[; <" OSCCAL equ 090h ;# ">
[; ;pic16f676.h: 916: typedef union {
[; ;pic16f676.h: 917: struct {
[; ;pic16f676.h: 918: unsigned :2;
[; ;pic16f676.h: 919: unsigned CAL :6;
[; ;pic16f676.h: 920: };
[; ;pic16f676.h: 921: struct {
[; ;pic16f676.h: 922: unsigned :2;
[; ;pic16f676.h: 923: unsigned CAL0 :1;
[; ;pic16f676.h: 924: unsigned CAL1 :1;
[; ;pic16f676.h: 925: unsigned CAL2 :1;
[; ;pic16f676.h: 926: unsigned CAL3 :1;
[; ;pic16f676.h: 927: unsigned CAL4 :1;
[; ;pic16f676.h: 928: unsigned CAL5 :1;
[; ;pic16f676.h: 929: };
[; ;pic16f676.h: 930: } OSCCALbits_t;
[; ;pic16f676.h: 931: extern volatile OSCCALbits_t OSCCALbits @ 0x090;
[; ;pic16f676.h: 971: extern volatile unsigned char ANSEL @ 0x091;
"973
[; ;pic16f676.h: 973: asm("ANSEL equ 091h");
[; <" ANSEL equ 091h ;# ">
[; ;pic16f676.h: 976: typedef union {
[; ;pic16f676.h: 977: struct {
[; ;pic16f676.h: 978: unsigned ANS0 :1;
[; ;pic16f676.h: 979: unsigned ANS1 :1;
[; ;pic16f676.h: 980: unsigned ANS2 :1;
[; ;pic16f676.h: 981: unsigned ANS3 :1;
[; ;pic16f676.h: 982: unsigned ANS4 :1;
[; ;pic16f676.h: 983: unsigned ANS5 :1;
[; ;pic16f676.h: 984: unsigned ANS6 :1;
[; ;pic16f676.h: 985: unsigned ANS7 :1;
[; ;pic16f676.h: 986: };
[; ;pic16f676.h: 987: } ANSELbits_t;
[; ;pic16f676.h: 988: extern volatile ANSELbits_t ANSELbits @ 0x091;
[; ;pic16f676.h: 1033: extern volatile unsigned char WPUA @ 0x095;
"1035
[; ;pic16f676.h: 1035: asm("WPUA equ 095h");
[; <" WPUA equ 095h ;# ">
[; ;pic16f676.h: 1038: extern volatile unsigned char WPU @ 0x095;
"1040
[; ;pic16f676.h: 1040: asm("WPU equ 095h");
[; <" WPU equ 095h ;# ">
[; ;pic16f676.h: 1043: typedef union {
[; ;pic16f676.h: 1044: struct {
[; ;pic16f676.h: 1045: unsigned WPUA0 :1;
[; ;pic16f676.h: 1046: unsigned WPUA1 :1;
[; ;pic16f676.h: 1047: unsigned WPUA2 :1;
[; ;pic16f676.h: 1048: unsigned :1;
[; ;pic16f676.h: 1049: unsigned WPUA4 :1;
[; ;pic16f676.h: 1050: unsigned WPUA5 :1;
[; ;pic16f676.h: 1051: };
[; ;pic16f676.h: 1052: } WPUAbits_t;
[; ;pic16f676.h: 1053: extern volatile WPUAbits_t WPUAbits @ 0x095;
[; ;pic16f676.h: 1081: typedef union {
[; ;pic16f676.h: 1082: struct {
[; ;pic16f676.h: 1083: unsigned WPUA0 :1;
[; ;pic16f676.h: 1084: unsigned WPUA1 :1;
[; ;pic16f676.h: 1085: unsigned WPUA2 :1;
[; ;pic16f676.h: 1086: unsigned :1;
[; ;pic16f676.h: 1087: unsigned WPUA4 :1;
[; ;pic16f676.h: 1088: unsigned WPUA5 :1;
[; ;pic16f676.h: 1089: };
[; ;pic16f676.h: 1090: } WPUbits_t;
[; ;pic16f676.h: 1091: extern volatile WPUbits_t WPUbits @ 0x095;
[; ;pic16f676.h: 1121: extern volatile unsigned char IOCA @ 0x096;
"1123
[; ;pic16f676.h: 1123: asm("IOCA equ 096h");
[; <" IOCA equ 096h ;# ">
[; ;pic16f676.h: 1126: extern volatile unsigned char IOC @ 0x096;
"1128
[; ;pic16f676.h: 1128: asm("IOC equ 096h");
[; <" IOC equ 096h ;# ">
[; ;pic16f676.h: 1131: typedef union {
[; ;pic16f676.h: 1132: struct {
[; ;pic16f676.h: 1133: unsigned IOCA0 :1;
[; ;pic16f676.h: 1134: unsigned IOCA1 :1;
[; ;pic16f676.h: 1135: unsigned IOCA2 :1;
[; ;pic16f676.h: 1136: unsigned IOCA3 :1;
[; ;pic16f676.h: 1137: unsigned IOCA4 :1;
[; ;pic16f676.h: 1138: unsigned IOCA5 :1;
[; ;pic16f676.h: 1139: };
[; ;pic16f676.h: 1140: } IOCAbits_t;
[; ;pic16f676.h: 1141: extern volatile IOCAbits_t IOCAbits @ 0x096;
[; ;pic16f676.h: 1174: typedef union {
[; ;pic16f676.h: 1175: struct {
[; ;pic16f676.h: 1176: unsigned IOCA0 :1;
[; ;pic16f676.h: 1177: unsigned IOCA1 :1;
[; ;pic16f676.h: 1178: unsigned IOCA2 :1;
[; ;pic16f676.h: 1179: unsigned IOCA3 :1;
[; ;pic16f676.h: 1180: unsigned IOCA4 :1;
[; ;pic16f676.h: 1181: unsigned IOCA5 :1;
[; ;pic16f676.h: 1182: };
[; ;pic16f676.h: 1183: } IOCbits_t;
[; ;pic16f676.h: 1184: extern volatile IOCbits_t IOCbits @ 0x096;
[; ;pic16f676.h: 1219: extern volatile unsigned char VRCON @ 0x099;
"1221
[; ;pic16f676.h: 1221: asm("VRCON equ 099h");
[; <" VRCON equ 099h ;# ">
[; ;pic16f676.h: 1224: typedef union {
[; ;pic16f676.h: 1225: struct {
[; ;pic16f676.h: 1226: unsigned VR :4;
[; ;pic16f676.h: 1227: unsigned :1;
[; ;pic16f676.h: 1228: unsigned VRR :1;
[; ;pic16f676.h: 1229: unsigned :1;
[; ;pic16f676.h: 1230: unsigned VREN :1;
[; ;pic16f676.h: 1231: };
[; ;pic16f676.h: 1232: struct {
[; ;pic16f676.h: 1233: unsigned VR0 :1;
[; ;pic16f676.h: 1234: unsigned VR1 :1;
[; ;pic16f676.h: 1235: unsigned VR2 :1;
[; ;pic16f676.h: 1236: unsigned VR3 :1;
[; ;pic16f676.h: 1237: };
[; ;pic16f676.h: 1238: } VRCONbits_t;
[; ;pic16f676.h: 1239: extern volatile VRCONbits_t VRCONbits @ 0x099;
[; ;pic16f676.h: 1279: extern volatile unsigned char EEDAT @ 0x09A;
"1281
[; ;pic16f676.h: 1281: asm("EEDAT equ 09Ah");
[; <" EEDAT equ 09Ah ;# ">
[; ;pic16f676.h: 1284: extern volatile unsigned char EEDATA @ 0x09A;
"1286
[; ;pic16f676.h: 1286: asm("EEDATA equ 09Ah");
[; <" EEDATA equ 09Ah ;# ">
[; ;pic16f676.h: 1289: typedef union {
[; ;pic16f676.h: 1290: struct {
[; ;pic16f676.h: 1291: unsigned EEDAT :8;
[; ;pic16f676.h: 1292: };
[; ;pic16f676.h: 1293: } EEDATbits_t;
[; ;pic16f676.h: 1294: extern volatile EEDATbits_t EEDATbits @ 0x09A;
[; ;pic16f676.h: 1302: typedef union {
[; ;pic16f676.h: 1303: struct {
[; ;pic16f676.h: 1304: unsigned EEDAT :8;
[; ;pic16f676.h: 1305: };
[; ;pic16f676.h: 1306: } EEDATAbits_t;
[; ;pic16f676.h: 1307: extern volatile EEDATAbits_t EEDATAbits @ 0x09A;
[; ;pic16f676.h: 1317: extern volatile unsigned char EEADR @ 0x09B;
"1319
[; ;pic16f676.h: 1319: asm("EEADR equ 09Bh");
[; <" EEADR equ 09Bh ;# ">
[; ;pic16f676.h: 1324: extern volatile unsigned char EECON1 @ 0x09C;
"1326
[; ;pic16f676.h: 1326: asm("EECON1 equ 09Ch");
[; <" EECON1 equ 09Ch ;# ">
[; ;pic16f676.h: 1329: typedef union {
[; ;pic16f676.h: 1330: struct {
[; ;pic16f676.h: 1331: unsigned RD :1;
[; ;pic16f676.h: 1332: unsigned WR :1;
[; ;pic16f676.h: 1333: unsigned WREN :1;
[; ;pic16f676.h: 1334: unsigned WRERR :1;
[; ;pic16f676.h: 1335: };
[; ;pic16f676.h: 1336: } EECON1bits_t;
[; ;pic16f676.h: 1337: extern volatile EECON1bits_t EECON1bits @ 0x09C;
[; ;pic16f676.h: 1362: extern volatile unsigned char EECON2 @ 0x09D;
"1364
[; ;pic16f676.h: 1364: asm("EECON2 equ 09Dh");
[; <" EECON2 equ 09Dh ;# ">
[; ;pic16f676.h: 1369: extern volatile unsigned char ADRESL @ 0x09E;
"1371
[; ;pic16f676.h: 1371: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f676.h: 1376: extern volatile unsigned char ADCON1 @ 0x09F;
"1378
[; ;pic16f676.h: 1378: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f676.h: 1381: typedef union {
[; ;pic16f676.h: 1382: struct {
[; ;pic16f676.h: 1383: unsigned :4;
[; ;pic16f676.h: 1384: unsigned ADCS :3;
[; ;pic16f676.h: 1385: };
[; ;pic16f676.h: 1386: struct {
[; ;pic16f676.h: 1387: unsigned :4;
[; ;pic16f676.h: 1388: unsigned ADCS0 :1;
[; ;pic16f676.h: 1389: unsigned ADCS1 :1;
[; ;pic16f676.h: 1390: unsigned ADCS2 :1;
[; ;pic16f676.h: 1391: };
[; ;pic16f676.h: 1392: } ADCON1bits_t;
[; ;pic16f676.h: 1393: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f676.h: 1423: extern volatile __bit ADCS0 @ (((unsigned) &ADCON1)*8) + 4;
[; ;pic16f676.h: 1425: extern volatile __bit ADCS1 @ (((unsigned) &ADCON1)*8) + 5;
[; ;pic16f676.h: 1427: extern volatile __bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;
[; ;pic16f676.h: 1429: extern volatile __bit ADFM @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f676.h: 1431: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f676.h: 1433: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f676.h: 1435: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f676.h: 1437: extern volatile __bit ANS0 @ (((unsigned) &ANSEL)*8) + 0;
[; ;pic16f676.h: 1439: extern volatile __bit ANS1 @ (((unsigned) &ANSEL)*8) + 1;
[; ;pic16f676.h: 1441: extern volatile __bit ANS2 @ (((unsigned) &ANSEL)*8) + 2;
[; ;pic16f676.h: 1443: extern volatile __bit ANS3 @ (((unsigned) &ANSEL)*8) + 3;
[; ;pic16f676.h: 1445: extern volatile __bit ANS4 @ (((unsigned) &ANSEL)*8) + 4;
[; ;pic16f676.h: 1447: extern volatile __bit ANS5 @ (((unsigned) &ANSEL)*8) + 5;
[; ;pic16f676.h: 1449: extern volatile __bit ANS6 @ (((unsigned) &ANSEL)*8) + 6;
[; ;pic16f676.h: 1451: extern volatile __bit ANS7 @ (((unsigned) &ANSEL)*8) + 7;
[; ;pic16f676.h: 1453: extern volatile __bit CAL0 @ (((unsigned) &OSCCAL)*8) + 2;
[; ;pic16f676.h: 1455: extern volatile __bit CAL1 @ (((unsigned) &OSCCAL)*8) + 3;
[; ;pic16f676.h: 1457: extern volatile __bit CAL2 @ (((unsigned) &OSCCAL)*8) + 4;
[; ;pic16f676.h: 1459: extern volatile __bit CAL3 @ (((unsigned) &OSCCAL)*8) + 5;
[; ;pic16f676.h: 1461: extern volatile __bit CAL4 @ (((unsigned) &OSCCAL)*8) + 6;
[; ;pic16f676.h: 1463: extern volatile __bit CAL5 @ (((unsigned) &OSCCAL)*8) + 7;
[; ;pic16f676.h: 1465: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f676.h: 1467: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f676.h: 1469: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f676.h: 1471: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f676.h: 1473: extern volatile __bit CINV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16f676.h: 1475: extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16f676.h: 1477: extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16f676.h: 1479: extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16f676.h: 1481: extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16f676.h: 1483: extern volatile __bit CMIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f676.h: 1485: extern volatile __bit CMIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f676.h: 1487: extern volatile __bit COUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16f676.h: 1489: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f676.h: 1491: extern volatile __bit EEIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f676.h: 1493: extern volatile __bit EEIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f676.h: 1495: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f676.h: 1497: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f676.h: 1499: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f676.h: 1501: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f676.h: 1503: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f676.h: 1505: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f676.h: 1507: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f676.h: 1509: extern volatile __bit IOCA0 @ (((unsigned) &IOCA)*8) + 0;
[; ;pic16f676.h: 1511: extern volatile __bit IOCA1 @ (((unsigned) &IOCA)*8) + 1;
[; ;pic16f676.h: 1513: extern volatile __bit IOCA2 @ (((unsigned) &IOCA)*8) + 2;
[; ;pic16f676.h: 1515: extern volatile __bit IOCA3 @ (((unsigned) &IOCA)*8) + 3;
[; ;pic16f676.h: 1517: extern volatile __bit IOCA4 @ (((unsigned) &IOCA)*8) + 4;
[; ;pic16f676.h: 1519: extern volatile __bit IOCA5 @ (((unsigned) &IOCA)*8) + 5;
[; ;pic16f676.h: 1521: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f676.h: 1523: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f676.h: 1525: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f676.h: 1527: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f676.h: 1529: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f676.h: 1531: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f676.h: 1533: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f676.h: 1535: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f676.h: 1537: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f676.h: 1539: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f676.h: 1541: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f676.h: 1543: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f676.h: 1545: extern volatile __bit RAIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f676.h: 1547: extern volatile __bit RAIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f676.h: 1549: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f676.h: 1551: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f676.h: 1553: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f676.h: 1555: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f676.h: 1557: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f676.h: 1559: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f676.h: 1561: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f676.h: 1563: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f676.h: 1565: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f676.h: 1567: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f676.h: 1569: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f676.h: 1571: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f676.h: 1573: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f676.h: 1575: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f676.h: 1577: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f676.h: 1579: extern volatile __bit T1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f676.h: 1581: extern volatile __bit T1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f676.h: 1583: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f676.h: 1585: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f676.h: 1587: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f676.h: 1589: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f676.h: 1591: extern volatile __bit TMR1GE @ (((unsigned) &T1CON)*8) + 6;
[; ;pic16f676.h: 1593: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f676.h: 1595: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f676.h: 1597: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f676.h: 1599: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f676.h: 1601: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f676.h: 1603: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f676.h: 1605: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f676.h: 1607: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f676.h: 1609: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f676.h: 1611: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f676.h: 1613: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f676.h: 1615: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f676.h: 1617: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f676.h: 1619: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f676.h: 1621: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f676.h: 1623: extern volatile __bit VCFG @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f676.h: 1625: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic16f676.h: 1627: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic16f676.h: 1629: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic16f676.h: 1631: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic16f676.h: 1633: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic16f676.h: 1635: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic16f676.h: 1637: extern volatile __bit WPUA0 @ (((unsigned) &WPUA)*8) + 0;
[; ;pic16f676.h: 1639: extern volatile __bit WPUA1 @ (((unsigned) &WPUA)*8) + 1;
[; ;pic16f676.h: 1641: extern volatile __bit WPUA2 @ (((unsigned) &WPUA)*8) + 2;
[; ;pic16f676.h: 1643: extern volatile __bit WPUA4 @ (((unsigned) &WPUA)*8) + 4;
[; ;pic16f676.h: 1645: extern volatile __bit WPUA5 @ (((unsigned) &WPUA)*8) + 5;
[; ;pic16f676.h: 1647: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f676.h: 1649: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f676.h: 1651: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f676.h: 1653: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f676.h: 1655: extern volatile __bit nBOD @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f676.h: 1657: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f676.h: 1659: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f676.h: 1661: extern volatile __bit nGPPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f676.h: 1663: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f676.h: 1665: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f676.h: 1667: extern volatile __bit nRAPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f676.h: 1669: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f676.h: 1671: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic.h: 29: extern void __nop(void);
[; ;pic.h: 78: extern unsigned int flash_read(unsigned short addr);
[; ;pic.h: 142: extern void flash_erase(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 153: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 155: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 193: extern __bank0 unsigned char __resetbits;
[; ;pic.h: 194: extern __bank0 __bit __powerdown;
[; ;pic.h: 195: extern __bank0 __bit __timeout;
"13 LCDCHECK.c
[p x FOSC=INTRCIO ]
"14
[p x WDTE=OFF ]
"15
[p x PWRTE=OFF ]
"16
[p x MCLRE=OFF ]
"17
[p x BOREN=ON ]
"18
[p x CP=OFF ]
"19
[p x CPD=OFF ]
"20
[v _D `uc ~T0 @X0 -> 10 `i e ]
[; ;LCDCHECK.c: 20: char D[10];
"40
[v _Lcd8_Port `(v ~T0 @X0 1 ef1`uc ]
"41
{
[; ;LCDCHECK.c: 40: void Lcd8_Port(char a)
[; ;LCDCHECK.c: 41: {
[e :U _Lcd8_Port ]
"40
[v _a `uc ~T0 @X0 1 r1 ]
"41
[f ]
[; ;LCDCHECK.c: 42: if(a & 1)
"42
[e $ ! != & -> _a `i -> 1 `i -> 0 `i 67  ]
[; ;LCDCHECK.c: 43: D[0] = 1;
"43
[e = *U + &U _D * -> -> -> 0 `i `ui `ux -> -> # *U &U _D `ui `ux -> -> 1 `i `uc ]
[e $U 68  ]
"44
[e :U 67 ]
[; ;LCDCHECK.c: 44: else
[; ;LCDCHECK.c: 45: D[0] = 0;
"45
[e = *U + &U _D * -> -> -> 0 `i `ui `ux -> -> # *U &U _D `ui `ux -> -> 0 `i `uc ]
[e :U 68 ]
[; ;LCDCHECK.c: 47: if(a & 2)
"47
[e $ ! != & -> _a `i -> 2 `i -> 0 `i 69  ]
[; ;LCDCHECK.c: 48: D[1] = 1;
"48
[e = *U + &U _D * -> -> -> 1 `i `ui `ux -> -> # *U &U _D `ui `ux -> -> 1 `i `uc ]
[e $U 70  ]
"49
[e :U 69 ]
[; ;LCDCHECK.c: 49: else
[; ;LCDCHECK.c: 50: D[1] = 0;
"50
[e = *U + &U _D * -> -> -> 1 `i `ui `ux -> -> # *U &U _D `ui `ux -> -> 0 `i `uc ]
[e :U 70 ]
[; ;LCDCHECK.c: 52: if(a & 4)
"52
[e $ ! != & -> _a `i -> 4 `i -> 0 `i 71  ]
[; ;LCDCHECK.c: 53: D[2] = 1;
"53
[e = *U + &U _D * -> -> -> 2 `i `ui `ux -> -> # *U &U _D `ui `ux -> -> 1 `i `uc ]
[e $U 72  ]
"54
[e :U 71 ]
[; ;LCDCHECK.c: 54: else
[; ;LCDCHECK.c: 55: D[2] = 0;
"55
[e = *U + &U _D * -> -> -> 2 `i `ui `ux -> -> # *U &U _D `ui `ux -> -> 0 `i `uc ]
[e :U 72 ]
[; ;LCDCHECK.c: 57: if(a & 8)
"57
[e $ ! != & -> _a `i -> 8 `i -> 0 `i 73  ]
[; ;LCDCHECK.c: 58: D[3] = 1;
"58
[e = *U + &U _D * -> -> -> 3 `i `ui `ux -> -> # *U &U _D `ui `ux -> -> 1 `i `uc ]
[e $U 74  ]
"59
[e :U 73 ]
[; ;LCDCHECK.c: 59: else
[; ;LCDCHECK.c: 60: D[3] = 0;
"60
[e = *U + &U _D * -> -> -> 3 `i `ui `ux -> -> # *U &U _D `ui `ux -> -> 0 `i `uc ]
[e :U 74 ]
[; ;LCDCHECK.c: 62: if(a & 16)
"62
[e $ ! != & -> _a `i -> 16 `i -> 0 `i 75  ]
[; ;LCDCHECK.c: 63: D[4] = 1;
"63
[e = *U + &U _D * -> -> -> 4 `i `ui `ux -> -> # *U &U _D `ui `ux -> -> 1 `i `uc ]
[e $U 76  ]
"64
[e :U 75 ]
[; ;LCDCHECK.c: 64: else
[; ;LCDCHECK.c: 65: D[4] = 0;
"65
[e = *U + &U _D * -> -> -> 4 `i `ui `ux -> -> # *U &U _D `ui `ux -> -> 0 `i `uc ]
[e :U 76 ]
[; ;LCDCHECK.c: 67: if(a & 32)
"67
[e $ ! != & -> _a `i -> 32 `i -> 0 `i 77  ]
[; ;LCDCHECK.c: 68: D[5] = 1;
"68
[e = *U + &U _D * -> -> -> 5 `i `ui `ux -> -> # *U &U _D `ui `ux -> -> 1 `i `uc ]
[e $U 78  ]
"69
[e :U 77 ]
[; ;LCDCHECK.c: 69: else
[; ;LCDCHECK.c: 70: D[5] = 0;
"70
[e = *U + &U _D * -> -> -> 5 `i `ui `ux -> -> # *U &U _D `ui `ux -> -> 0 `i `uc ]
[e :U 78 ]
[; ;LCDCHECK.c: 72: if(a & 64)
"72
[e $ ! != & -> _a `i -> 64 `i -> 0 `i 79  ]
[; ;LCDCHECK.c: 73: D[6] = 1;
"73
[e = *U + &U _D * -> -> -> 6 `i `ui `ux -> -> # *U &U _D `ui `ux -> -> 1 `i `uc ]
[e $U 80  ]
"74
[e :U 79 ]
[; ;LCDCHECK.c: 74: else
[; ;LCDCHECK.c: 75: D[6] = 0;
"75
[e = *U + &U _D * -> -> -> 6 `i `ui `ux -> -> # *U &U _D `ui `ux -> -> 0 `i `uc ]
[e :U 80 ]
[; ;LCDCHECK.c: 77: if(a & 128)
"77
[e $ ! != & -> _a `i -> 128 `i -> 0 `i 81  ]
[; ;LCDCHECK.c: 78: D[7] = 1;
"78
[e = *U + &U _D * -> -> -> 7 `i `ui `ux -> -> # *U &U _D `ui `ux -> -> 1 `i `uc ]
[e $U 82  ]
"79
[e :U 81 ]
[; ;LCDCHECK.c: 79: else
[; ;LCDCHECK.c: 80: D[7] = 0;
"80
[e = *U + &U _D * -> -> -> 7 `i `ui `ux -> -> # *U &U _D `ui `ux -> -> 0 `i `uc ]
[e :U 82 ]
[; ;LCDCHECK.c: 82: for(int i = 0;i<=7;i++)
"82
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ <= _i -> 7 `i 83  ]
[e $U 84  ]
"83
[e :U 83 ]
[; ;LCDCHECK.c: 83: {
{
[; ;LCDCHECK.c: 84: RC1 = 1;
"84
[e = _RC1 -> -> 1 `i `b ]
[; ;LCDCHECK.c: 85: _delay((unsigned long)((10)*(4000000/4000000.0)));
"85
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;LCDCHECK.c: 86: RC0 = D[i];
"86
[e = _RC0 -> *U + &U _D * -> -> _i `ui `ux -> -> # *U &U _D `ui `ux `b ]
[; ;LCDCHECK.c: 88: RC1 = 0;
"88
[e = _RC1 -> -> 0 `i `b ]
"92
}
"82
[e ++ _i -> 1 `i ]
[e $ <= _i -> 7 `i 83  ]
[e :U 84 ]
"92
}
[; ;LCDCHECK.c: 92: }
[; ;LCDCHECK.c: 94: }
"94
[e :UE 66 ]
}
"95
[v _Lcd8_Cmd `(v ~T0 @X0 1 ef1`uc ]
"96
{
[; ;LCDCHECK.c: 95: void Lcd8_Cmd(char a)
[; ;LCDCHECK.c: 96: {
[e :U _Lcd8_Cmd ]
"95
[v _a `uc ~T0 @X0 1 r1 ]
"96
[f ]
[; ;LCDCHECK.c: 97: RC4 = 0;
"97
[e = _RC4 -> -> 0 `i `b ]
[; ;LCDCHECK.c: 98: Lcd8_Port(a);
"98
[e ( _Lcd8_Port (1 _a ]
[; ;LCDCHECK.c: 99: RC5 = 1;
"99
[e = _RC5 -> -> 1 `i `b ]
[; ;LCDCHECK.c: 100: _delay((unsigned long)((5)*(4000000/4000.0)));
"100
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;LCDCHECK.c: 101: RC5 = 0;
"101
[e = _RC5 -> -> 0 `i `b ]
[; ;LCDCHECK.c: 102: }
"102
[e :UE 86 ]
}
"104
[v _Lcd8_Clear `(i ~T0 @X0 1 ef ]
"105
{
[; ;LCDCHECK.c: 104: Lcd8_Clear()
[; ;LCDCHECK.c: 105: {
[e :U _Lcd8_Clear ]
[f ]
[; ;LCDCHECK.c: 106: Lcd8_Cmd(1);
"106
[e ( _Lcd8_Cmd (1 -> -> 1 `i `uc ]
[; ;LCDCHECK.c: 107: }
"107
[e :UE 87 ]
}
"109
[v _Lcd8_Set_Cursor `(v ~T0 @X0 1 ef2`uc`uc ]
"110
{
[; ;LCDCHECK.c: 109: void Lcd8_Set_Cursor(char a, char b)
[; ;LCDCHECK.c: 110: {
[e :U _Lcd8_Set_Cursor ]
"109
[v _a `uc ~T0 @X0 1 r1 ]
[v _b `uc ~T0 @X0 1 r2 ]
"110
[f ]
[; ;LCDCHECK.c: 111: if(a == 1)
"111
[e $ ! == -> _a `i -> 1 `i 89  ]
[; ;LCDCHECK.c: 112: Lcd8_Cmd(0x80 + b);
"112
[e ( _Lcd8_Cmd (1 -> + -> 128 `i -> _b `i `uc ]
[e $U 90  ]
"113
[e :U 89 ]
[; ;LCDCHECK.c: 113: else if(a == 2)
[e $ ! == -> _a `i -> 2 `i 91  ]
[; ;LCDCHECK.c: 114: Lcd8_Cmd(0xC0 + b);
"114
[e ( _Lcd8_Cmd (1 -> + -> 192 `i -> _b `i `uc ]
[e :U 91 ]
"115
[e :U 90 ]
[; ;LCDCHECK.c: 115: }
[e :UE 88 ]
}
"117
[v _Lcd8_Init `(v ~T0 @X0 1 ef ]
"118
{
[; ;LCDCHECK.c: 117: void Lcd8_Init()
[; ;LCDCHECK.c: 118: {
[e :U _Lcd8_Init ]
[f ]
[; ;LCDCHECK.c: 119: Lcd8_Port(0x00);
"119
[e ( _Lcd8_Port (1 -> -> 0 `i `uc ]
[; ;LCDCHECK.c: 120: RC4 = 0;
"120
[e = _RC4 -> -> 0 `i `b ]
[; ;LCDCHECK.c: 121: _delay((unsigned long)((25)*(4000000/4000.0)));
"121
[e ( __delay (1 -> * -> -> 25 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;LCDCHECK.c: 123: Lcd8_Cmd(0x30);
"123
[e ( _Lcd8_Cmd (1 -> -> 48 `i `uc ]
[; ;LCDCHECK.c: 124: _delay((unsigned long)((5)*(4000000/4000.0)));
"124
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;LCDCHECK.c: 125: Lcd8_Cmd(0x30);
"125
[e ( _Lcd8_Cmd (1 -> -> 48 `i `uc ]
[; ;LCDCHECK.c: 126: _delay((unsigned long)((15)*(4000000/4000.0)));
"126
[e ( __delay (1 -> * -> -> 15 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;LCDCHECK.c: 127: Lcd8_Cmd(0x30);
"127
[e ( _Lcd8_Cmd (1 -> -> 48 `i `uc ]
[; ;LCDCHECK.c: 129: Lcd8_Cmd(0x38);
"129
[e ( _Lcd8_Cmd (1 -> -> 56 `i `uc ]
[; ;LCDCHECK.c: 130: Lcd8_Cmd(0x0C);
"130
[e ( _Lcd8_Cmd (1 -> -> 12 `i `uc ]
[; ;LCDCHECK.c: 131: Lcd8_Cmd(0x01);
"131
[e ( _Lcd8_Cmd (1 -> -> 1 `i `uc ]
[; ;LCDCHECK.c: 132: Lcd8_Cmd(0x06);
"132
[e ( _Lcd8_Cmd (1 -> -> 6 `i `uc ]
[; ;LCDCHECK.c: 133: }
"133
[e :UE 92 ]
}
"135
[v _Lcd8_Write_Char `(v ~T0 @X0 1 ef1`uc ]
"136
{
[; ;LCDCHECK.c: 135: void Lcd8_Write_Char(char a)
[; ;LCDCHECK.c: 136: {
[e :U _Lcd8_Write_Char ]
"135
[v _a `uc ~T0 @X0 1 r1 ]
"136
[f ]
[; ;LCDCHECK.c: 137: RC4 = 1;
"137
[e = _RC4 -> -> 1 `i `b ]
[; ;LCDCHECK.c: 138: Lcd8_Port(a);
"138
[e ( _Lcd8_Port (1 _a ]
[; ;LCDCHECK.c: 139: RC5 = 1;
"139
[e = _RC5 -> -> 1 `i `b ]
[; ;LCDCHECK.c: 140: _delay((unsigned long)((4)*(4000000/4000.0)));
"140
[e ( __delay (1 -> * -> -> 4 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;LCDCHECK.c: 141: RC5 = 0;
"141
[e = _RC5 -> -> 0 `i `b ]
[; ;LCDCHECK.c: 142: }
"142
[e :UE 93 ]
}
"144
[v _Lcd8_Write_String `(v ~T0 @X0 1 ef1`*uc ]
"145
{
[; ;LCDCHECK.c: 144: void Lcd8_Write_String(char *a)
[; ;LCDCHECK.c: 145: {
[e :U _Lcd8_Write_String ]
"144
[v _a `*uc ~T0 @X0 1 r1 ]
"145
[f ]
"146
[v _i `i ~T0 @X0 1 a ]
[; ;LCDCHECK.c: 146: int i;
[; ;LCDCHECK.c: 147: for(i=0;a[i]!='\0';i++)
"147
{
[e = _i -> 0 `i ]
[e $U 98  ]
"148
[e :U 95 ]
[; ;LCDCHECK.c: 148: Lcd8_Write_Char(a[i]);
[e ( _Lcd8_Write_Char (1 *U + _a * -> _i `x -> -> # *U _a `i `x ]
"147
[e ++ _i -> 1 `i ]
[e :U 98 ]
[e $ != -> *U + _a * -> _i `x -> -> # *U _a `i `x `ui -> 0 `ui 95  ]
[e :U 96 ]
"148
}
[; ;LCDCHECK.c: 149: }
"149
[e :UE 94 ]
}
"151
[v _Lcd8_Shift_Right `(v ~T0 @X0 1 ef ]
"152
{
[; ;LCDCHECK.c: 151: void Lcd8_Shift_Right()
[; ;LCDCHECK.c: 152: {
[e :U _Lcd8_Shift_Right ]
[f ]
[; ;LCDCHECK.c: 153: Lcd8_Cmd(0x1C);
"153
[e ( _Lcd8_Cmd (1 -> -> 28 `i `uc ]
[; ;LCDCHECK.c: 154: }
"154
[e :UE 99 ]
}
"156
[v _Lcd8_Shift_Left `(v ~T0 @X0 1 ef ]
"157
{
[; ;LCDCHECK.c: 156: void Lcd8_Shift_Left()
[; ;LCDCHECK.c: 157: {
[e :U _Lcd8_Shift_Left ]
[f ]
[; ;LCDCHECK.c: 158: Lcd8_Cmd(0x18);
"158
[e ( _Lcd8_Cmd (1 -> -> 24 `i `uc ]
[; ;LCDCHECK.c: 159: }
"159
[e :UE 100 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"161
[v _main `(v ~T0 @X0 1 ef ]
"162
{
[; ;LCDCHECK.c: 161: void main()
[; ;LCDCHECK.c: 162: {
[e :U _main ]
[f ]
[; ;LCDCHECK.c: 164: ANSEL = 0x00;
"164
[e = _ANSEL -> -> 0 `i `uc ]
[; ;LCDCHECK.c: 165: CMCON = 0x07;
"165
[e = _CMCON -> -> 7 `i `uc ]
[; ;LCDCHECK.c: 167: TRISA = 0x00;
"167
[e = _TRISA -> -> 0 `i `uc ]
[; ;LCDCHECK.c: 169: TRISC = 0x00;
"169
[e = _TRISC -> -> 0 `i `uc ]
[; ;LCDCHECK.c: 170: Lcd8_Init();
"170
[e ( _Lcd8_Init ..  ]
[; ;LCDCHECK.c: 171: Lcd8_Set_Cursor(1,1);
"171
[e ( _Lcd8_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;LCDCHECK.c: 173: while(1)
"173
[e :U 103 ]
[; ;LCDCHECK.c: 174: {
"174
{
[; ;LCDCHECK.c: 176: Lcd8_Write_String("SDSAD");
"176
[e ( _Lcd8_Write_String (1 -> :s 1C `*uc ]
"179
}
[e :U 102 ]
"173
[e $U 103  ]
[e :U 104 ]
[; ;LCDCHECK.c: 179: }
[; ;LCDCHECK.c: 180: }
"180
[e :UE 101 ]
}
[a 1C 83 68 83 65 68 0 ]

